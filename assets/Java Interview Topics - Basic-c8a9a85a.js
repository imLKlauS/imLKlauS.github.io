import{_ as r}from"./ValaxyMain.vue_vue_type_style_index_0_lang-1ca00d4c.js";import{_ as y,c as D,w as n,o as u,a as l,b as s,d as t,r as e,e as A,p as C}from"./app-153f3e80.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-68ddcc0a.js";import"./YunCard.vue_vue_type_style_index_0_lang-c5d7c298.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-4103d543.js";const Yo=JSON.parse('{"title":"Java面试专题-基础篇","description":"","frontmatter":{"cover":"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/wallhaven-g8oee3_1920x1080.png","title":"Java面试专题-基础篇","date":"2023-04-18T14:52:05.000Z","updated":"2023-04-19T16:02:37.000Z","categories":"Java","tags":["ArrayList","LinkedList","HashMap","Hashtable","Singleton"],"top":121,"outline":"deep"},"headers":[{"level":2,"title":"1. ArrayList","slug":"_1-arraylist","link":"#_1-arraylist","children":[{"level":3,"title":"补充","slug":"补充","link":"#补充","children":[]}]},{"level":2,"title":"2. Iterator","slug":"_2-iterator","link":"#_2-iterator","children":[]},{"level":2,"title":"3. LinkedList VS ArrayList","slug":"_3-linkedlist-vs-arraylist","link":"#_3-linkedlist-vs-arraylist","children":[]},{"level":2,"title":"4. HashMap","slug":"_4-hashmap","link":"#_4-hashmap","children":[{"level":3,"title":"1）基本数据结构","slug":"_1）基本数据结构","link":"#_1）基本数据结构","children":[]},{"level":3,"title":"2）树化与退化","slug":"_2）树化与退化","link":"#_2）树化与退化","children":[]},{"level":3,"title":"3）索引计算","slug":"_3）索引计算","link":"#_3）索引计算","children":[]},{"level":3,"title":"4）put 与扩容","slug":"_4）put-与扩容","link":"#_4）put-与扩容","children":[]},{"level":3,"title":"5）并发问题","slug":"_5）并发问题","link":"#_5）并发问题","children":[]},{"level":3,"title":"6）key 的设计","slug":"_6）key-的设计","link":"#_6）key-的设计","children":[]}]},{"level":2,"title":"4.1. HashMap-快速查找","slug":"_4-1-hashmap-快速查找","link":"#_4-1-hashmap-快速查找","children":[]},{"level":2,"title":"4.2. HashMap-链表过长的解决方案","slug":"_4-2-hashmap-链表过长的解决方案","link":"#_4-2-hashmap-链表过长的解决方案","children":[{"level":3,"title":"4.2.1.扩容","slug":"_4-2-1-扩容","link":"#_4-2-1-扩容","children":[]},{"level":3,"title":"4.2.2. 树化","slug":"_4-2-2-树化","link":"#_4-2-2-树化","children":[]}]},{"level":2,"title":"5. 单例模式","slug":"_5-单例模式","link":"#_5-单例模式","children":[{"level":3,"title":"饿汉式","slug":"饿汉式","link":"#饿汉式","children":[]},{"level":3,"title":"枚举饿汉式","slug":"枚举饿汉式","link":"#枚举饿汉式","children":[]},{"level":3,"title":"懒汉式","slug":"懒汉式","link":"#懒汉式","children":[]},{"level":3,"title":"双检锁懒汉式","slug":"双检锁懒汉式","link":"#双检锁懒汉式","children":[]},{"level":3,"title":"内部类懒汉式","slug":"内部类懒汉式","link":"#内部类懒汉式","children":[]},{"level":3,"title":"JDK 中单例的体现","slug":"jdk-中单例的体现","link":"#jdk-中单例的体现","children":[]}]}],"relativePath":"pages/posts/Java Interview Topics - Basic.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Java Interview Topics - Basic.md","lastUpdated":null}'),c=JSON.parse('{"title":"Java面试专题-基础篇","description":"","frontmatter":{"cover":"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/wallhaven-g8oee3_1920x1080.png","title":"Java面试专题-基础篇","date":"2023-04-18T14:52:05.000Z","updated":"2023-04-19T16:02:37.000Z","categories":"Java","tags":["ArrayList","LinkedList","HashMap","Hashtable","Singleton"],"top":121,"outline":"deep"},"headers":[{"level":2,"title":"1. ArrayList","slug":"_1-arraylist","link":"#_1-arraylist","children":[{"level":3,"title":"补充","slug":"补充","link":"#补充","children":[]}]},{"level":2,"title":"2. Iterator","slug":"_2-iterator","link":"#_2-iterator","children":[]},{"level":2,"title":"3. LinkedList VS ArrayList","slug":"_3-linkedlist-vs-arraylist","link":"#_3-linkedlist-vs-arraylist","children":[]},{"level":2,"title":"4. HashMap","slug":"_4-hashmap","link":"#_4-hashmap","children":[{"level":3,"title":"1）基本数据结构","slug":"_1）基本数据结构","link":"#_1）基本数据结构","children":[]},{"level":3,"title":"2）树化与退化","slug":"_2）树化与退化","link":"#_2）树化与退化","children":[]},{"level":3,"title":"3）索引计算","slug":"_3）索引计算","link":"#_3）索引计算","children":[]},{"level":3,"title":"4）put 与扩容","slug":"_4）put-与扩容","link":"#_4）put-与扩容","children":[]},{"level":3,"title":"5）并发问题","slug":"_5）并发问题","link":"#_5）并发问题","children":[]},{"level":3,"title":"6）key 的设计","slug":"_6）key-的设计","link":"#_6）key-的设计","children":[]}]},{"level":2,"title":"4.1. HashMap-快速查找","slug":"_4-1-hashmap-快速查找","link":"#_4-1-hashmap-快速查找","children":[]},{"level":2,"title":"4.2. HashMap-链表过长的解决方案","slug":"_4-2-hashmap-链表过长的解决方案","link":"#_4-2-hashmap-链表过长的解决方案","children":[{"level":3,"title":"4.2.1.扩容","slug":"_4-2-1-扩容","link":"#_4-2-1-扩容","children":[]},{"level":3,"title":"4.2.2. 树化","slug":"_4-2-2-树化","link":"#_4-2-2-树化","children":[]}]},{"level":2,"title":"5. 单例模式","slug":"_5-单例模式","link":"#_5-单例模式","children":[{"level":3,"title":"饿汉式","slug":"饿汉式","link":"#饿汉式","children":[]},{"level":3,"title":"枚举饿汉式","slug":"枚举饿汉式","link":"#枚举饿汉式","children":[]},{"level":3,"title":"懒汉式","slug":"懒汉式","link":"#懒汉式","children":[]},{"level":3,"title":"双检锁懒汉式","slug":"双检锁懒汉式","link":"#双检锁懒汉式","children":[]},{"level":3,"title":"内部类懒汉式","slug":"内部类懒汉式","link":"#内部类懒汉式","children":[]},{"level":3,"title":"JDK 中单例的体现","slug":"jdk-中单例的体现","link":"#jdk-中单例的体现","children":[]}]}],"relativePath":"pages/posts/Java Interview Topics - Basic.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Java Interview Topics - Basic.md","lastUpdated":null}'),g={name:"pages/posts/Java Interview Topics - Basic.md",data(){return{data:c,frontmatter:c.frontmatter}},setup(){C("pageData",c)}},F={id:"基础篇",tabindex:"-1"},h={id:"_1-arraylist",tabindex:"-1"},m=l("p",null,[l("strong",null,"要求")],-1),d=l("ul",null,[l("li",null,"掌握 ArrayList 扩容规则")],-1),_=l("p",null,[l("strong",null,"扩容规则")],-1),b=l("ol",null,[l("li",null,[l("strong",null,"ArrayList()"),s(" 会使用"),l("strong",null,"长度为零"),s("的数组")])],-1),S=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418114304421.png",alt:"image-20230418114304421"})],-1),L=l("ol",{start:"2"},[l("li",null,[l("strong",null,"ArrayList(int initialCapacity)"),s(" 会使用"),l("strong",null,"指定容量"),s("的数组")])],-1),f=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418114403174.png",alt:"image-20230418114403174"})],-1),E=l("ol",{start:"3"},[l("li",null,"public ArrayList(Collection<? extends E> c) 会使用 c 的大小作为数组容量")],-1),v=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418114502997.png",alt:"image-20230418114502997"})],-1),k=l("ol",{start:"4"},[l("li",null,"add(Object o) 首次扩容为 10，再次扩容为上次容量的 1.5 倍")],-1),K=l("ul",null,[l("li",null,"第一次添加数组，数组为0，发生第一次扩容"),l("li",null,"第一个元素放入新数组索引0，新数组替换旧数组(首次为0)")],-1),N=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418115017704.png",alt:"image-20230418115017704"})],-1),x=l("ul",null,[l("li",null,"再次扩容为上次容量的 1.5 倍，完成扩容并添加元素，新数组替换旧数组，旧数组没人引用就会被垃圾回收")],-1),M=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418115545132.png",alt:"image-20230418115545132"})],-1),T=l("ul",null,[l("li",null,"以后扩容按上次容量+上次容量右移1位")],-1),H=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418115811928.png",alt:"image-20230418115811928"})],-1),I=l("ul",null,[l("li",null,"此方式为调用的add方法得到的扩容结果")],-1),B=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418120314176.png",alt:"image-20230418120314176"})],-1),j=l("ol",{start:"5"},[l("li",null,"addAll(Collection c) 没有元素时，扩容为 Math.max(10, 实际元素个数)，有元素时为 Math.max(原容量 1.5 倍, 实际元素个数)")],-1),w=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418120611741.png",alt:"image-20230418120611741"})],-1),O=l("ul",null,[l("li",null,"第一次空数组扩容(元素个数<10)")],-1),V=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418120727097.png",alt:"image-20230418120727097"})],-1),J=l("ul",null,[l("li",null,"第一次空数组扩容(10<元素个数<15，此时会拿当前元素个数与当前容量下次扩容的容量二者之间的较大值作为当前容量)")],-1),U=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418121100137.png",alt:"image-20230418121100137"})],-1),$=l("ul",null,[l("li",null,"第一次非空数组扩容(规则一样)")],-1),q=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418121501578.png",alt:"image-20230418121501578"})],-1),P=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418121608015.png",alt:"image-20230418121608015"})],-1),R=l("p",null,"其中第 4 点必须知道，其它几点视个人情况而定",-1),z=l("p",null,[l("strong",null,"提示")],-1),Z=l("ul",null,[l("li",null,[s("测试代码见 "),l("code",null,"day01.list.TestArrayList"),s(" ，这里不再列出")]),l("li",null,[s("要"),l("strong",null,"注意"),s("的是，示例中用反射方式来更直观地反映 ArrayList 的扩容特征，但从 JDK 9 由于模块化的影响，对反射做了较多限制，需要在运行测试代码时添加 VM 参数 "),l("code",null,"--add-opens java.base/java.util=ALL-UNNAMED"),s(" 方能运行通过，后面的例子都有相同问题")])],-1),G=l("blockquote",null,[l("p",null,[l("em",null,[l("strong",null,"代码说明")])]),l("ul",null,[l("li",null,"day01.list.TestArrayList#arrayListGrowRule 演示了 add(Object) 方法的扩容规则，输入参数 n 代表打印多少次扩容后的数组长度")])],-1),W={id:"补充",tabindex:"-1"},Q=l("blockquote",null,[l("p",null,[l("strong",null,"addAll扩容机制"),s("：添加元素后的元素个数与下一次扩容数作比较 0->10:3个->10,11->11;10->15:13->15,16->16")])],-1),X={id:"_2-iterator",tabindex:"-1"},Y=l("p",null,[l("strong",null,"要求")],-1),ll=l("ul",null,[l("li",null,"掌握什么是 Fail-Fast、什么是 Fail-Safe")],-1),sl=l("p",null,"Fail-Fast 与 Fail-Safe",-1),nl=l("ul",null,[l("li",null,"ArrayList 是 fail-fast 的典型代表，遍历的同时不能修改，尽快失败"),l("li",null,"fail-fast 一旦发现遍历的同时其它人来修改，则立刻抛异常")],-1),ol=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418133457466.png",alt:"image-20230418133457466"})],-1),tl=l("ul",null,[l("li",null,"fail-fast实现原理")],-1),al=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418135557765.png",alt:"image-20230418135557765"})],-1),el=l("ul",null,[l("li",null,"CopyOnWriteArrayList 是 fail-safe 的典型代表，遍历的同时可以修改，原理是读写分离"),l("li",null,"fail-safe 发现遍历的同时其它人来修改，应当能有应对策略，例如牺牲一致性来让整个遍历运行完成")],-1),cl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418133702722.png",alt:"image-20230418133702722"})],-1),il=l("ul",null,[l("li",null,"fail-safe实现原理")],-1),pl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418142258054.png",alt:"image-20230418142258054"})],-1),rl=l("p",null,[l("strong",null,"提示")],-1),yl=l("ul",null,[l("li",null,[l("p",null,[s("测试代码见 "),l("code",null,"day01.list.FailFastVsFailSafe"),s("，这里不再列出")])]),l("li",null,[l("p",null,"第一次笔记："),l("ul",null,[l("li",null,[l("p",null,[l("strong",null,"fail-fast:")]),l("ul",null,[l("li",null,[l("p",null,"​ 1.调用迭代器Iterator构造方法并初始化成员变量")]),l("li",null,[l("p",null,"​ 2.检查：expectedModCount(迭代一开始记录的修改次数)与modCount(外面list的修改次数)做对比，不等则抛异常")])])]),l("li",null,[l("p",null,[l("strong",null,"fail-safe:")]),l("ul",null,[l("li",null,"​ list.add中每次调用add方法时都会把旧的数组拷贝一份，并让长度加一，把新加的元素放到扩容数组(新数组)最后一个位置，即添加和遍历的数组不同，互不干扰")])])])]),l("li",null,[l("p",null,"第二次笔记："),l("ul",null,[l("li",null,[l("p",null,[l("strong",null,"failfast"),s("：")]),l("ul",null,[l("li",null,"增强for循环开始前的修改次数（crud）modCount"),l("li",null,"expectedModCount初始值=modCount"),l("li",null,"每次遍历元素前（迭代）都检查以上的值是否相等，在遍历期间并发修改了，等遍历下个元素时就会抛出异常")])]),l("li",null,[l("p",null,[l("strong",null,"failsafe"),s("：")]),l("ul",null,[l("li",null,"iterator遍历集合，list.add方法每次添加元素，都会拷贝一份原集合并让容量加一，在并发修改时迭代器是不知道，遍历的还是原集合，即添加是一个集合，遍历是另一个集合")])])])])],-1),Dl={id:"_3-linkedlist-vs-arraylist",tabindex:"-1"},ul=l("strong",null,"ArrayList",-1),Al=l("p",null,[l("strong",null,"要求")],-1),Cl=l("ul",null,[l("li",null,"能够说清楚 LinkedList 对比 ArrayList 的区别，并重视纠正部分错误的认知")],-1),gl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418144031416.png",alt:"image-20230418144031416"})],-1),Fl=l("ul",null,[l("li",null,"两者查询元素内容的时间复杂度都是O(n)，都不太适合用来查询，查询可以选择更高效的数据结构，如HashMap、TreeMap等")],-1),hl=l("p",null,[l("strong",null,"LinkedList")],-1),ml=l("ol",null,[l("li",null,"基于双向链表，无需连续内存")],-1),dl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418143629513.png",alt:"image-20230418143629513"})],-1),_l=l("ol",null,[l("li",null,"随机访问慢（要沿着链表遍历）")],-1),bl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418143509162.png",alt:"image-20230418143509162"})],-1),Sl=l("ol",null,[l("li",null,"头尾插入删除性能高"),l("li",null,"占用内存多")],-1),Ll=l("p",null,[l("strong",null,"ArrayList")],-1),fl=l("ol",null,[l("li",null,"基于数组，需要连续内存")],-1),El=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418143617488.png",alt:"image-20230418143617488"})],-1),vl=l("ol",null,[l("li",null,"随机访问快（指根据下标访问）")],-1),kl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418143527810.png",alt:"image-20230418143527810"})],-1),Kl=l("ol",null,[l("li",null,"尾部插入、删除性能可以，其它部分插入、删除都会移动数据，因此性能会低")],-1),Nl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418144640481.png",alt:"image-20230418144640481"})],-1),xl=l("ol",null,[l("li",null,"可以利用 cpu 缓存，局部性原理（将读取变量和其相邻的变量也一次读到CPU缓存中）")],-1),Ml=l("blockquote",null,[l("p",null,[l("em",null,[l("strong",null,"代码说明")])]),l("ul",null,[l("li",null,"day01.list.ArrayListVsLinkedList#randomAccess 对比随机访问性能")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418143722912.png",alt:"image-20230418143722912"})]),l("ul",null,[l("li",null,"day01.list.ArrayListVsLinkedList#addMiddle 对比向中间插入性能"),l("li",null,"day01.list.ArrayListVsLinkedList#addFirst 对比头部插入性能"),l("li",null,"day01.list.ArrayListVsLinkedList#addLast 对比尾部插入性能")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418145338167.png",alt:"image-20230418145338167"})]),l("ul",null,[l("li",null,"day01.list.ArrayListVsLinkedList#linkedListSize 打印一个 LinkedList 占用内存"),l("li",null,"day01.list.ArrayListVsLinkedList#arrayListSize 打印一个 ArrayList 占用内存")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418153454935.png",alt:"image-20230418153454935"})]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418150308326.png",alt:"image-20230418150308326"})]),l("ul",null,[l("li",null,[l("p",null,"CPU进行计算的数据还是来自内存中的，比如进行加法运算，首先将内存中a的变量的读取到CPU的寄存器中，然后将b的值读到另一个寄存器中，数据都有了就进行接下来的加法运算，计算后的结果也会写到内存中的c变量，这样就完成了一次加法运算的计算过程，在这个计算过程里瓶颈在于内存变量的读和写上，因为内存的读写效率是非常低的，读一次、写一次大约需要花几百纳秒，对于CPU来讲这个时间是非常漫长的，CPU执行一次计算是少于纳秒级别的，也许花了不到1纳秒就完成了，但等待数据读进来写出去就要花费成百倍的时间，显然是不可接受的；")]),l("li",null,[l("p",null,"因此需要在CPU与内存之间加入CPU缓存，这个缓存的读写性能就比内存高很多了，CPU缓存又分为1级、2级、3级缓存，速度快的能达到10纳秒，速度慢的也能到达几十纳秒，对比内存的几百纳秒就快了很多")])]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418151824705.png",alt:"image-20230418151824705"})]),l("ul",null,[l("li",null,[s("局部性原理 "),l("ul",null,[l("li",null,"往缓存中读数据时的一种规则，一种优化措施"),l("li",null,"将某个数据以及它相邻的数据都读取到缓存中，它会出于这样一种假设，当读取某个变量时，它相邻的变量也会有很大几率被访问到，即拿到某个元素后，有很大几率会遍历数组，即可以直接在缓存中遍历了，无需再到内存中遍历")])])]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418152143557.png",alt:"image-20230418152143557"})]),l("ul",null,[l("li",null,"链表的局部性原理就不可行，因为第一个元素与第二个元素相邻的有点远")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418152725657.png",alt:"image-20230418152725657"})]),l("ul",null,[l("li",null,"CPU缓存的空间也是有限的，如果将2和3也读到缓存，就会把之前的数据清空掉了，因此链表就不能很好的配合CPU缓存(局部性原理)来提升性能")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418152845212.png",alt:"image-20230418152845212"})])],-1),Tl={id:"_4-hashmap",tabindex:"-1"},Hl=l("p",null,[l("strong",null,"要求")],-1),Il=l("ul",null,[l("li",null,"掌握 HashMap 的基本数据结构"),l("li",null,"掌握树化"),l("li",null,"理解索引计算方法、二次 hash 的意义、容量对索引计算的影响"),l("li",null,"掌握 put 流程、扩容、扩容因子"),l("li",null,"理解并发使用 HashMap 可能导致的问题"),l("li",null,"理解 key 的设计")],-1),Bl={id:"_1）基本数据结构",tabindex:"-1"},jl=l("ul",null,[l("li",null,"1.7 数组 + 链表"),l("li",null,"1.8 数组 + （链表 | 红黑树）")],-1),wl=l("blockquote",null,[l("p",null,"更形象的演示，见资料中的 hash-demo.jar，运行需要 jdk14 以上环境，进入 jar 包目录，执行下面命令"),l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"java -jar --add-exports java.base/jdk.internal.misc=ALL-UNNAMED hash-demo.jar")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])])],-1),Ol={id:"_2）树化与退化",tabindex:"-1"},Vl=l("p",null,[l("strong",null,"树化意义")],-1),Jl=l("ul",null,[l("li",null,"红黑树用来避免 DoS 攻击，防止链表超长时性能下降，树化应当是偶然情况，是保底策略"),l("li",null,[s("hash 表的查找，更新的时间复杂度是 O(1)"),l("em",null,"O"),s("(1)，而红黑树的查找，更新的时间复杂度是 O(log_2⁡n )"),l("em",null,"O"),s("("),l("em",null,[s("l"),l("strong",null,"o"),s("g")]),s("2⁡"),l("em",null,"n"),s(")，TreeNode 占用空间也比普通 Node 的大，如非必要，尽量还是使用链表")]),l("li",null,"hash 值如果足够随机，则在 hash 表内按泊松分布，在负载因子 0.75 的情况下，长度超过 8 的链表出现概率是 0.00000006，树化阈值选择 8 就是为了让树化几率足够小")],-1),Ul=l("p",null,[l("strong",null,"树化规则")],-1),$l=l("ul",null,[l("li",null,"当链表长度超过树化阈值 8 时，先尝试扩容来减少链表长度，如果数组容量已经 >=64，才会进行树化")],-1),ql=l("p",null,[l("strong",null,"退化规则")],-1),Pl=l("ul",null,[l("li",null,"情况1：在扩容时如果拆分树时，树元素个数 <= 6 则会退化链表"),l("li",null,"情况2：remove 树节点时，若 root、root.left、root.right、root.left.left 有一个为 null ，也会退化为链表")],-1),Rl={id:"_3）索引计算",tabindex:"-1"},zl=l("ul",null,[l("li",null,[l("p",null,"前置知识")]),l("li",null,[l("p",null,"1.与运算（&）"),l("p",null,"参加运算的两个数据，按二进制位进行“与”运算。"),l("p",null,"运算规则：0&0=0; 0&1=0; 1&0=0; 1&1=1;"),l("p",null,"即：两位同时为“1”，结果才为“1”，否则为0"),l("p",null,"例如：3&5 即 0000 0011 & 0000 0101 = 0000 0001 因此，3&5的值得1。"),l("p",null,"例如：9&5 即 0000 1001 (9的二进制补码)&00000101 (5的二进制补码) =00000001 (1的二进制补码)可见9&5=1。")]),l("li",null,[l("p",null,"2.或运算（|）"),l("p",null,"参加运算的两个对象，按二进制位进行“或”运算。"),l("p",null,"运算规则：0|0=0； 0|1=1； 1|0=1； 1|1=1；"),l("p",null,"即 ：参加运算的两个对象只要有一个为1，其值为1。"),l("p",null,"例如:3|5　即 0000 0011 | 0000 0101 = 0000 0111 因此，3|5的值得7。"),l("p",null,"例如：9|5可写算式如下： 00001001|00000101 =00001101 (十进制为13)可见9|5=13")]),l("li",null,[l("p",null,"3.异或运算（^）"),l("p",null,"参加运算的两个数据，按二进制位进行“异或”运算。"),l("p",null,"运算规则：0^0=0； 0^1=1； 1^0=1； 1^1=0；"),l("p",null,"即：参加运算的两个对象，如果两个相应位为“异”（值不同），则该位结果为1，否则为0。"),l("p",null,"例如：9^5可写成算式如下： 00001001^00000101=00001100 (十进制为12)可见9^5=12"),l("p",null,"8421码指的是四位二进制数，从0000~1001，分别代表十进制0~9，其每位的权分别为2的三次方（8）、2的二次方（4）、2的一次方（2）、2的0次方（1）。除了8421码外，类似的还有5421码。"),l("p",null,"01010(10) 10000(16) 11010(26) ----------(10&16) 00000->0 ----------(16&16) 10000->16(2的四次方（16）)")]),l("li",null,[l("p",null,"索引如何计算？hashCode都有了，为何还要提供hash()方法？数组容量为何是2的n次幂？")])],-1),Zl=l("p",null,[l("strong",null,"索引计算方法"),s("（"),l("strong",null,"为了配合容量是 2 的 n 次幂的优化手段"),s(" ）")],-1),Gl=l("ul",null,[l("li",null,[l("p",null,"首先，计算对象的 hashCode()")]),l("li",null,[l("p",null,"再进行调用 HashMap 的 hash() 方法进行二次哈希"),l("ul",null,[l("li",null,[l("p",null,[s("二次 hash() 是为了综合高位数据，让哈希分布更为均匀；"),l("strong",null,"计算索hashCode的值更均匀，hashCode分布得越均匀，链表就越不会有过长的情况")]),l("ul",null,[l("li",null,"HashMap1.8二次hash")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418201334955.png",alt:"image-20230418201334955"})]),l("ul",null,[l("li",null,"HashMap1.7二次hash")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418201418625.png",alt:"image-20230418201418625"})])]),l("li",null,[l("p",null,"hashCode足够均匀")])]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418202517544.png",alt:"image-20230418202517544"})]),l("ul",null,[l("li",null,"hashCode选取不够好，不够随机")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418202727603.png",alt:"image-20230418202727603"})]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418202829734.png",alt:"image-20230418202829734"})]),l("ul",null,[l("li",null,"进行二次hash扰动函数，使得hashCode分布更均匀，防止超长链表的产生")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418203040744.png",alt:"image-20230418203040744"})]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418203513964.png",alt:"image-20230418203513964"})])]),l("li",null,[l("p",null,"最后 & (capacity – 1) 得到索引（容量capacity必须为2的n次幂）")])],-1),Wl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418195049973.png",alt:"image-20230418195049973"})],-1),Ql=l("p",null,[l("strong",null,"数组容量为何是 2 的 n 次幂")],-1),Xl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418195337120.png",alt:"image-20230418195337120"})],-1),Yl=l("ol",null,[l("li",null,"计算索引时效率更高：如果是 2 的 n 次幂可以使用位与运算代替取模"),l("li",null,"扩容时重新计算索引效率更高： hash & oldCap == 0 的元素留在原来位置 ，否则新位置 = 旧位置 + oldCap = 10 + 16")],-1),ls=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418204559461.png",alt:"image-20230418204559461"})],-1),ss=l("p",null,[l("strong",null,"注意")],-1),ns=l("ul",null,[l("li",null,[s("二次 hash 是为了配合 "),l("strong",null,"容量是 2 的 n 次幂"),s(" 这一设计前提，如果 hash 表的容量不是 2 的 n 次幂，则不必二次 hash，即想要更好的hash分布性，容量值就选择质数")])],-1),os=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418210235261.png",alt:"image-20230418210235261"})],-1),ts=l("ul",null,[l("li",null,[l("strong",null,"容量是 2 的 n 次幂"),s(" 这一设计计算索引效率更好（追求性能），但 hash 的分散性就不好，需要二次 hash 来作为补偿，没有采用这一设计的典型例子是 Hashtable，以下为Hashtable的扩容规律")])],-1),as=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418210834027.png",alt:"image-20230418210834027"})],-1),es={id:"_4）put-与扩容",tabindex:"-1"},cs=l("p",null,[l("strong",null,"put 流程")],-1),is=l("ul",null,[l("li",null,"1.8put流程")],-1),ps=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419110228837.png",alt:"image-20230419110228837"})],-1),rs=l("ol",null,[l("li",null,"HashMap 是懒惰创建数组的，首次使用才创建数组"),l("li",null,"计算索引（桶下标）"),l("li",null,"如果桶下标还没人占用，创建 Node 占位返回"),l("li",null,[s("如果桶下标已经有人占用 "),l("ol",null,[l("li",null,"已经是 TreeNode 走红黑树的添加或更新逻辑"),l("li",null,"是普通 Node，走链表的添加或更新逻辑，如果链表长度超过树化阈值，走树化逻辑")])]),l("li",null,"返回前检查容量是否超过阈值，一旦超过进行扩容")],-1),ys=l("p",null,[l("strong",null,"1.7 与 1.8 的区别")],-1),Ds=l("ol",null,[l("li",null,[l("p",null,"链表插入节点时"),l("ol",null,[l("li",null,"1.7 是头插法")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419110745737.png",alt:"image-20230419110745737"})]),l("ol",{start:"2"},[l("li",null,"1.8 是尾插法")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419110538952.png",alt:"image-20230419110538952"})])]),l("li",null,[l("p",null,"1.7 是大于等于阈值且没有空位时才扩容"),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419112014919.png",alt:"image-20230419112014919"})])]),l("li",null,[l("p",null,"而 1.8 是大于阈值就扩容")]),l("li",null,[l("p",null,"1.8 在扩容计算 Node 索引时，会优化"),l("ul",null,[l("li",null,"hash & oldCap == 0 的元素留在原来位置 ，否则新位置 = 旧位置 + oldCap = 10 + 16")])])],-1),us=l("p",null,[l("strong",null,"扩容（加载）因子为何默认是 0.75f")],-1),As=l("ol",null,[l("li",null,[l("p",null,"在空间占用与查询时间之间取得较好的权衡")]),l("li",null,[l("p",null,"大于这个值，空间节省了，但链表就会比较长影响性能"),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419112518996.png",alt:"image-20230419112518996"})])]),l("li",null,[l("p",null,"小于这个值，冲突减少了，但扩容就会更频繁，空间占用也更多")])],-1),Cs=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419112817313.png",alt:"image-20230419112817313"})],-1),gs=l("blockquote",null,[l("p",null,"计算桶下标：hash()->(hashcode >>> 16 ^ hashcode )&(capacity-1) capacity为2的n次幂，计算索引效率更高，但哈希分布不均匀；capacity为质数时哈希分布均匀（hashtable）。 hashmap1.8:超过容量扩容阈值（＞¾），先创建扩容新数组再将数据迁移到新数组；链表插入方式为尾插法 1.7:链表插入方式为头插法；")],-1),Fs={id:"_5）并发问题",tabindex:"-1"},hs=l("p",null,"1.7链表迁移过程(a和b迁移前后都是同一个对象，只是改变了它们的一些引用地址，并没有发生对象的创建)",-1),ms=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419121302636.png",alt:"image-20230419121302636"})],-1),ds=l("p",null,[l("strong",null,"扩容死链（1.7 会存在）")],-1),_s=l("p",null,"1.7 源码如下：",-1),bs=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"transfer"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"Entry"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," newTable"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"boolean"),l("span",{style:{color:"#A6ACCD"}}," rehash"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," newCapacity "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," newTable"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"length"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"for"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"Entry"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"K"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#C792EA"}},"V"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," e "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},":"),l("span",{style:{color:"#A6ACCD"}}," table"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"while"),l("span",{style:{color:"#89DDFF"}},"(null"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"!="),l("span",{style:{color:"#A6ACCD"}}," e"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#C792EA"}},"Entry"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"K"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#C792EA"}},"V"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," next "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"next"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"rehash"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"                e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"hash "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"key "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"?"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#F78C6C"}},"0"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},":"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"hash"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"key"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," i "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"indexFor"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"hash"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," newCapacity"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"next "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," newTable"),l("span",{style:{color:"#89DDFF"}},"["),l("span",{style:{color:"#A6ACCD"}},"i"),l("span",{style:{color:"#89DDFF"}},"];")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            newTable"),l("span",{style:{color:"#89DDFF"}},"["),l("span",{style:{color:"#A6ACCD"}},"i"),l("span",{style:{color:"#89DDFF"}},"]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," e"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            e "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," next"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Ss=l("ul",null,[l("li",null,"e 和 next 都是局部变量，用来指向当前节点和下一个节点"),l("li",null,"线程1（绿色）的临时变量 e 和 next 刚引用了这俩节点，还未来得及移动节点，发生了线程切换，由线程2（蓝色）完成扩容和迁移")],-1),Ls=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20210831084325075.png",alt:"image-20210831084325075"})],-1),fs=l("ul",null,[l("li",null,"线程2 扩容完成，由于头插法，链表顺序颠倒。但线程1 的临时变量 e 和 next 还引用了这俩节点，还要再来一遍迁移")],-1),Es=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20210831084723383.png",alt:"image-20210831084723383"})],-1),vs=l("ul",null,[l("li",null,[l("p",null,"第一次循环"),l("ul",null,[l("li",null,"循环接着线程切换前运行，注意此时 e 指向的是节点 a，next 指向的是节点 b"),l("li",null,"e 头插 a 节点，注意图中画了两份 a 节点，但事实上只有一个（为了不让箭头特别乱画了两份）")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20210831084855348.png",alt:"image-20210831084855348"})]),l("ul",null,[l("li",null,"当循环结束是 e 会指向 next 也就是 b 节点")])])],-1),ks=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419121935915.png",alt:"image-20230419121935915"})],-1),Ks=l("ul",null,[l("li",null,[l("p",null,"第二次循环"),l("ul",null,[l("li",null,"第二轮开始，next 指向了节点 a"),l("li",null,"e 头插节点 b")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20210831085329449.png",alt:"image-20210831085329449"})]),l("ul",null,[l("li",null,"当循环结束时，e 指向 next 也就是节点 a")])])],-1),Ns=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419122220312.png",alt:"image-20230419122220312"})],-1),xs=l("ul",null,[l("li",null,[l("p",null,"第三次循环"),l("ul",null,[l("li",null,"next 指向了 null")]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419133332478.png",alt:"image-20230419133332478"})]),l("ul",null,[l("li",null,[s("e 头插节点 a，"),l("strong",null,"a 的 next 指向了 b"),s("（之前 a.next 一直是 null），b 的 next 指向 a，死链已成")])]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20210831085543224.png",alt:"image-20210831085543224"})]),l("ul",null,[l("li",null,"当循环结束时，e 指向 next 也就是 null，因此第四次循环时会正常退出")])])],-1),Ms=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419133643654.png",alt:"image-20230419133643654"})],-1),Ts=l("p",null,[l("strong",null,"数据错乱（1.7，1.8 都会存在）")],-1),Hs=l("ul",null,[l("li",null,[s("代码参考 "),l("code",null,"day01.map.HashMapMissData"),s("，具体调试步骤参考视频")])],-1),Is=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419115103985.png",alt:"image-20230419115103985"})],-1),Bs=l("blockquote",null,[l("p",null,[l("em",null,[l("strong",null,"补充代码说明")])]),l("ul",null,[l("li",null,"day01.map.HashMapDistribution 演示 map 中链表长度符合泊松分布"),l("li",null,[s("day01.map.DistributionAffectedByCapacity 演示容量及 hashCode 取值对分布的影响 "),l("ul",null,[l("li",null,"day01.map.DistributionAffectedByCapacity#hashtableGrowRule 演示了 Hashtable 的扩容规律"),l("li",null,"day01.sort.Utils#randomArray 如果 hashCode 足够随机，容量是否是 2 的 n 次幂影响不大"),l("li",null,"day01.sort.Utils#lowSameArray 如果 hashCode 低位一样的多，容量是 2 的 n 次幂会导致分布不均匀"),l("li",null,"day01.sort.Utils#evenArray 如果 hashCode 偶数的多，容量是 2 的 n 次幂会导致分布不均匀"),l("li",null,"由此得出对于容量是 2 的 n 次幂的设计来讲，二次 hash 非常重要")])]),l("li",null,"day01.map.HashMapVsHashtable 演示了对于同样数量的单词字符串放入 HashMap 和 Hashtable 分布上的区别")])],-1),js={id:"_6）key-的设计",tabindex:"-1"},ws=l("p",null,[l("strong",null,"key 的设计要求")],-1),Os=l("ol",null,[l("li",null,[l("p",null,"HashMap 的 key 可以为 null，但 Map 的其他实现则不然")]),l("li",null,[l("p",null,[s("作为 key 的对象，必须实现 hashCode 和 equals，并且 "),l("strong",null,"key 的内容不能修改（不可变）")]),l("ul",null,[l("li",null,"重写hashCode方法是为了让我们的key在整个HashMap中有更好的分布性，提高查询性能"),l("li",null,"重写equals方法是为了将来如果计算两个对象的key的索引都一样，进一步需要用equals进行比较，看看是不是两个相同的对象"),l("li",null,"两个对象的hashCode相等，equals不一定相等；两个对象的equals相等，hashCode一定相等")])]),l("li",null,[l("p",null,"key 的 hashCode 应该有良好的散列性")])],-1),Vs=l("p",null,"如果 key 可变，例如修改了 age 会导致再次查询时查询不到，因此平时用整数、字符串等作为key，这些类的内容不可变",-1),Js=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419134838699.png",alt:"image-20230419134838699"})],-1),Us=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"HashMapMutableKey"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"HashMap"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"Student"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Object"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," map "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"HashMap"),l("span",{style:{color:"#89DDFF"}},"<>();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"Student"),l("span",{style:{color:"#A6ACCD"}}," stu "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Student"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"张三"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#F78C6C"}},"18"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        map"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"put"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"stu"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Object"),l("span",{style:{color:"#89DDFF"}},"());")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"map"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"get"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"stu"),l("span",{style:{color:"#89DDFF"}},"));")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        stu"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"age "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#F78C6C"}},"19"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"map"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"get"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"stu"),l("span",{style:{color:"#89DDFF"}},"));")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Student"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#A6ACCD"}}," name"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," age"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Student"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"name"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"age"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF"}},"this."),l("span",{style:{color:"#A6ACCD"}},"name "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," name"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF"}},"this."),l("span",{style:{color:"#A6ACCD"}},"age "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," age"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getName"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," name"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"setName"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"name"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF"}},"this."),l("span",{style:{color:"#A6ACCD"}},"name "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," name"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getAge"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," age"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"setAge"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"age"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF"}},"this."),l("span",{style:{color:"#A6ACCD"}},"age "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," age"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"boolean"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"equals"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"Object"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"o"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(this"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," o"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"true;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"o "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"||"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getClass"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"!="),l("span",{style:{color:"#A6ACCD"}}," o"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"getClass"),l("span",{style:{color:"#89DDFF"}},"())"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"false;")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#C792EA"}},"Student"),l("span",{style:{color:"#A6ACCD"}}," student "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Student"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," o"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," age "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," student"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"age "),l("span",{style:{color:"#89DDFF"}},"&&"),l("span",{style:{color:"#A6ACCD"}}," Objects"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"equals"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"name"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," student"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"name"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"int"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"hashCode"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," Objects"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"hash"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"name"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," age"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),$s=l("p",null,[l("strong",null,"String 对象的 hashCode() 设计")],-1),qs=l("ul",null,[l("li",null,"目标是达到较为均匀的散列效果，每个字符串的 hashCode 足够独特"),l("li",null,[s("字符串中的每个字符都可以表现为一个数字，称为 S_i"),l("em",null,"S**i"),s("，其中 i 的范围是 0 ~ n - 1")]),l("li",null,[s("散列公式为： S_0∗31^{(n-1)}+ S_1∗31^{(n-2)}+ … S_i ∗ 31^{(n-1-i)}+ …S_{(n-1)}∗31^0"),l("em",null,"S"),s("0∗31("),l("em",null,"n"),s("−1)+"),l("em",null,"S"),s("1∗31("),l("em",null,"n"),s("−2)+…"),l("em",null,"S**i"),s("∗31("),l("em",null,"n"),s("−1−"),l("em",null,"i"),s(")+…"),l("em",null,"S"),s("("),l("em",null,"n"),s("−1)∗310")]),l("li",null,[s("31 代入公式有较好的散列特性，并且 31 * h 可以被优化为 "),l("ul",null,[l("li",null,[s("即 32 ∗h -h32∗"),l("em",null,"h"),s("−"),l("em",null,"h")]),l("li",null,[s("即 2^5 ∗h -h25∗"),l("em",null,"h"),s("−"),l("em",null,"h")]),l("li",null,[s("即 h≪5 -h"),l("em",null,"h"),s("≪5−"),l("em",null,"h")])])])],-1),Ps=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419135639704.png",alt:"image-20230419135639704"})],-1),Rs={id:"_4-1-hashmap-快速查找",tabindex:"-1"},zs=l("ul",null,[l("li",null,"ArrayList查找效率较低")],-1),Zs=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418161635803.png",alt:"image-20230418161635803"})],-1),Gs=l("ul",null,[l("li",null,"HashMap通过索引计算直接找到元素(hash运算)，无链表情况查找时间复杂度为O(1)，有链表情况就看链表长度了，时间复杂度为O(n)")],-1),Ws=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418161857746.png",alt:"image-20230418161857746"})],-1),Qs={id:"_4-2-hashmap-链表过长的解决方案",tabindex:"-1"},Xs=l("ul",null,[l("li",null,"形成链表：keys相同的固定hash；keys的hash%容量相同")],-1),Ys={id:"_4-2-1-扩容",tabindex:"-1"},ln=l("ul",null,[l("li",null,"正常情况")],-1),sn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418162855531.png",alt:"image-20230418162855531"})],-1),nn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418162904156.png",alt:"image-20230418162904156"})],-1),on=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418162909932.png",alt:"image-20230418162909932"})],-1),tn=l("ul",null,[l("li",null,"极端情况，只能树化为红黑树了")],-1),an=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418162935840.png",alt:"image-20230418162935840"})],-1),en={id:"_4-2-2-树化",tabindex:"-1"},cn=l("ul",null,[l("li",null,"链表->红黑树：当容量为16，在某个桶下标形成链表的8个元素添加元素，仅进行扩容为32，再添加扩容到64才会树化")],-1),pn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418164530243.png",alt:"image-20230418164530243"})],-1),rn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418165555721.png",alt:"image-20230418165555721"})],-1),yn=l("ul",null,[l("li",null,"满足树化条件(容量>=64且链表长度>8)，红黑树父节点左侧都是比它小的元素，右侧都是比它大的元素，子节点同理，hash码相同时才比较，按照key的字符串值比较，查找的时间复杂度为O(log2(n))")],-1),Dn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418165707584.png",alt:"image-20230418165707584"})],-1),un=l("ul",null,[l("li",null,"链表长度是可能出现超过8的情况")],-1),An=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418170758857.png",alt:"image-20230418170758857"})],-1),Cn={id:"红黑树的意义-树化阈值",tabindex:"-1"},gn=l("ul",null,[l("li",null,[l("p",null,"为何要用红黑树，为何一上来不树化，树化阈值为何是8，何时会树化，何时会退化为链表？"),l("ul",null,[l("li",null,[l("p",null,"因为链表较长时会影响整个HashMap的性能，1.8之后引入红黑树，即使链表较长也不会对性能有太大的影响")]),l("li",null,[l("p",null,"链表->红黑树：当容量为16，在某个桶下标形成链表的8个元素添加元素，仅进行扩容为32，再添加扩容到64才会树化")]),l("li",null,[l("p",null,"链表短的时候，链表性能大于红黑树，链表长时性能才远远不如红黑树，且红黑树占用内存比链表大得多，非必要不树化")]),l("li",null,[l("p",null,"红黑树是一种非正常情况，下图为23W多个正常单词的hash分布情况，若没有刻意构造hash码，在负载因子0.75的情况下，链表出现8的概率非常低，为0.00000006")])]),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418181214309.png",alt:"image-20230418181214309"})]),l("ul",null,[l("li",null,"红黑树用来避免 DoS 攻击，防止链表超长时性能下降，树化应当是偶然情况，是保底策略")])])],-1),Fn={id:"树退化链表-情况1",tabindex:"-1"},hn=l("ul",null,[l("li",null,"在扩容时如果拆分树时，树元素个数 <= 6 则会退化链表")],-1),mn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418183806555.png",alt:"image-20230418183806555"})],-1),dn=l("ul",null,[l("li",null,"在扩容时如果拆分树时，树元素个数 > 6 则不会退化链表")],-1),_n=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418184454141.png",alt:"image-20230418184454141"})],-1),bn={id:"树退化链表-情况2",tabindex:"-1"},Sn=l("ul",null,[l("li",null,"remove 树节点时，若 root(爷)、root.left(左孩子)、root.right(右孩子)、root.left.left(左孙子) 有一个为 null ，也会退化为链表")],-1),Ln=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418192832140.png",alt:"image-20230418192832140"})],-1),fn=l("ul",null,[l("li",null,"例子2")],-1),En=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230418193518600.png",alt:"image-20230418193518600"})],-1),vn={id:"_5-单例模式",tabindex:"-1"},kn=l("p",null,[l("strong",null,"要求")],-1),Kn=l("ul",null,[l("li",null,"掌握五种单例模式的实现方式"),l("li",null,"理解为何 DCL 实现时要使用 volatile 修饰静态变量"),l("li",null,"了解 jdk 中用到单例的场景")],-1),Nn={id:"饿汉式",tabindex:"-1"},xn=l("strong",null,"饿汉式",-1),Mn=l("ul",null,[l("li",null,"提前创建单例对象")],-1),Tn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419141144975.png",alt:"image-20230419141144975"})],-1),Hn=l("ul",null,[l("li",null,"实现Serializable接口利用反射破坏单例")],-1),In=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419141539054.png",alt:"image-20230419141539054"})],-1),Bn=l("ul",null,[l("li",null,"反序列化破坏单例")],-1),jn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419142100218.png",alt:"image-20230419142100218"})],-1),wn=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Singleton1"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"implements"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Serializable"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton1"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"INSTANCE "),l("span",{style:{color:"#89DDFF"}},"!="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"throw"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"RuntimeException"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"单例对象不能重复创建"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"private Singleton1()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"final"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton1"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton1"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton1"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getInstance"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"otherMethod"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"otherMethod()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Object"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"readResolve"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),On=l("ul",null,[l("li",null,"构造方法抛出异常是防止反射破坏单例")],-1),Vn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419141740516.png",alt:"image-20230419141740516"})],-1),Jn=l("ul",null,[l("li",null,[l("code",null,"readResolve()"),s(" 是防止反序列化破坏单例")])],-1),Un=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419142253512.png",alt:"image-20230419142253512"})],-1),$n=l("ul",null,[l("li",null,"unsafe破坏单例")],-1),qn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419142613493.png",alt:"image-20230419142613493"})],-1),Pn={id:"枚举饿汉式",tabindex:"-1"},Rn=l("strong",null,"枚举饿汉式",-1),zn=l("ul",null,[l("li",null,"枚举类一加载并初始化，就会把枚举对象创建出来")],-1),Zn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419143438750.png",alt:"image-20230419143438750"})],-1),Gn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419143148474.png",alt:"image-20230419143148474"})],-1),Wn=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"enum"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Singleton2"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton2"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"private Singleton2()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"toString"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getClass"),l("span",{style:{color:"#89DDFF"}},"()."),l("span",{style:{color:"#82AAFF"}},"getName"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"+"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"@"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"+"),l("span",{style:{color:"#A6ACCD"}}," Integer"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"toHexString"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#82AAFF"}},"hashCode"),l("span",{style:{color:"#89DDFF"}},"());")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton2"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getInstance"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"otherMethod"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"otherMethod()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Qn=l("ul",null,[l("li",null,"枚举饿汉式能天然防止反射、反序列化破坏单例")],-1),Xn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419144121454.png",alt:"image-20230419144121454"})],-1),Yn=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419143856798.png",alt:"image-20230419143856798"})],-1),lo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419143639529.png",alt:"image-20230419143639529"})],-1),so=l("ul",null,[l("li",null,"unsafe依旧可以破坏枚举单例")],-1),no=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419144327173.png",alt:"image-20230419144327173"})],-1),oo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419144146527.png",alt:"image-20230419144146527"})],-1),to={id:"懒汉式",tabindex:"-1"},ao=l("strong",null,"懒汉式",-1),eo=l("ul",null,[l("li",null,"第一次调用getInstance方法时才创建单例对象(非线程安全)")],-1),co=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419144620623.png",alt:"image-20230419144620623"})],-1),io=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Singleton3"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"implements"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Serializable"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton3"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"private Singleton3()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton3"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null;")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"    "),l("span",{style:{color:"#676E95","font-style":"italic"}},"// Singleton3.class  synchronized加在方法上，性能不是特别好，因为单例对象创建好以后，其他线程来访问该同步方法时无需再加锁了，后续的操作不用再进行同步和互斥保护了，不然就影响性能了，只有首次创建单例是才进行线程安全的保护")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"synchronized"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton3"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getInstance"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"INSTANCE "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            INSTANCE "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton3"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"otherMethod"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"otherMethod()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),po=l("ul",null,[l("li",null,"其实只有首次创建单例对象时才需要同步，但该代码实际上每次调用都会同步"),l("li",null,"因此有了下面的双检锁改进")],-1),ro={id:"双检锁懒汉式",tabindex:"-1"},yo=l("strong",null,"双检锁懒汉式",-1),Do=l("ul",null,[l("li",null,"少了内层判断还是会重复创建对象")],-1),uo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419145814990.png",alt:"image-20230419145814990"})],-1),Ao=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Singleton4"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"implements"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Serializable"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton4"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"private Singleton4()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"volatile"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton4"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null;"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#676E95","font-style":"italic"}},"// 可见性，有序性")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton4"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getInstance"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"INSTANCE "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#C792EA"}},"synchronized"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Singleton4"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"class"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"                "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"INSTANCE "),l("span",{style:{color:"#89DDFF"}},"=="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"null)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"                    INSTANCE "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton4"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"                "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"            "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"otherMethod"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"otherMethod()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Co=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419145942353.png",alt:"image-20230419145942353"})],-1),go=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419151419398.png",alt:"image-20230419151419398"})],-1),Fo=l("p",null,"为何必须加 volatile：",-1),ho=l("ul",null,[l("li",null,[l("code",null,"INSTANCE = new Singleton4()"),s(" 不是原子的，分成 3 步：创建对象、调用构造、给静态变量赋值，其中后两步可能被指令重排序优化，变成先赋值、再调用构造")]),l("li",null,[s("如果线程1 先执行了赋值，线程2 执行到第一个 "),l("code",null,"INSTANCE == null"),s(" 时发现 INSTANCE 已经不为 null，此时就会返回一个未完全构造的对象")])],-1),mo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419153459527.png",alt:"image-20230419153459527"})],-1),_o={id:"内部类懒汉式",tabindex:"-1"},bo=l("strong",null,"内部类懒汉式",-1),So=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Singleton5"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"implements"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Serializable"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton5"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"private Singleton5()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Holder"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton5"),l("span",{style:{color:"#A6ACCD"}}," INSTANCE "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Singleton5"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Singleton5"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"getInstance"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," Holder"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"INSTANCE"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"otherMethod"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"otherMethod()"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Lo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419154215932.png",alt:"image-20230419154215932"})],-1),fo=l("ul",null,[l("li",null,"避免了双检锁的缺点")],-1),Eo=l("blockquote",null,[l("p",null,"volatile修饰共享变量可以解决指令重排序(懒汉单例-DCL(双检索)) 给静态变量赋值肯定会放到静态代码块里执行，静态代码块里的代码由JVM来保证，则饿汉式不用考虑线程安全问题，枚举饿汉式同理")],-1),vo={id:"jdk-中单例的体现",tabindex:"-1"},ko=l("strong",null,"JDK 中单例的体现",-1),Ko=l("ul",null,[l("li",null,"Runtime 体现了饿汉式单例")],-1),No=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419154748392.png",alt:"image-20230419154748392"})],-1),xo=l("ul",null,[l("li",null,"Console 体现了双检锁懒汉式单例")],-1),Mo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419154859774.png",alt:"image-20230419154859774"})],-1),To=l("ul",null,[l("li",null,"Collections 中的 EmptyNavigableSet 内部类懒汉式单例")],-1),Ho=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419155254327.png",alt:"image-20230419155254327"})],-1),Io=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419155346324.png",alt:"image-20230419155346324"})],-1),Bo=l("ul",null,[l("li",null,"其他内部类懒汉式例子")],-1),jo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419155525101.png",alt:"image-20230419155525101"})],-1),wo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419155558145.png",alt:"image-20230419155558145"})],-1),Oo=l("ul",null,[l("li",null,"ReverseComparator.REVERSE_ORDER 内部类懒汉式单例")],-1),Vo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419155823830.png",alt:"image-20230419155823830"})],-1),Jo=l("ul",null,[l("li",null,"Comparators.NaturalOrderComparator.INSTANCE 枚举饿汉式单例")],-1),Uo=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230419160119770.png",alt:"image-20230419160119770"})],-1);function $o(a,qo,Po,Ro,i,zo){const o=A,p=r;return u(),D(p,{frontmatter:i.frontmatter,data:i.data},{"main-content-md":n(()=>[l("h1",F,[s("基础篇 "),t(o,{class:"header-anchor",href:"#基础篇","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),l("h2",h,[s("1. ArrayList "),t(o,{class:"header-anchor",href:"#_1-arraylist","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),m,d,_,b,S,L,f,E,v,k,K,N,x,M,T,H,I,B,j,w,O,V,J,U,$,q,P,R,z,Z,G,l("h3",W,[s("补充 "),t(o,{class:"header-anchor",href:"#补充","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Q,l("h2",X,[s("2. Iterator "),t(o,{class:"header-anchor",href:"#_2-iterator","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Y,ll,sl,nl,ol,tl,al,el,cl,il,pl,rl,yl,l("h2",Dl,[s("3. LinkedList VS "),ul,s(),t(o,{class:"header-anchor",href:"#_3-linkedlist-vs-arraylist","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Al,Cl,gl,Fl,hl,ml,dl,_l,bl,Sl,Ll,fl,El,vl,kl,Kl,Nl,xl,Ml,l("h2",Tl,[s("4. HashMap "),t(o,{class:"header-anchor",href:"#_4-hashmap","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Hl,Il,l("h3",Bl,[s("1）基本数据结构 "),t(o,{class:"header-anchor",href:"#_1）基本数据结构","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),jl,wl,l("h3",Ol,[s("2）树化与退化 "),t(o,{class:"header-anchor",href:"#_2）树化与退化","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Vl,Jl,Ul,$l,ql,Pl,l("h3",Rl,[s("3）索引计算 "),t(o,{class:"header-anchor",href:"#_3）索引计算","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),zl,Zl,Gl,Wl,Ql,Xl,Yl,ls,ss,ns,os,ts,as,l("h3",es,[s("4）put 与扩容 "),t(o,{class:"header-anchor",href:"#_4）put-与扩容","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),cs,is,ps,rs,ys,Ds,us,As,Cs,gs,l("h3",Fs,[s("5）并发问题 "),t(o,{class:"header-anchor",href:"#_5）并发问题","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),hs,ms,ds,_s,bs,Ss,Ls,fs,Es,vs,ks,Ks,Ns,xs,Ms,Ts,Hs,Is,Bs,l("h3",js,[s("6）key 的设计 "),t(o,{class:"header-anchor",href:"#_6）key-的设计","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),ws,Os,Vs,Js,Us,$s,qs,Ps,l("h2",Rs,[s("4.1. HashMap-快速查找 "),t(o,{class:"header-anchor",href:"#_4-1-hashmap-快速查找","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),zs,Zs,Gs,Ws,l("h2",Qs,[s("4.2. HashMap-链表过长的解决方案 "),t(o,{class:"header-anchor",href:"#_4-2-hashmap-链表过长的解决方案","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Xs,l("h3",Ys,[s("4.2.1.扩容 "),t(o,{class:"header-anchor",href:"#_4-2-1-扩容","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),ln,sn,nn,on,tn,an,l("h3",en,[s("4.2.2. 树化 "),t(o,{class:"header-anchor",href:"#_4-2-2-树化","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),cn,pn,rn,yn,Dn,un,An,l("h4",Cn,[s("红黑树的意义-树化阈值 "),t(o,{class:"header-anchor",href:"#红黑树的意义-树化阈值","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),gn,l("h4",Fn,[s("树退化链表-情况1 "),t(o,{class:"header-anchor",href:"#树退化链表-情况1","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),hn,mn,dn,_n,l("h4",bn,[s("树退化链表-情况2 "),t(o,{class:"header-anchor",href:"#树退化链表-情况2","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Sn,Ln,fn,En,l("h2",vn,[s("5. 单例模式 "),t(o,{class:"header-anchor",href:"#_5-单例模式","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),kn,Kn,l("h3",Nn,[xn,s(),t(o,{class:"header-anchor",href:"#饿汉式","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Mn,Tn,Hn,In,Bn,jn,wn,On,Vn,Jn,Un,$n,qn,l("h3",Pn,[Rn,s(),t(o,{class:"header-anchor",href:"#枚举饿汉式","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),zn,Zn,Gn,Wn,Qn,Xn,Yn,lo,so,no,oo,l("h3",to,[ao,s(),t(o,{class:"header-anchor",href:"#懒汉式","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),eo,co,io,po,l("h3",ro,[yo,s(),t(o,{class:"header-anchor",href:"#双检锁懒汉式","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Do,uo,Ao,Co,go,Fo,ho,mo,l("h3",_o,[bo,s(),t(o,{class:"header-anchor",href:"#内部类懒汉式","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),So,Lo,fo,Eo,l("h3",vo,[ko,s(),t(o,{class:"header-anchor",href:"#jdk-中单例的体现","aria-hidden":"true"},{default:n(()=>[s("#")]),_:1})]),Ko,No,xo,Mo,To,Ho,Io,Bo,jo,wo,Oo,Vo,Jo,Uo]),"main-header":n(()=>[e(a.$slots,"main-header")]),"main-header-after":n(()=>[e(a.$slots,"main-header-after")]),"main-nav":n(()=>[e(a.$slots,"main-nav")]),"main-content":n(()=>[e(a.$slots,"main-content")]),"main-content-after":n(()=>[e(a.$slots,"main-content-after")]),"main-nav-before":n(()=>[e(a.$slots,"main-nav-before")]),"main-nav-after":n(()=>[e(a.$slots,"main-nav-after")]),comment:n(()=>[e(a.$slots,"comment")]),footer:n(()=>[e(a.$slots,"footer")]),aside:n(()=>[e(a.$slots,"aside")]),"aside-custom":n(()=>[e(a.$slots,"aside-custom")]),default:n(()=>[e(a.$slots,"default")]),_:3},8,["frontmatter","data"])}const lt=y(g,[["render",$o]]);export{Yo as __pageData,lt as default};
