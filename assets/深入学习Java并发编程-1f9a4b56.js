import{_ as i}from"./ValaxyMain.vue_vue_type_style_index_0_lang-3fe089b2.js";import{_ as y,c as D,w as o,o as A,a as l,b as s,d as t,r as e,e as F,p as C}from"./app-5cbb5fc5.js";import"./YunFooter.vue_vue_type_script_setup_true_lang-e12334b3.js";import"./YunCard.vue_vue_type_style_index_0_lang-6e60e44b.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang-6a4a1788.js";const co=JSON.parse('{"title":"深入学习Java并发编程-初级篇","description":"","frontmatter":{"cover":"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/wallhaven-v9x6gm_1920x1080.png","title":"深入学习Java并发编程-初级篇","top":270,"author":"imklaus","tags":["Thread","Runnable","FutureTask","join","interrupt"],"categories":"Java","date":"2023-07-07T22:52:11.000Z","outline":"deep"},"headers":[{"level":2,"title":"一、进程与线程","slug":"一、进程与线程","link":"#一、进程与线程","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"二者对比","slug":"二者对比","link":"#二者对比","children":[]},{"level":3,"title":"2、并发与并行","slug":"_2、并发与并行","link":"#_2、并发与并行","children":[]},{"level":3,"title":"3、应用","slug":"_3、应用","link":"#_3、应用","children":[]}]},{"level":2,"title":"二、Java 线程","slug":"二、java-线程","link":"#二、java-线程","children":[{"level":3,"title":"1、创建一个线程（非主线程）","slug":"_1、创建一个线程（非主线程）","link":"#_1、创建一个线程（非主线程）","children":[]},{"level":3,"title":"2、原理之线程运行","slug":"_2、原理之线程运行","link":"#_2、原理之线程运行","children":[]},{"level":3,"title":"3、常用方法","slug":"_3、常用方法","link":"#_3、常用方法","children":[]},{"level":3,"title":"4、线程的状态","slug":"_4、线程的状态","link":"#_4、线程的状态","children":[]}]}],"relativePath":"pages/posts/深入学习Java并发编程.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\深入学习Java并发编程.md","lastUpdated":null}'),c=JSON.parse('{"title":"深入学习Java并发编程-初级篇","description":"","frontmatter":{"cover":"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/wallhaven-v9x6gm_1920x1080.png","title":"深入学习Java并发编程-初级篇","top":270,"author":"imklaus","tags":["Thread","Runnable","FutureTask","join","interrupt"],"categories":"Java","date":"2023-07-07T22:52:11.000Z","outline":"deep"},"headers":[{"level":2,"title":"一、进程与线程","slug":"一、进程与线程","link":"#一、进程与线程","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"二者对比","slug":"二者对比","link":"#二者对比","children":[]},{"level":3,"title":"2、并发与并行","slug":"_2、并发与并行","link":"#_2、并发与并行","children":[]},{"level":3,"title":"3、应用","slug":"_3、应用","link":"#_3、应用","children":[]}]},{"level":2,"title":"二、Java 线程","slug":"二、java-线程","link":"#二、java-线程","children":[{"level":3,"title":"1、创建一个线程（非主线程）","slug":"_1、创建一个线程（非主线程）","link":"#_1、创建一个线程（非主线程）","children":[]},{"level":3,"title":"2、原理之线程运行","slug":"_2、原理之线程运行","link":"#_2、原理之线程运行","children":[]},{"level":3,"title":"3、常用方法","slug":"_3、常用方法","link":"#_3、常用方法","children":[]},{"level":3,"title":"4、线程的状态","slug":"_4、线程的状态","link":"#_4、线程的状态","children":[]}]}],"relativePath":"pages/posts/深入学习Java并发编程.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\深入学习Java并发编程.md","lastUpdated":null}'),d={name:"pages/posts/深入学习Java并发编程.md",data(){return{data:c,frontmatter:c.frontmatter}},setup(){C("pageData",c)}},u={id:"并发编程笔记",tabindex:"-1"},h=l("strong",null,"黑马java并发编程教程",-1),_={id:"一、进程与线程",tabindex:"-1"},g={id:"进程",tabindex:"-1"},m=l("ul",null,[l("li",null,"程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至 CPU，数据加载至内存。在指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存、管理 IO 的。"),l("li",null,"当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。"),l("li",null,"进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器 等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）")],-1),f={id:"线程",tabindex:"-1"},E=l("ul",null,[l("li",null,"一个进程之内可以分为一到多个线程。"),l("li",null,"一个线程就是一个指令流，将指令流中的一条条指令以一定的顺序交给 CPU 执行 。"),l("li",null,"Java 中，线程作为小调度单位，进程作为资源分配的小单位。 在 windows 中进程是不活动的，只是作 为线程的容器")],-1),b={id:"二者对比",tabindex:"-1"},v=l("ul",null,[l("li",null,[s("进程基本上相互独立的，而线程存在于进程内，是进程的一个子集 进程拥有共享的资源，如内存空间等，供其内部的线程共享 "),l("ul",null,[l("li",null,"进程间通信较为复杂 同一台计算机的进程通信称为 IPC（Inter-process communication）"),l("li",null,"不同计算机之间的进程通信，需要通过网络，并遵守共同的协议，例如 HTTP")])]),l("li",null,"线程通信相对简单，因为它们共享进程内的内存，一个例子是多个线程可以访问同一个共享变量"),l("li",null,"线程更轻量，线程上下文切换成本一般上要比进程上下文切换低")],-1),T={id:"进程和线程的切换",tabindex:"-1"},k=l("p",null,[l("strong",null,"上下文切换")],-1),x=l("p",null,[s("内核为每一个进程维持一个上下文。"),l("strong",null,"上下文就是内核重新启动一个被抢占的进程所需的状态"),s("。包括以下内容：")],-1),S=l("ul",null,[l("li",null,"通用目的寄存器"),l("li",null,"浮点寄存器"),l("li",null,"程序计数器"),l("li",null,"用户栈"),l("li",null,"状态寄存器"),l("li",null,"内核栈"),l("li",null,[s("各种内核数据结构：比如描绘地址空间的"),l("strong",null,"页表"),s("，包含有关当前进程信息的"),l("strong",null,"进程表"),s("，以及包含进程已打开文件的信息的"),l("strong",null,"文件表")])],-1),w=l("p",null,[l("strong",null,"进程切换和线程切换的主要区别")],-1),I=l("p",null,[s("最主要的一个区别在于"),l("strong",null,"进程切换涉及虚拟地址空间的切换而线程不会"),s("。因为每个进程都有自己的虚拟地址空间，而"),l("strong",null,"线程是共享所在进程的虚拟地址空间的"),s("，因此同一个进程中的线程进行线程切换时不涉及虚拟地址空间的转换")],-1),B=l("p",null,[s("页表查找是一个很慢的过程，因此通常使用cache来缓存常用的地址映射，这样可以加速页表查找，这个cache就是快表TLB（translation Lookaside Buffer，用来加速页表查找）。由于每个进程都有自己的虚拟地址空间，那么显然每个进程都有自己的页表，那么"),l("strong",null,"当进程切换后页表也要进行切换，页表切换后TLB就失效了"),s("，cache失效导致命中率降低，那么虚拟地址转换为物理地址就会变慢，表现出来的就是程序运行会变慢，而线程切换则不会导致TLB失效，因为线程线程无需切换地址空间，因此我们通常说线程切换要比较进程切换快")],-1),R=l("p",null,[s("而且还可能出现"),l("strong",null,"缺页中断"),s("，这就需要操作系统将需要的内容调入内存中，若内存已满则还需要将不用的内容调出内存，这也需要花费时间")],-1),j=l("p",null,[l("strong",null,"为什么TLB能加快访问速度")],-1),J=l("p",null,"快表可以避免每次都对页号进行地址的有效性判断。快表中保存了对应的物理块号，可以直接计算出物理地址，无需再进行有效性检查",-1),P={id:"_2、并发与并行",tabindex:"-1"},L=l("p",null,"单核 cpu 下，线程实际还是 串行执行 的。操作系统中有一个组件叫做任务调度器，将 cpu 的时间片（windows 下时间片最小约为 15 毫秒）分给不同的程序使用，只是由于 cpu 在线程间（时间片很短）的切换非常快，人类感 觉是 同时运行的 。 总结为一句话就是： 微观串行，宏观并行 ，一般会将这种 线程轮流使用 CPU 的做法称为并发（concurrent）",-1),O=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230711144528655.png",alt:"image-20230711144528655"})],-1),M=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230711144538488.png",alt:"image-20230711144538488"})],-1),U=l("p",null,"多核 cpu下，每个 核（core） 都可以调度运行线程，这时候线程可以是并行的。",-1),N=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230711144558304.png",alt:"image-20230711144558304"})],-1),$=l("p",null,"并发是一个CPU在不同的时间去不同线程中执行指令。",-1),K=l("p",null,"并行是多个CPU同时处理不同的线程。",-1),V=l("p",null,"引用 Rob Pike 的一段描述：",-1),W=l("ul",null,[l("li",null,[s("并发（concurrent）是同一时间"),l("strong",null,"应对"),s("（dealing with）多件事情的能力")]),l("li",null,[s("并行（parallel）是同一时间"),l("strong",null,"动手做"),s("（doing）多件事情的能力")])],-1),G={id:"_3、应用",tabindex:"-1"},q={id:"应用之异步调用（案例1）",tabindex:"-1"},H=l("p",null,"以调用方角度来讲，如果",-1),z=l("ul",null,[l("li",null,"需要等待结果返回，才能继续运行就是同步"),l("li",null,"不需要等待结果返回，就能继续运行就是异步")],-1),Z={id:"_1）设计",tabindex:"-1"},X=l("strong",null,"1）设计",-1),Y=l("p",null,"多线程可以让方法执行变为异步的（即不要巴巴干等着）比如说读取磁盘文件时，假设读取操作花费了 5 秒钟，如 果没有线程调度机制，这 5 秒 cpu 什么都做不了，其它代码都得暂停…",-1),Q={id:"_2）结论",tabindex:"-1"},ll=l("strong",null,"2）结论",-1),sl=l("ul",null,[l("li",null,"比如在项目中，视频文件需要转换格式等操作比较费时，这时开一个新线程处理视频转换，避免阻塞主线程"),l("li",null,"tomcat 的异步 servlet 也是类似的目的，让用户线程处理耗时较长的操作，避免阻塞"),l("li",null,"tomcat 的工作线程 ui 程序中，开线程进行其他操作，避免阻塞 ui 线程")],-1),ol={id:"应用之提高效率（案例1）",tabindex:"-1"},nl=l("strong",null,"应用之提高效率（案例1）",-1),tl=l("p",null,"充分利用多核 cpu 的优势，提高运行效率。想象下面的场景，执行 3 个计算，最后将计算结果汇总。",-1),al=l("div",{class:"language-SAS"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"计算 1 花费 10 ms")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"计算 2 花费 11 ms")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"计算 3 花费 9 ms")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"汇总需要 1 ms")]),s(`
`),l("span",{class:"line"})])])],-1),el=l("ul",null,[l("li",null,"如果是串行执行，那么总共花费的时间是 10 + 11 + 9 + 1 = 31ms"),l("li",null,"但如果是四核 cpu，各个核心分别使用线程 1 执行计算 1，线程 2 执行计算 2，线程 3 执行计算 3，那么 3 个线程是并行的，花费时间只取决于最长的那个线程运行的时间，即 11ms 最后加上汇总时间只会花费 12ms")],-1),cl=l("blockquote",null,[l("p",null,[l("strong",null,"注意")]),l("p",null,"需要在多核 cpu 才能提高效率，单核仍然时是轮流执行")],-1),rl={id:"_1）设计-1",tabindex:"-1"},pl=l("strong",null,"1）设计",-1),il=l("blockquote",null,[l("p",null,"代码见【应用之效率-案例1】<<<<<")],-1),yl={id:"_2）结论-1",tabindex:"-1"},Dl=l("strong",null,"2）结论",-1),Al=l("ol",null,[l("li",null,"单核 cpu 下，多线程不能实际提高程序运行效率，只是为了能够在不同的任务之间切换，不同线程轮流使用 cpu ，不至于一个线程总占用 cpu，别的线程没法干活"),l("li",null,[s("多核 cpu 可以并行跑多个线程，但能否提高程序运行效率还是要分情况的 "),l("ul",null,[l("li",null,"有些任务，经过精心设计，将任务拆分，并行执行，当然可以提高程序的运行效率。但不是所有计算任 务都能拆分（参考后文的【阿姆达尔定律】）"),l("li",null,"也不是所有任务都需要拆分，任务的目的如果不同，谈拆分和效率没啥意义")])]),l("li",null,"IO 操作不占用 cpu，只是我们一般拷贝文件使用的是【阻塞 IO】，这时相当于线程虽然不用 cpu，但需要一 直等待 IO 结束，没能充分利用线程。所以才有后面的【非阻塞 IO】和【异步 IO】优化")],-1),Fl={id:"二、java-线程",tabindex:"-1"},Cl={id:"_1、创建一个线程（非主线程）",tabindex:"-1"},dl={id:"方法一：通过继承thread创建线程",tabindex:"-1"},ul=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"CreateThread"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," myThread "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"MyThread"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"        "),l("span",{style:{color:"#676E95","font-style":"italic"}},"// 启动线程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		myThread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"MyThread"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"extends"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"run"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"my thread running..."),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),hl=l("p",null,"使用继承方式的好处是，在run（）方法内获取当前线程直接使用this就可以了，无须使用Thread.currentThread（）方法；不好的地方是Java不支持多继承，如果继承了Thread类，那么就不能再继承其他类。另外任务与代码没有分离，当多个线程执行一样的任务时需要多份任务代码",-1),_l={id:"方法二：使用runnable配合thread-推荐",tabindex:"-1"},gl=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Test2"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//创建线程任务")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Runnable"),l("span",{style:{color:"#A6ACCD"}}," r "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Runnable"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"run"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"Runnable running"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#89DDFF"}},"};")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//将Runnable对象传给Thread")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," t "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"r"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//启动线程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		t"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),ml=l("p",null,"或者",-1),fl=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"CreateThread2"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#C792EA"}},"private"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"MyRunnable"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"implements"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Runnable"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"run"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"         System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"my runnable running..."),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#C792EA"}},"MyRunnable"),l("span",{style:{color:"#A6ACCD"}}," myRunnable "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"MyRunnable"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," thread "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"myRunnable"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),El=l("p",null,"通过实现Runnable接口，并且实现run()方法。在创建线程时作为参数传入该类的实例即可",-1),bl={id:"方法二的简化：使用lambda表达式简化操作",tabindex:"-1"},vl=l("p",null,[l("strong",null,"当一个接口带有@FunctionalInterface注解时，是可以使用lambda来简化操作的")],-1),Tl=l("p",null,"所以方法二中的代码可以被简化为",-1),kl=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Test2"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//创建线程任务")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Runnable"),l("span",{style:{color:"#A6ACCD"}}," r "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"->"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"            "),l("span",{style:{color:"#676E95","font-style":"italic"}},"//直接写方法体即可")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"Runnable running"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"Hello Thread"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#89DDFF"}},"};")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//将Runnable对象传给Thread")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," t "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"r"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//启动线程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		t"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),xl=l("p",null,"可以再Runnable上使用Alt+Enter",-1),Sl=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/20200608144534.png",alt:"img"})],-1),wl={id:"原理之-thread-与-runnable-的关系",tabindex:"-1"},Il=l("p",null,[s("分析 Thread 的源码，理清它与 Runnable 的关系 "),l("strong",null,"小结")],-1),Bl=l("ul",null,[l("li",null,"方法1 是把线程和任务合并在了一起"),l("li",null,"方法2 是把线程和任务分开了"),l("li",null,"用 Runnable 更容易与线程池等高级 API 配合 用 Runnable 让任务类脱离了 Thread 继承体系，更灵活")],-1),Rl={id:"方法三：使用futuretask与thread结合",tabindex:"-1"},jl=l("p",null,[l("strong",null,"使用FutureTask可以用泛型指定线程的返回值类型（Runnable的run方法没有返回值）")],-1),Jl=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Test3"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"throws"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"ExecutionException"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"InterruptedException"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"        "),l("span",{style:{color:"#676E95","font-style":"italic"}},"//需要传入一个Callable对象")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"FutureTask"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"Integer"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," task "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"FutureTask"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"Integer"),l("span",{style:{color:"#89DDFF"}},">("),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Callable"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"Integer"),l("span",{style:{color:"#89DDFF"}},">()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Integer"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"call"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"throws"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Exception"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"线程执行!"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"sleep"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#F78C6C"}},"1000"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				"),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#F78C6C"}},"100"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#89DDFF"}},"});")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," r1 "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"task"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"t2"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		r1"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//获取线程中方法执行后的返回结果")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"task"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"get"),l("span",{style:{color:"#89DDFF"}},"());")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Pl=l("p",null,"或",-1),Ll=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"UseFutureTask"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"throws"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"ExecutionException"),l("span",{style:{color:"#89DDFF"}},","),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"InterruptedException"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#C792EA"}},"FutureTask"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," futureTask "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"FutureTask"),l("span",{style:{color:"#89DDFF"}},"<>("),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"MyCall"),l("span",{style:{color:"#89DDFF"}},"());")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," thread "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"futureTask"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"      "),l("span",{style:{color:"#676E95","font-style":"italic"}},"// 获得线程运行后的返回值")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"futureTask"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"get"),l("span",{style:{color:"#89DDFF"}},"());")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"MyCall"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"implements"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Callable"),l("span",{style:{color:"#89DDFF"}},"<"),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},">"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"call"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"throws"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"Exception"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"      "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"return"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"hello world"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"   "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Ol={id:"总结",tabindex:"-1"},Ml=l("p",null,[s("使用"),l("strong",null,"继承方式的好处是方便传参"),s("，你可以在子类里面添加成员变量，通过set方法设置参数或者通过构造函数进行传递，而如果使用Runnable方式，则只能使用主线程里面被声明为final的变量。"),l("strong",null,"不好的地方是Java不支持多继承"),s("，如果继承了Thread类，那么子类不能再继承其他类，而Runable则没有这个限制。"),l("strong",null,"前两种方式都没办法拿到任务的返回结果，但是Futuretask方式可以")],-1),Ul={id:"_2、原理之线程运行",tabindex:"-1"},Nl={id:"栈与栈帧",tabindex:"-1"},$l=l("p",null,[s("Java Virtual Machine Stacks （Java 虚拟机栈） 我们都知道 JVM 中由堆、栈、方法区所组成，其中栈内存是给谁用的呢？其实就是线程，每个线程启动后，虚拟机就会为其分配一块"),l("strong",null,"栈内存")],-1),Kl=l("ul",null,[l("li",null,[s("每个栈由多个栈帧（Frame）组成，对应着每次"),l("strong",null,"方法调用时所占用的内存")]),l("li",null,"每个线程只能有一个活动栈帧，对应着当前正在执行的那个方法")],-1),Vl={id:"线程上下文切换（thread-context-switch）",tabindex:"-1"},Wl=l("p",null,"因为以下一些原因导致 cpu 不再执行当前的线程，转而执行另一个线程的代码",-1),Gl=l("ul",null,[l("li",null,"线程的 cpu 时间片用完"),l("li",null,"垃圾回收 有更高优先级的线程需要运行"),l("li",null,"线程自己调用了 sleep、yield、wait、join、park、synchronized、lock 等方法")],-1),ql=l("p",null,"当 Context Switch 发生时，需要由操作系统保存当前线程的状态，并恢复另一个线程的状态，Java 中对应的概念 就是程序计数器（Program Counter Register），它的作用是记住下一条 jvm 指令的执行地址，是线程私有的",-1),Hl=l("ul",null,[l("li",null,"状态包括程序计数器、虚拟机栈中每个栈帧的信息，如局部变量、操作数栈、返回地址等"),l("li",null,"Context Switch 频繁发生会影响性能")],-1),zl={id:"_3、常用方法",tabindex:"-1"},Zl={id:"_1-start-vs-run",tabindex:"-1"},Xl={id:"调用-run",tabindex:"-1"},Yl=l("strong",null,"调用 run",-1),Ql=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," t1 "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"t1"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"run"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        log"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"debug"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"currentThread"),l("span",{style:{color:"#89DDFF"}},"()."),l("span",{style:{color:"#82AAFF"}},"getName"),l("span",{style:{color:"#89DDFF"}},"());")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        FileReader"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"read"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Constants"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"MP4_FULL_PATH"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"};")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    t1"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"run"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    log"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"debug"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"do other things ..."),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),ls=l("p",null,"输出：",-1),ss=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230712000923794.png",alt:"image-20230712000923794"})],-1),os=l("p",null,[s("程序仍在 main 线程运行， "),l("code",null,"FileReader.read()"),s(" 方法调用还是同步的")],-1),ns={id:"调用-start",tabindex:"-1"},ts=l("strong",null,"调用 start",-1),as=l("p",null,[s("将上述代码的 "),l("code",null,"t1.run()"),s(" 改为"),l("code",null,"t1.start();"),s("输出：")],-1),es=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/image-20230712001043087.png",alt:"image-20230712001043087"})],-1),cs={id:"小结",tabindex:"-1"},rs=l("strong",null,"小结",-1),ps=l("p",null,"直接调用 run 是在主线程中执行了 run，没有启动新的线程 使用 start 是启动新的线程，通过新的线程间接执行 run 中的代码",-1),is=l("blockquote",null,[l("p",null,[l("strong",null,"为什么调用start()方法时会执行run()方法，那怎么不直接调用run()方法？")]),l("p",null,"JVM执行start方法，会先创建一条线程，由创建出来的新线程去执行thread的run方法，这才起到多线程的效果。"),l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/javathread-5.png",alt:"start方法"})]),l("p",null,[l("strong",null,"为什么我们不能直接调用run()方法"),s("？也很清楚， 如果直接调用Thread的run()方法，那么run方法还是运行在主线程中，相当于顺序执行，就起不到多线程的效果。")])],-1),ys={id:"_2-sleep-与yield",tabindex:"-1"},Ds={id:"sleep-使线程阻塞",tabindex:"-1"},As=l("strong",null,"sleep",-1),Fs=l("ol",null,[l("li",null,[l("p",null,[s("调用 sleep 会让当前线程从 "),l("strong",null,"Running 进入 Timed Waiting 状态（阻塞）"),s("，可通过state()方法查看")])]),l("li",null,[l("p",null,[s("其它线程可以使用 "),l("strong",null,"interrupt"),s(" 方法打断正在睡眠的线程，这时 sleep 方法会抛出 InterruptedException")])]),l("li",null,[l("p",null,"睡眠结束后的线程未必会立刻得到执行")]),l("li",null,[l("p",null,[s("建议用 "),l("strong",null,"TimeUnit 的 sleep"),s(" 代替 Thread 的 sleep 来获得更好的可读性 。如：")]),l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"//休眠一秒")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"TimeUnit"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"SECONDS"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"sleep"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#F78C6C"}},"1"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"//休眠一分钟")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"TimeUnit"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"MINUTES"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"sleep"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#F78C6C"}},"1"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"})])])])])],-1),Cs={id:"yield-（让出当前线程）",tabindex:"-1"},ds=l("ol",null,[l("li",null,[s("调用 yield 会让当前线程从 "),l("strong",null,"Running 进入 Runnable 就绪状态"),s("（仍然有可能被执行），然后调度执行其它线程")]),l("li",null,"具体的实现依赖于操作系统的任务调度器")],-1),us={id:"线程优先级",tabindex:"-1"},hs=l("ul",null,[l("li",null,[l("p",null,"线程优先级会提示（hint）调度器优先调度该线程，但它仅仅是一个提示，调度器可以忽略它")]),l("li",null,[l("p",null,"如果 cpu 比较忙，那么优先级高的线程会获得更多的时间片，但 cpu 闲时，优先级几乎没作用")]),l("li",null,[l("p",null,"设置方法："),l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"thread1"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"setPriority"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"MAX_PRIORITY"),l("span",{style:{color:"#89DDFF"}},");"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#676E95","font-style":"italic"}},"//设置为优先级最高")]),s(`
`),l("span",{class:"line"})])])])])],-1),_s={id:"_3-join-方法",tabindex:"-1"},gs=l("p",null,"用于等待某个线程结束。哪个线程内调用join()方法，就等待哪个线程结束，然后再去执行其他线程。",-1),ms=l("p",null,"如在主线程中调用ti.join()，则是主线程等待t1线程结束",-1),fs=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," thread "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"//等待thread线程执行结束")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"join"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"//最多等待1000ms,如果1000ms内线程执行完毕，则会直接执行下面的语句，不会等够1000ms")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"join"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#F78C6C"}},"1000"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"})])])],-1),Es={id:"_4-interrupt-方法",tabindex:"-1"},bs=l("p",null,[s("用于打断"),l("strong",null,"阻塞"),s("(sleep wait join…)的线程。 处于阻塞状态的线程，CPU不会给其分配时间片。")],-1),vs=l("ul",null,[l("li",null,"如果一个线程正在运行中被打断，打断标记会被置为true。"),l("li",null,"如果是打断因sleep wait join方法而被阻塞的线程，会将打断标记置为false")],-1),Ts=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"//用于查看打断标记，返回值被boolean类型，不会清除 打断标记")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"t1"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"isInterrupted"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"//判断当前线程是否被打断，会清除 打断标记")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"t1"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"interrupted"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"})])])],-1),ks=l("p",null,[s("正常运行的线程在被打断后，"),l("strong",null,"不会停止"),s("，会继续执行。如果要让线程在被打断后停下来，需要"),l("strong",null,"使用打断标记来判断"),s("。")],-1),xs=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#89DDFF","font-style":"italic"}},"while"),l("span",{style:{color:"#89DDFF"}},"(true)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"currentThread"),l("span",{style:{color:"#89DDFF"}},"()."),l("span",{style:{color:"#82AAFF"}},"isInterrupted"),l("span",{style:{color:"#89DDFF"}},"())"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"        "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"break"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"    "),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Ss={id:"interrupt方法的应用——两阶段终止模式",tabindex:"-1"},ws=l("strong",null,"interrupt方法的应用",-1),Is=l("p",null,[s("当我们在执行线程一时，想要终止线程二，这是就需要使用interrupt方法来"),l("strong",null,"优雅"),s("的停止线程二。")],-1),Bs=l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/20200608144553.png",alt:"img",style:{zoom:"67%"}},null,-1),Rs=l("p",null,[l("strong",null,"代码")],-1),js=l("div",{class:"language-java"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Test7"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"static"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"main"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"String"),l("span",{style:{color:"#89DDFF"}},"[]"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"args"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"throws"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"InterruptedException"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#C792EA"}},"Monitor"),l("span",{style:{color:"#A6ACCD"}}," monitor "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Monitor"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		monitor"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"sleep"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#F78C6C"}},"3500"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		monitor"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"stop"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#C792EA"}},"class"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#FFCB6B"}},"Monitor"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"Thread"),l("span",{style:{color:"#A6ACCD"}}," monitor"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"	/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"	 * 启动监控器线程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"	 */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//设置线控器线程，用于监控线程状态")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		monitor "),l("span",{style:{color:"#89DDFF"}},"="),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"new"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#89DDFF"}},"@"),l("span",{style:{color:"#C792EA"}},"Override")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"run"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"				"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//开始不停的监控")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				"),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"while"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"(true)"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"                    "),l("span",{style:{color:"#676E95","font-style":"italic"}},"//判断当前线程是否被打断了")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					"),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"if"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#A6ACCD"}},"Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"currentThread"),l("span",{style:{color:"#89DDFF"}},"()."),l("span",{style:{color:"#82AAFF"}},"isInterrupted"),l("span",{style:{color:"#89DDFF"}},"())"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"						System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"处理后续任务"),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"                        "),l("span",{style:{color:"#676E95","font-style":"italic"}},"//终止线程执行")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"						"),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"break"),l("span",{style:{color:"#89DDFF"}},";")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					System"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#A6ACCD"}},"out"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"println"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#C3E88D"}},"监控器运行中..."),l("span",{style:{color:"#89DDFF"}},'"'),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					"),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"try"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"						"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//线程休眠")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"						Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"sleep"),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#F78C6C"}},"1000"),l("span",{style:{color:"#89DDFF"}},");")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					"),l("span",{style:{color:"#89DDFF"}},"}"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF","font-style":"italic"}},"catch"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"("),l("span",{style:{color:"#C792EA"}},"InterruptedException"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#A6ACCD","font-style":"italic"}},"e"),l("span",{style:{color:"#89DDFF"}},")"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"						e"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"printStackTrace"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"						"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//如果是在休眠的时候被打断，不会将打断标记设置为true，这时要重新设置打断标记")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"						Thread"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"currentThread"),l("span",{style:{color:"#89DDFF"}},"()."),l("span",{style:{color:"#82AAFF"}},"interrupt"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"					"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"				"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"			"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		"),l("span",{style:{color:"#89DDFF"}},"};")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		monitor"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"start"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"}),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"	/**")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"	 * 	用于停止监控器线程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#676E95","font-style":"italic"}},"	 */")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#C792EA"}},"public"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#C792EA"}},"void"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#82AAFF"}},"stop"),l("span",{style:{color:"#89DDFF"}},"()"),l("span",{style:{color:"#A6ACCD"}}," "),l("span",{style:{color:"#89DDFF"}},"{")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"		"),l("span",{style:{color:"#676E95","font-style":"italic"}},"//打断线程")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"		monitor"),l("span",{style:{color:"#89DDFF"}},"."),l("span",{style:{color:"#82AAFF"}},"interrupt"),l("span",{style:{color:"#89DDFF"}},"();")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"	"),l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#89DDFF"}},"}")]),s(`
`),l("span",{class:"line"})])])],-1),Js={id:"_5-不推荐使用的打断方法",tabindex:"-1"},Ps=l("ul",null,[l("li",null,"stop方法 停止线程运行（可能造成共享资源无法被释放，其他线程无法使用这些共享资源）"),l("li",null,"suspend（暂停线程）/resume（恢复线程）方法")],-1),Ls={id:"_6-守护线程",tabindex:"-1"},Os=l("p",null,[s("当JAVA进程中有多个线程在执行时，只有当所有非守护线程都执行完毕后，JAVA进程才会结束。"),l("strong",null,"但当非守护线程全部执行完毕后，守护线程无论是否执行完毕，也会一同结束。")],-1),Ms=l("div",{class:"language-"},[l("span",{class:"copy"}),l("pre",{class:"shiki material-theme-palenight",tabindex:"0"},[l("code",null,[l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"//将线程设置为守护线程, 默认为false")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}},"monitor.setDaemon(true);")]),s(`
`),l("span",{class:"line"},[l("span",{style:{color:"#A6ACCD"}})])])])],-1),Us=l("p",null,[l("strong",null,"守护线程的应用")],-1),Ns=l("ul",null,[l("li",null,"垃圾回收器线程就是一种守护线程"),l("li",null,"Tomcat 中的 Acceptor 和 Poller 线程都是守护线程，所以 Tomcat 接收到 shutdown 命令后，不会等 待它们处理完当前请求")],-1),$s={id:"_4、线程的状态",tabindex:"-1"},Ks={id:"_1-五种状态",tabindex:"-1"},Vs=l("p",null,[s("这是从 "),l("strong",null,"操作系统"),s(" 层面来描述的")],-1),Ws=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/20200608144606.png",alt:"img"})],-1),Gs=l("ul",null,[l("li",null,"【初始状态】仅是在语言层面创建了线程对象，还未与操作系统线程关联（例如线程调用了start方法）"),l("li",null,"【可运行状态】（就绪状态）指该线程已经被创建（与操作系统线程关联），可以由 CPU 调度执行"),l("li",null,[s("【运行状态】指获取了 CPU 时间片运行中的状态 "),l("ul",null,[l("li",null,"当 CPU 时间片用完，会从【运行状态】转换至【可运行状态】，会导致线程的上下文切换")])]),l("li",null,[s("【阻塞状态】 "),l("ul",null,[l("li",null,"如果调用了阻塞 API，如 BIO 读写文件，这时该线程实际不会用到 CPU，会导致线程上下文切换，进入 【阻塞状态】"),l("li",null,"等 BIO 操作完毕，会由操作系统唤醒阻塞的线程，转换至【可运行状态】"),l("li",null,"与【可运行状态】的区别是，对【阻塞状态】的线程来说只要它们一直不唤醒，调度器就一直不会考虑调度它们")])]),l("li",null,"【终止状态】表示线程已经执行完毕，生命周期已经结束，不会再转换为其它状态")],-1),qs={id:"_2-六种状态",tabindex:"-1"},Hs=l("p",null,[s("这是从 "),l("strong",null,"Java API"),s(" 层面来描述的 根据 "),l("code",null,"Thread.State"),s(" 枚举，分为六种状态")],-1),zs=l("p",null,[l("img",{src:"https://cdn.staticaly.com/gh/imLKlauS/blog-picture@main/blogs/20200608144621.png",alt:"img"})],-1),Zs=l("ul",null,[l("li",null,[l("strong",null,"NEW"),s(" 线程刚被创建，但是还没有调用 start() 方法")]),l("li",null,[l("strong",null,"RUNNABLE"),s(" 当调用了 start() 方法之后，注意，Java API 层面的 RUNNABLE 状态涵盖了操作系统层面的 【可运行状态】、【运行状态】和【阻塞状态】（由于 BIO 导致的线程阻塞，在 Java 里无法区分，仍然认为 是可运行）")]),l("li",null,[l("strong",null,"BLOCKED ， WAITING ， TIMED_WAITING"),s(" 都是 "),l("strong",null,"Java API 层面"),s("对【阻塞状态】的细分，如sleep就位TIMED_WAITING， join为WAITING状态。后面会在状态转换一节详述。")]),l("li",null,[l("strong",null,"TERMINATED"),s(" 当线程代码运行结束")])],-1);function Xs(a,Ys,Qs,lo,r,so){const n=F,p=i;return A(),D(p,{frontmatter:r.frontmatter,data:r.data},{"main-content-md":o(()=>[l("h1",u,[s("并发编程笔记 "),t(n,{class:"header-anchor",href:"#并发编程笔记","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("p",null,[s("本博客根据"),h,s("学习而做的笔记，链接如下："),t(n,{href:"https://www.bilibili.com/video/av81461839?from=search&seid=8445102345230304010",target:"_blank",rel:"noreferrer"},{default:o(()=>[s("深入学习Java并发")]),_:1})]),l("h2",_,[s("一、进程与线程 "),t(n,{class:"header-anchor",href:"#一、进程与线程","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h3",g,[s("进程 "),t(n,{class:"header-anchor",href:"#进程","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),m,l("h3",f,[s("线程 "),t(n,{class:"header-anchor",href:"#线程","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),E,l("h3",b,[s("二者对比 "),t(n,{class:"header-anchor",href:"#二者对比","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),v,l("h4",T,[s("进程和线程的切换 "),t(n,{class:"header-anchor",href:"#进程和线程的切换","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),k,x,S,w,I,B,R,j,J,l("h3",P,[s("2、并发与并行 "),t(n,{class:"header-anchor",href:"#_2、并发与并行","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),L,O,M,U,N,$,K,V,W,l("h3",G,[s("3、应用 "),t(n,{class:"header-anchor",href:"#_3、应用","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h4",q,[s("应用之异步调用（案例1） "),t(n,{class:"header-anchor",href:"#应用之异步调用（案例1）","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),H,z,l("h5",Z,[X,s(),t(n,{class:"header-anchor",href:"#_1）设计","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Y,l("h5",Q,[ll,s(),t(n,{class:"header-anchor",href:"#_2）结论","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),sl,l("h4",ol,[nl,s(),t(n,{class:"header-anchor",href:"#应用之提高效率（案例1）","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),tl,al,el,cl,l("h5",rl,[pl,s(),t(n,{class:"header-anchor",href:"#_1）设计-1","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),il,l("h5",yl,[Dl,s(),t(n,{class:"header-anchor",href:"#_2）结论-1","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Al,l("h2",Fl,[s("二、Java 线程 "),t(n,{class:"header-anchor",href:"#二、java-线程","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h3",Cl,[s("1、创建一个线程（非主线程） "),t(n,{class:"header-anchor",href:"#_1、创建一个线程（非主线程）","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h4",dl,[s("方法一：通过继承Thread创建线程 "),t(n,{class:"header-anchor",href:"#方法一：通过继承thread创建线程","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),ul,hl,l("h4",_l,[s("方法二：使用Runnable配合Thread(推荐) "),t(n,{class:"header-anchor",href:"#方法二：使用runnable配合thread-推荐","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),gl,ml,fl,El,l("h5",bl,[s("方法二的简化：使用lambda表达式简化操作 "),t(n,{class:"header-anchor",href:"#方法二的简化：使用lambda表达式简化操作","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),vl,Tl,kl,xl,Sl,l("h5",wl,[s("原理之 Thread 与 Runnable 的关系 "),t(n,{class:"header-anchor",href:"#原理之-thread-与-runnable-的关系","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Il,Bl,l("h5",Rl,[s("方法三：使用FutureTask与Thread结合 "),t(n,{class:"header-anchor",href:"#方法三：使用futuretask与thread结合","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),jl,Jl,Pl,Ll,l("h5",Ol,[s("总结 "),t(n,{class:"header-anchor",href:"#总结","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Ml,l("h3",Ul,[s("2、原理之线程运行 "),t(n,{class:"header-anchor",href:"#_2、原理之线程运行","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h4",Nl,[s("栈与栈帧 "),t(n,{class:"header-anchor",href:"#栈与栈帧","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),$l,Kl,l("h4",Vl,[s("线程上下文切换（Thread Context Switch） "),t(n,{class:"header-anchor",href:"#线程上下文切换（thread-context-switch）","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Wl,Gl,ql,Hl,l("h3",zl,[s("3、常用方法 "),t(n,{class:"header-anchor",href:"#_3、常用方法","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h4",Zl,[s("(1)start() vs run() "),t(n,{class:"header-anchor",href:"#_1-start-vs-run","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h5",Xl,[Yl,s(),t(n,{class:"header-anchor",href:"#调用-run","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Ql,ls,ss,os,l("h5",ns,[ts,s(),t(n,{class:"header-anchor",href:"#调用-start","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),as,es,l("h5",cs,[rs,s(),t(n,{class:"header-anchor",href:"#小结","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),ps,is,l("h4",ys,[s("(2)sleep()与yield() "),t(n,{class:"header-anchor",href:"#_2-sleep-与yield","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h5",Ds,[As,s(" (使线程阻塞) "),t(n,{class:"header-anchor",href:"#sleep-使线程阻塞","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Fs,l("h5",Cs,[s("yield （让出当前线程） "),t(n,{class:"header-anchor",href:"#yield-（让出当前线程）","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),ds,l("h5",us,[s("线程优先级 "),t(n,{class:"header-anchor",href:"#线程优先级","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),hs,l("h4",_s,[s("(3)join()方法 "),t(n,{class:"header-anchor",href:"#_3-join-方法","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),gs,ms,fs,l("h4",Es,[s("(4)interrupt()方法 "),t(n,{class:"header-anchor",href:"#_4-interrupt-方法","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),bs,vs,Ts,ks,xs,l("h5",Ss,[ws,s("——两阶段终止模式 "),t(n,{class:"header-anchor",href:"#interrupt方法的应用——两阶段终止模式","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Is,Bs,Rs,js,l("h4",Js,[s("(5)不推荐使用的打断方法 "),t(n,{class:"header-anchor",href:"#_5-不推荐使用的打断方法","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Ps,l("h4",Ls,[s("(6)守护线程 "),t(n,{class:"header-anchor",href:"#_6-守护线程","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Os,Ms,Us,Ns,l("h3",$s,[s("4、线程的状态 "),t(n,{class:"header-anchor",href:"#_4、线程的状态","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),l("h4",Ks,[s("(1)五种状态 "),t(n,{class:"header-anchor",href:"#_1-五种状态","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Vs,Ws,Gs,l("h4",qs,[s("(2)六种状态 "),t(n,{class:"header-anchor",href:"#_2-六种状态","aria-hidden":"true"},{default:o(()=>[s("#")]),_:1})]),Hs,zs,Zs]),"main-header":o(()=>[e(a.$slots,"main-header")]),"main-header-after":o(()=>[e(a.$slots,"main-header-after")]),"main-nav":o(()=>[e(a.$slots,"main-nav")]),"main-content":o(()=>[e(a.$slots,"main-content")]),"main-content-after":o(()=>[e(a.$slots,"main-content-after")]),"main-nav-before":o(()=>[e(a.$slots,"main-nav-before")]),"main-nav-after":o(()=>[e(a.$slots,"main-nav-after")]),comment:o(()=>[e(a.$slots,"comment")]),footer:o(()=>[e(a.$slots,"footer")]),aside:o(()=>[e(a.$slots,"aside")]),"aside-custom":o(()=>[e(a.$slots,"aside-custom")]),default:o(()=>[e(a.$slots,"default")]),_:3},8,["frontmatter","data"])}const ro=y(d,[["render",Xs]]);export{co as __pageData,ro as default};
