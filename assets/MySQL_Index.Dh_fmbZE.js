import{_ as i}from"./ValaxyMain.vue_vue_type_style_index_0_lang.e6BHMbt0.js";import{f as l,a as s,u as a}from"./chunks/vue-router.CmhWrXzX.js";import{O as n,a0 as t,R as h,S as e,W as k,X as r,u as p,P as d,D as F}from"./framework.BHkQnU1p.js";import"./app.bAaxCnCZ.js";import"./chunks/dayjs.CORIJbU0.js";import"./chunks/vue-i18n.Be57jicL.js";import"./chunks/nprogress.BHm3HSQC.js";import"./chunks/pinia.BY9HMtis.js";import"./chunks/@vueuse/motion.CUAOwWQQ.js";import"./YunComment.vue_vue_type_style_index_0_lang.CW7nOpbS.js";import"./index.TQnGKZgq.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.De5tC3Nd.js";import"./post.03CgFSjK.js";const u=l("/posts/MySQL_Index",(async i=>JSON.parse('{"title":"MySQL - 存储引擎与索引","description":"","frontmatter":{"title":"MySQL - 存储引擎与索引","author":"imklaus","top":118,"tags":["SQL"],"categories":["MySQL","索引篇"],"date":"2025-3-19 00:14:40","outline":"deep","excerpt_type":"html","end":false},"headers":[{"level":2,"title":"存储引擎","slug":"存储引擎","link":"#存储引擎","children":[{"level":3,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":3,"title":"引擎对比","slug":"引擎对比","link":"#引擎对比","children":[]},{"level":3,"title":"引擎操作","slug":"引擎操作","link":"#引擎操作","children":[]}]},{"level":2,"title":"索引机制","slug":"索引机制","link":"#索引机制","children":[{"level":3,"title":"索引介绍","slug":"索引介绍","link":"#索引介绍","children":[]},{"level":3,"title":"索引操作","slug":"索引操作","link":"#索引操作","children":[]},{"level":3,"title":"聚簇索引","slug":"聚簇索引","link":"#聚簇索引","children":[]},{"level":3,"title":"索引结构","slug":"索引结构","link":"#索引结构","children":[]},{"level":3,"title":"设计原则","slug":"设计原则","link":"#设计原则","children":[]},{"level":3,"title":"索引优化","slug":"索引优化","link":"#索引优化","children":[]}]}],"relativePath":"pages/posts/MySQL_Index.md","lastUpdated":null}')),{lazy:(i,l)=>i.name===l.name}),g={__name:"MySQL_Index",setup(l,{expose:g}){var E;const{data:y}=u(),o=a(),c=s(),B=Object.assign(c.meta.frontmatter||{},(null==(E=y.value)?void 0:E.frontmatter)||{});c.meta.frontmatter=B,o.currentRoute.value.data=y.value,F("valaxy:frontmatter",B),globalThis.$frontmatter=B;return g({frontmatter:{title:"MySQL - 存储引擎与索引",author:"imklaus",top:118,tags:["SQL"],categories:["MySQL","索引篇"],date:"2025-3-19 00:14:40",outline:"deep",excerpt_type:"html",end:!1}}),(l,s)=>{const a=i;return d(),n(a,{frontmatter:p(B)},{"main-content-md":t((()=>[s[0]||(s[0]=e("h2",{id:"存储引擎",tabindex:"-1"},[r("存储引擎 "),e("a",{class:"header-anchor",href:"#存储引擎","aria-label":'Permalink to "存储引擎"'},"​")],-1)),s[1]||(s[1]=e("h3",{id:"基本介绍",tabindex:"-1"},[r("基本介绍 "),e("a",{class:"header-anchor",href:"#基本介绍","aria-label":'Permalink to "基本介绍"'},"​")],-1)),s[2]||(s[2]=e("p",null,"对比其他数据库，MySQL 的架构可以在不同场景应用并发挥良好作用，主要体现在存储引擎，插件式的存储引擎架构将查询处理和其他的系统任务以及数据的存储提取分离，可以针对不同的存储需求可以选择最优的存储引擎",-1)),s[3]||(s[3]=e("p",null,"存储引擎的介绍：",-1)),s[4]||(s[4]=e("ul",null,[e("li",null,"MySQL 数据库使用不同的机制存取表文件 , 机制的差别在于不同的存储方式、索引技巧、锁定水平等不同的功能和能力，在 MySQL 中，将这些不同的技术及配套的功能称为存储引擎"),e("li",null,[r("Oracle、SqlServer 等数据库只有一种存储引擎，MySQL "),e("strong",null,"提供了插件式的存储引擎架构"),r("，所以 MySQL 存在多种存储引擎 , 就会让数据库采取了不同的处理数据的方式和扩展功能")]),e("li",null,"在关系型数据库中数据的存储是以表的形式存进行，所以存储引擎也称为表类型（存储和操作此表的类型）"),e("li",null,"通过选择不同的引擎，能够获取最佳的方案, 也能够获得额外的速度或者功能，提高程序的整体效果。")],-1)),s[5]||(s[5]=e("p",null,"MySQL 支持的存储引擎：",-1)),s[6]||(s[6]=e("ul",null,[e("li",null,"MySQL 支持的引擎包括：InnoDB、MyISAM、MEMORY、Archive、Federate、CSV、BLACKHOLE 等"),e("li",null,"MySQL5.5 之前的默认存储引擎是 MyISAM，5.5 之后就改为了 InnoDB")],-1)),k(" more "),s[7]||(s[7]=e("hr",null,null,-1)),s[8]||(s[8]=e("h3",{id:"引擎对比",tabindex:"-1"},[r("引擎对比 "),e("a",{class:"header-anchor",href:"#引擎对比","aria-label":'Permalink to "引擎对比"'},"​")],-1)),s[9]||(s[9]=e("p",null,"MyISAM 存储引擎：",-1)),s[10]||(s[10]=e("ul",null,[e("li",null,"特点：不支持事务和外键，读取速度快，节约资源"),e("li",null,[r("应用场景："),e("strong",null,"适用于读多写少的场景"),r("，对事务的完整性要求不高，比如一些数仓、离线数据、支付宝的年度总结之类的场景，业务进行只读操作，查询起来会更快")]),e("li",null,[r("存储方式： "),e("ul",null,[e("li",null,"每个 MyISAM 在磁盘上存储成 3 个文件，其文件名都和表名相同，拓展名不同"),e("li",null,"表的定义保存在 .frm 文件，表数据保存在 .MYD (MYData) 文件中，索引保存在 .MYI (MYIndex) 文件中")])])],-1)),s[11]||(s[11]=e("p",null,"InnoDB 存储引擎：(MySQL5.5 版本后默认的存储引擎)",-1)),s[12]||(s[12]=e("ul",null,[e("li",null,[r("特点："),e("strong",null,"支持事务"),r("和外键操作，支持并发控制。对比 MyISAM 的存储引擎，InnoDB 写的处理效率差一些，并且会占用更多的磁盘空间以保留数据和索引")]),e("li",null,"应用场景：对事务的完整性有比较高的要求，在并发条件下要求数据的一致性，读写频繁的操作"),e("li",null,[r("存储方式： "),e("ul",null,[e("li",null,"使用共享表空间存储， 这种方式创建的表的表结构保存在 .frm 文件中， 数据和索引保存在 innodb_data_home_dir 和 innodb_data_file_path 定义的表空间中，可以是多个文件"),e("li",null,"使用多表空间存储，创建的表的表结构存在 .frm 文件中，每个表的数据和索引单独保存在 .ibd 中")])])],-1)),s[13]||(s[13]=e("p",null,"MEMORY 存储引擎：",-1)),s[14]||(s[14]=e("ul",null,[e("li",null,[r("特点：每个 MEMORY 表实际对应一个磁盘文件 ，该文件中只存储表的结构，表数据保存在内存中，且默认"),e("strong",null,"使用 HASH 索引"),r("，所以数据默认就是无序的，但是在需要快速定位记录可以提供更快的访问，"),e("strong",null,"服务一旦关闭，表中的数据就会丢失"),r("，存储不安全")]),e("li",null,[r("应用场景："),e("strong",null,"缓存型存储引擎"),r("，通常用于更新不太频繁的小表，用以快速得到访问结果")]),e("li",null,"存储方式：表结构保存在 .frm 中")],-1)),s[15]||(s[15]=e("p",null,"MERGE 存储引擎：",-1)),s[16]||(s[16]=e("ul",null,[e("li",null,[e("p",null,"特点："),e("ul",null,[e("li",null,"是一组 MyISAM 表的组合，这些 MyISAM 表必须结构完全相同，通过将不同的表分布在多个磁盘上"),e("li",null,"MERGE 表本身并没有存储数据，对 MERGE 类型的表可以进行查询、更新、删除操作，这些操作实际上是对内部的 MyISAM 表进行的")])]),e("li",null,[e("p",null,"应用场景：将一系列等同的 MyISAM 表以逻辑方式组合在一起，并作为一个对象引用他们，适合做数据仓库")]),e("li",null,[e("p",null,"操作方式："),e("ul",null,[e("li",null,"插入操作是通过 INSERT_METHOD 子句定义插入的表，使用 FIRST 或 LAST 值使得插入操作被相应地作用在第一或者最后一个表上；不定义这个子句或者定义为 NO，表示不能对 MERGE 表执行插入操作"),e("li",null,"对 MERGE 表进行 DROP 操作，但是这个操作只是删除 MERGE 表的定义，对内部的表是没有任何影响的")]),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," order_1"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"ENGINE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," MyISAM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," DEFAULT"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," CHARSET=utf8"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," order_2"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"ENGINE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," MyISAM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," DEFAULT"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," CHARSET=utf8"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," order_all"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"\t--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 结构与MyISAM表相同")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"ENGINE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," MERGE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," UNION"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (order_1,order_2) INSERT_METHOD"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"LAST"),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," DEFAULT"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," CHARSET=utf8"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})]),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-MERGE.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])])],-1)),s[17]||(s[17]=e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"特性"),e("th",null,"MyISAM"),e("th",null,"InnoDB"),e("th",null,"MEMORY")])]),e("tbody",null,[e("tr",null,[e("td",null,"存储限制"),e("td",null,"有（平台对文件系统大小的限制）"),e("td",null,"64TB"),e("td",null,"有（平台的内存限制）")]),e("tr",null,[e("td",null,[e("strong",null,"事务安全")]),e("td",null,[e("strong",null,"不支持")]),e("td",null,[e("strong",null,"支持")]),e("td",null,[e("strong",null,"不支持")])]),e("tr",null,[e("td",null,[e("strong",null,"锁机制")]),e("td",null,[e("strong",null,"表锁")]),e("td",null,[e("strong",null,"表锁/行锁")]),e("td",null,[e("strong",null,"表锁")])]),e("tr",null,[e("td",null,"B+Tree 索引"),e("td",null,"支持"),e("td",null,"支持"),e("td",null,"支持")]),e("tr",null,[e("td",null,"哈希索引"),e("td",null,"不支持"),e("td",null,"不支持"),e("td",null,"支持")]),e("tr",null,[e("td",null,"全文索引"),e("td",null,"支持"),e("td",null,"支持"),e("td",null,"不支持")]),e("tr",null,[e("td",null,"集群索引"),e("td",null,"不支持"),e("td",null,"支持"),e("td",null,"不支持")]),e("tr",null,[e("td",null,"数据索引"),e("td",null,"不支持"),e("td",null,"支持"),e("td",null,"支持")]),e("tr",null,[e("td",null,"数据缓存"),e("td",null,"不支持"),e("td",null,"支持"),e("td",null,"N/A")]),e("tr",null,[e("td",null,"索引缓存"),e("td",null,"支持"),e("td",null,"支持"),e("td",null,"N/A")]),e("tr",null,[e("td",null,"数据可压缩"),e("td",null,"支持"),e("td",null,"不支持"),e("td",null,"不支持")]),e("tr",null,[e("td",null,"空间使用"),e("td",null,"低"),e("td",null,"高"),e("td",null,"N/A")]),e("tr",null,[e("td",null,"内存使用"),e("td",null,"低"),e("td",null,"高"),e("td",null,"中等")]),e("tr",null,[e("td",null,"批量插入速度"),e("td",null,"高"),e("td",null,"低"),e("td",null,"高")]),e("tr",null,[e("td",null,[e("strong",null,"外键")]),e("td",null,[e("strong",null,"不支持")]),e("td",null,[e("strong",null,"支持")]),e("td",null,[e("strong",null,"不支持")])])])],-1)),s[18]||(s[18]=e("p",null,"只读场景 MyISAM 比 InnoDB 更快：",-1)),s[19]||(s[19]=e("ul",null,[e("li",null,"底层存储结构有差别，MyISAM 是非聚簇索引，叶子节点保存的是数据的具体地址，不用回表查询"),e("li",null,"InnoDB 每次查询需要维护 MVCC 版本状态，保证并发状态下的读写冲突问题")],-1)),s[20]||(s[20]=e("hr",null,null,-1)),s[21]||(s[21]=e("h3",{id:"引擎操作",tabindex:"-1"},[r("引擎操作 "),e("a",{class:"header-anchor",href:"#引擎操作","aria-label":'Permalink to "引擎操作"'},"​")],-1)),s[22]||(s[22]=e("ul",null,[e("li",null,[e("p",null,"查询数据库支持的存储引擎"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SHOW"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ENGINES"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SHOW"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," VARIABLES"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," LIKE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '%storage_engine%'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 查看Mysql数据库默认的存储引擎")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"查询某个数据库中所有数据表的存储引擎"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SHOW"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," STATUS"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 数据库名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"查询某个数据库中某个数据表的存储引擎"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SHOW"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," STATUS"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 数据库名称"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," WHERE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," NAME"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '数据表名称'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"创建数据表，指定存储引擎"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"\t列名,数据类型,")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"    ...")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"ENGINE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 引擎名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"修改数据表的存储引擎"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ENGINE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 引擎名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])])],-1)),s[23]||(s[23]=e("hr",null,null,-1)),s[24]||(s[24]=e("h2",{id:"索引机制",tabindex:"-1"},[r("索引机制 "),e("a",{class:"header-anchor",href:"#索引机制","aria-label":'Permalink to "索引机制"'},"​")],-1)),s[25]||(s[25]=e("h3",{id:"索引介绍",tabindex:"-1"},[r("索引介绍 "),e("a",{class:"header-anchor",href:"#索引介绍","aria-label":'Permalink to "索引介绍"'},"​")],-1)),s[26]||(s[26]=e("h4",{id:"基本介绍-1",tabindex:"-1"},[r("基本介绍 "),e("a",{class:"header-anchor",href:"#基本介绍-1","aria-label":'Permalink to "基本介绍"'},"​")],-1)),s[27]||(s[27]=e("p",null,"MySQL 官方对索引的定义为：索引（index）是帮助 MySQL 高效获取数据的一种数据结构，**本质是排好序的快速查找数据结构。**在表数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式指向数据， 这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引",-1)),s[28]||(s[28]=e("p",null,[e("strong",null,"索引是在存储引擎层实现的"),r("，所以并没有统一的索引标准，即不同存储引擎的索引的工作方式并不一样")],-1)),s[29]||(s[29]=e("p",null,[r("索引使用：一张数据表，用于保存数据；一个索引配置文件，用于保存索引；每个索引都指向了某一个数据 "),e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BB%8B%E7%BB%8D.png",alt:""})],-1)),s[30]||(s[30]=e("p",null,"左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。为了加快 Col2 的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据的物理地址的指针，这样就可以运用二叉查找快速获取到相应数据",-1)),s[31]||(s[31]=e("p",null,"索引的优点：",-1)),s[32]||(s[32]=e("ul",null,[e("li",null,"类似于书籍的目录索引，提高数据检索的效率，降低数据库的 IO 成本"),e("li",null,"通过索引列对数据进行排序，降低数据排序的成本，降低 CPU 的消耗")],-1)),s[33]||(s[33]=e("p",null,"索引的缺点：",-1)),s[34]||(s[34]=e("ul",null,[e("li",null,[r("一般来说索引本身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式"),e("strong",null,"存储在磁盘"),r("上")]),e("li",null,[r("虽然索引大大提高了查询效率，同时却也降低更新表的速度。对表进行 INSERT、UPDATE、DELETE 操作，MySQL 不仅要保存数据，还要保存一下索引文件每次更新添加了索引列的字段，还会调整因为更新所带来的键值变化后的索引信息，"),e("strong",null,"但是更新数据也需要先从数据库中获取"),r("，索引加快了获取速度，所以可以相互抵消一下。")]),e("li",null,"索引会影响到 WHERE 的查询条件和排序 ORDER BY 两大功能")],-1)),s[35]||(s[35]=e("hr",null,null,-1)),s[36]||(s[36]=e("h4",{id:"索引分类",tabindex:"-1"},[r("索引分类 "),e("a",{class:"header-anchor",href:"#索引分类","aria-label":'Permalink to "索引分类"'},"​")],-1)),s[37]||(s[37]=e("p",null,"索引一般的分类如下：",-1)),s[38]||(s[38]=e("ul",null,[e("li",null,[e("p",null,"功能分类"),e("ul",null,[e("li",null,"主键索引：一种特殊的唯一索引，不允许有空值，一般在建表时同时创建主键索引"),e("li",null,"单列索引：一个索引只包含单个列，一个表可以有多个单列索引（普通索引）"),e("li",null,"联合索引：顾名思义，就是将单列索引进行组合"),e("li",null,[r("唯一索引：索引列的值必须唯一，"),e("strong",null,"允许有空值"),r("，如果是联合索引，则列值组合必须唯一 "),e("ul",null,[e("li",null,"NULL 值可以出现多次，因为两个 NULL 比较的结果既不相等，也不不等，结果仍然是未知"),e("li",null,"可以声明不允许存储 NULL 值的非空唯一索引")])]),e("li",null,"外键索引：只有 InnoDB 引擎支持外键索引，用来保证数据的一致性、完整性和实现级联操作")])]),e("li",null,[e("p",null,"结构分类"),e("ul",null,[e("li",null,"BTree 索引：MySQL 使用最频繁的一个索引数据结构，是 InnoDB 和 MyISAM 存储引擎默认的索引类型，底层基于 B+Tree"),e("li",null,"Hash 索引：MySQL中 Memory 存储引擎默认支持的索引类型"),e("li",null,"R-tree 索引（空间索引）：空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型"),e("li",null,"Full-text 索引（全文索引）：快速匹配全部文档的方式。MyISAM 支持， InnoDB 不支持 FULLTEXT 类型的索引，但是 InnoDB 可以使用 sphinx 插件支持全文索引，MEMORY 引擎不支持")]),e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"索引"),e("th",null,"InnoDB"),e("th",null,"MyISAM"),e("th",null,"Memory")])]),e("tbody",null,[e("tr",null,[e("td",null,"BTREE"),e("td",null,"支持"),e("td",null,"支持"),e("td",null,"支持")]),e("tr",null,[e("td",null,"HASH"),e("td",null,"不支持"),e("td",null,"不支持"),e("td",null,"支持")]),e("tr",null,[e("td",null,"R-tree"),e("td",null,"不支持"),e("td",null,"支持"),e("td",null,"不支持")]),e("tr",null,[e("td",null,"Full-text"),e("td",null,"5.6 版本之后支持"),e("td",null,"支持"),e("td",null,"不支持")])])])])],-1)),s[39]||(s[39]=e("p",null,"联合索引图示：根据身高年龄建立的组合索引（height、age）",-1)),s[40]||(s[40]=e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E7%BB%84%E5%90%88%E7%B4%A2%E5%BC%95%E5%9B%BE.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})],-1)),s[41]||(s[41]=e("hr",null,null,-1)),s[42]||(s[42]=e("h3",{id:"索引操作",tabindex:"-1"},[r("索引操作 "),e("a",{class:"header-anchor",href:"#索引操作","aria-label":'Permalink to "索引操作"'},"​")],-1)),s[43]||(s[43]=e("p",null,"索引在创建表的时候可以同时创建， 也可以随时增加新的索引",-1)),s[44]||(s[44]=e("ul",null,[e("li",null,[e("p",null,[r("创建索引：如果一个表中有一列是主键，那么会"),e("strong",null,"默认为其创建主键索引"),r("（主键列不需要单独创建索引）")]),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," [UNIQUE"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FULLTEXT]"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," [USING "),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"索引类型]"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"列名..."),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引类型默认是"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," B+TREE")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"查看索引"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SHOW"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"添加索引"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 单列索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"列名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 组合索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"列名1,列名2,..."),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 主键索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," PRIMARY"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," KEY"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"主键列名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"); ")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 外键索引"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"添加外键约束，就是外键索引"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," CONSTRAINT"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 外键名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FOREIGN"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," KEY"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (本表外键列名) REFERENCES 主表名("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"主键列名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 唯一索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," UNIQUE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"列名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 全文索引"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"mysql只支持文本类型"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FULLTEXT"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引名称"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"列名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"删除索引"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DROP"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引名称"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 表名"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])]),e("li",null,[e("p",null,"案例练习"),e("p",null,"数据准备：student"),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"id"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\tNAME"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\tscore")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"1"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t张三"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t23"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t99")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"2"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t李四"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t24"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t95")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"3"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t王五"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t25"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t98")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"4"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t赵六"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t26"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t97")])])]),e("button",{class:"collapse"})]),e("p",null,"索引操作："),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 为student表中姓名列创建一个普通索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," idx_name"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," student"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"NAME"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 为student表中年龄列创建一个唯一索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," UNIQUE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," idx_age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," student"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"age"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")])])]),e("button",{class:"collapse"})])])],-1)),s[45]||(s[45]=e("hr",null,null,-1)),s[46]||(s[46]=e("h3",{id:"聚簇索引",tabindex:"-1"},[r("聚簇索引 "),e("a",{class:"header-anchor",href:"#聚簇索引","aria-label":'Permalink to "聚簇索引"'},"​")],-1)),s[47]||(s[47]=e("h4",{id:"索引对比",tabindex:"-1"},[r("索引对比 "),e("a",{class:"header-anchor",href:"#索引对比","aria-label":'Permalink to "索引对比"'},"​")],-1)),s[48]||(s[48]=e("p",null,"聚簇索引是一种数据存储方式，并不是一种单独的索引类型",-1)),s[49]||(s[49]=e("ul",null,[e("li",null,[e("p",null,"聚簇索引的叶子节点存放的是主键值和数据行，支持覆盖索引")]),e("li",null,[e("p",null,"非聚簇索引的叶子节点存放的是主键值或指向数据行的指针（由存储引擎决定）")])],-1)),s[50]||(s[50]=e("p",null,"在 Innodb 下主键索引是聚簇索引，在 MyISAM 下主键索引是非聚簇索引",-1)),s[51]||(s[51]=e("hr",null,null,-1)),s[52]||(s[52]=e("h4",{id:"innodb",tabindex:"-1"},[r("Innodb "),e("a",{class:"header-anchor",href:"#innodb","aria-label":'Permalink to "Innodb"'},"​")],-1)),s[53]||(s[53]=e("h5",{id:"聚簇索引-1",tabindex:"-1"},[r("聚簇索引 "),e("a",{class:"header-anchor",href:"#聚簇索引-1","aria-label":'Permalink to "聚簇索引"'},"​")],-1)),s[54]||(s[54]=e("p",null,"在 Innodb 存储引擎，B+ 树索引可以分为聚簇索引（也称聚集索引、clustered index）和辅助索引（也称非聚簇索引或二级索引、secondary index、non-clustered index）",-1)),s[55]||(s[55]=e("p",null,"InnoDB 中，聚簇索引是按照每张表的主键构造一颗 B+ 树，叶子节点中存放的就是整张表的数据，将聚簇索引的叶子节点称为数据页",-1)),s[56]||(s[56]=e("ul",null,[e("li",null,[r("这个特性决定了"),e("strong",null,"数据也是索引的一部分"),r("，所以一张表只能有一个聚簇索引")]),e("li",null,"辅助索引的存在不影响聚簇索引中数据的组织，所以一张表可以有多个辅助索引")],-1)),s[57]||(s[57]=e("p",null,"聚簇索引的优点：",-1)),s[58]||(s[58]=e("ul",null,[e("li",null,"数据访问更快，聚簇索引将索引和数据保存在同一个 B+ 树中，因此从聚簇索引中获取数据比非聚簇索引更快"),e("li",null,"聚簇索引对于主键的排序查找和范围查找速度非常快")],-1)),s[59]||(s[59]=e("p",null,"聚簇索引的缺点：",-1)),s[60]||(s[60]=e("ul",null,[e("li",null,[e("p",null,"插入速度严重依赖于插入顺序，按照主键的顺序（递增）插入是最快的方式，否则将会出现页分裂，严重影响性能，所以对于 InnoDB 表，一般都会定义一个自增的 ID 列为主键")]),e("li",null,[e("p",null,"更新主键的代价很高，将会导致被更新的行移动，所以对于 InnoDB 表，一般定义主键为不可更新")]),e("li",null,[e("p",null,"二级索引访问需要两次索引查找，第一次找到主键值，第二次根据主键值找到行数据")])],-1)),s[61]||(s[61]=e("hr",null,null,-1)),s[62]||(s[62]=e("h5",{id:"辅助索引",tabindex:"-1"},[r("辅助索引 "),e("a",{class:"header-anchor",href:"#辅助索引","aria-label":'Permalink to "辅助索引"'},"​")],-1)),s[63]||(s[63]=e("p",null,"在聚簇索引之上创建的索引称之为辅助索引，非聚簇索引都是辅助索引，像复合索引、前缀索引、唯一索引等",-1)),s[64]||(s[64]=e("p",null,"辅助索引叶子节点存储的是主键值，而不是数据的物理地址，所以访问数据需要二次查找，推荐使用覆盖索引，可以减少回表查询",-1)),s[65]||(s[65]=e("p",null,[e("strong",null,"检索过程"),r("：辅助索引找到主键值，再通过聚簇索引（二分）找到数据页，最后通过数据页中的 Page Directory（二分）找到对应的数据分组，遍历组内所所有的数据找到数据行")],-1)),s[66]||(s[66]=e("p",null,"补充：无索引走全表查询，查到数据页后和上述步骤一致",-1)),s[67]||(s[67]=e("hr",null,null,-1)),s[68]||(s[68]=e("h5",{id:"索引实现",tabindex:"-1"},[r("索引实现 "),e("a",{class:"header-anchor",href:"#索引实现","aria-label":'Permalink to "索引实现"'},"​")],-1)),s[69]||(s[69]=e("p",null,"InnoDB 使用 B+Tree 作为索引结构，并且 InnoDB 一定有索引",-1)),s[70]||(s[70]=e("p",null,"主键索引：",-1)),s[71]||(s[71]=e("ul",null,[e("li",null,[e("p",null,"在 InnoDB 中，表数据文件本身就是按 B+Tree 组织的一个索引结构，这个索引的 key 是数据表的主键，叶子节点 data 域保存了完整的数据记录")]),e("li",null,[e("p",null,[r("InnoDB 的表数据文件"),e("strong",null,"通过主键聚集数据"),r("，如果没有定义主键，会选择非空唯一索引代替，如果也没有这样的列，MySQL 会自动为 InnoDB 表生成一个"),e("strong",null,"隐含字段 row_id"),r(" 作为主键，这个字段长度为 6 个字节，类型为长整形")])])],-1)),s[72]||(s[72]=e("p",null,"辅助索引：",-1)),s[73]||(s[73]=e("ul",null,[e("li",null,[e("p",null,"InnoDB 的所有辅助索引（二级索引）都引用主键作为 data 域")]),e("li",null,[e("p",null,[r("InnoDB 表是基于聚簇索引建立的，因此 InnoDB 的索引能提供一种非常快速的主键查找性能。不过辅助索引也会包含主键列，所以不建议使用过长的字段作为主键，"),e("strong",null,"过长的主索引会令辅助索引变得过大")])])],-1)),s[74]||(s[74]=e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-InnoDB%E8%81%9A%E7%B0%87%E5%92%8C%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})],-1)),s[75]||(s[75]=e("hr",null,null,-1)),s[76]||(s[76]=e("h4",{id:"myisam",tabindex:"-1"},[r("MyISAM "),e("a",{class:"header-anchor",href:"#myisam","aria-label":'Permalink to "MyISAM"'},"​")],-1)),s[77]||(s[77]=e("h5",{id:"非聚簇",tabindex:"-1"},[r("非聚簇 "),e("a",{class:"header-anchor",href:"#非聚簇","aria-label":'Permalink to "非聚簇"'},"​")],-1)),s[78]||(s[78]=e("p",null,[r("MyISAM 的主键索引使用的是非聚簇索引，索引文件和数据文件是分离的，"),e("strong",null,"索引文件仅保存数据的地址")],-1)),s[79]||(s[79]=e("ul",null,[e("li",null,"主键索引 B+ 树的节点存储了主键，辅助键索引 B+ 树存储了辅助键，表数据存储在独立的地方，这两颗 B+ 树的叶子节点都使用一个地址指向真正的表数据，对于表数据来说，这两个键没有任何差别"),e("li",null,[r("由于索引树是独立的，通过辅助索引检索"),e("strong",null,"无需回表查询"),r("访问主键的索引树")])],-1)),s[80]||(s[80]=e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E5%92%8C%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95%E6%A3%80%E9%94%81%E6%95%B0%E6%8D%AE%E5%9B%BE.jpg",alt:"",loading:"lazy",decoding:"async",class:"lazy"})],-1)),s[81]||(s[81]=e("hr",null,null,-1)),s[82]||(s[82]=e("h5",{id:"索引实现-1",tabindex:"-1"},[r("索引实现 "),e("a",{class:"header-anchor",href:"#索引实现-1","aria-label":'Permalink to "索引实现"'},"​")],-1)),s[83]||(s[83]=e("p",null,"MyISAM 的索引方式也叫做非聚集的，之所以这么称呼是为了与 InnoDB 的聚集索引区分",-1)),s[84]||(s[84]=e("p",null,"主键索引：MyISAM 引擎使用 B+Tree 作为索引结构，叶节点的 data 域存放的是数据记录的地址",-1)),s[85]||(s[85]=e("p",null,"辅助索引：MyISAM 中主索引和辅助索引（Secondary key）在结构上没有任何区别，只是主索引要求 key 是唯一的，而辅助索引的 key 可以重复",-1)),s[86]||(s[86]=e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-MyISAM%E4%B8%BB%E9%94%AE%E5%92%8C%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})],-1)),s[87]||(s[87]=e("p",null,[r("参考文章："),e("a",{href:"https://blog.csdn.net/lm1060891265/article/details/81482136",target:"_blank",rel:"noreferrer"},"https://blog.csdn.net/lm1060891265/article/details/81482136")],-1)),s[88]||(s[88]=e("hr",null,null,-1)),s[89]||(s[89]=e("h3",{id:"索引结构",tabindex:"-1"},[r("索引结构 "),e("a",{class:"header-anchor",href:"#索引结构","aria-label":'Permalink to "索引结构"'},"​")],-1)),s[90]||(s[90]=e("h4",{id:"数据页",tabindex:"-1"},[r("数据页 "),e("a",{class:"header-anchor",href:"#数据页","aria-label":'Permalink to "数据页"'},"​")],-1)),s[91]||(s[91]=e("p",null,"文件系统的最小单元是块（block），一个块的大小是 4K，系统从磁盘读取数据到内存时是以磁盘块为基本单位的，位于同一个磁盘块中的数据会被一次性读取出来，而不是需要什么取什么",-1)),s[92]||(s[92]=e("p",null,"InnoDB 存储引擎中有页（Page）的概念，页是 MySQL 磁盘管理的最小单位",-1)),s[93]||(s[93]=e("ul",null,[e("li",null,[e("strong",null,"InnoDB 存储引擎中默认每个页的大小为 16KB，索引中一个节点就是一个数据页"),r("，所以会一次性读取 16KB 的数据到内存")]),e("li",null,"InnoDB 引擎将若干个地址连接磁盘块，以此来达到页的大小 16KB"),e("li",null,"在查询数据时如果一个页中的每条数据都能有助于定位数据记录的位置，这将会减少磁盘 I/O 次数，提高查询效率")],-1)),s[94]||(s[94]=e("p",null,[r("超过 16KB 的一条记录，主键索引页只会存储部分数据和指向"),e("strong",null,"溢出页"),r("的指针，剩余数据都会分散存储在溢出页中")],-1)),s[95]||(s[95]=e("p",null,"数据页物理结构，从上到下：",-1)),s[96]||(s[96]=e("ul",null,[e("li",null,[r("File Header：上一页和下一页的指针、该页的类型（索引页、数据页、日志页等）、"),e("strong",null,"校验和"),r("、LSN（最近一次修改当前页面时的系统 lsn 值，事务持久性部分详解）等信息")]),e("li",null,"Page Header：记录状态信息"),e("li",null,"Infimum + Supremum：当前页的最小记录和最大记录（头尾指针），Infimum 所在分组只有一条记录，Supremum 所在分组可以有 1 ~ 8 条记录，剩余的分组可以有 4 ~ 8 条记录"),e("li",null,"User Records：存储数据的记录"),e("li",null,"Free Space：尚未使用的存储空间"),e("li",null,"Page Directory：分组的目录，可以通过目录快速定位（二分法）数据的分组"),e("li",null,"File Trailer：检验和字段，在刷脏过程中，页首和页尾的校验和一致才能说明页面刷新成功，二者不同说明刷新期间发生了错误；LSN 字段，也是用来校验页面的完整性")],-1)),s[97]||(s[97]=e("p",null,"数据页中包含数据行，数据的存储是基于数据行的，数据行有 next_record 属性指向下一个行数据，所以是可以遍历的，但是一组数据至多 8 个行，通过 Page Directory 先定位到组，然后遍历获取所需的数据行即可",-1)),s[98]||(s[98]=e("p",null,"数据行中有三个隐藏字段：trx_id、roll_pointer、row_id（在事务章节会详细介绍它们的作用）",-1)),s[99]||(s[99]=e("hr",null,null,-1)),s[100]||(s[100]=e("h4",{id:"btree",tabindex:"-1"},[r("BTree "),e("a",{class:"header-anchor",href:"#btree","aria-label":'Permalink to "BTree"'},"​")],-1)),s[101]||(s[101]=e("p",null,"BTree 的索引类型是基于 B+Tree 树型数据结构的，B+Tree 又是 BTree 数据结构的变种，用在数据库和操作系统中的文件系统，特点是能够保持数据稳定有序",-1)),s[102]||(s[102]=e("p",null,"BTree 又叫多路平衡搜索树，一颗 m 叉的 BTree 特性如下：",-1)),s[103]||(s[103]=e("ul",null,[e("li",null,"树中每个节点最多包含 m 个孩子"),e("li",null,"除根节点与叶子节点外，每个节点至少有 [ceil(m/2)] 个孩子"),e("li",null,"若根节点不是叶子节点，则至少有两个孩子"),e("li",null,"所有的叶子节点都在同一层"),e("li",null,"每个非叶子节点由 n 个 key 与 n+1 个指针组成，其中 [ceil(m/2)-1] <= n <= m-1")],-1)),s[104]||(s[104]=e("p",null,"5 叉，key 的数量 [ceil(m/2)-1] <= n <= m-1 为 2 <= n <=4 ，当 n>4 时中间节点分裂到父节点，两边节点分裂",-1)),s[105]||(s[105]=e("p",null,"插入 C N G A H E K Q M F W L T Z D P R X Y S 数据的工作流程：",-1)),s[106]||(s[106]=e("ul",null,[e("li",null,[e("p",null,"插入前 4 个字母 C N G A"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B1.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"插入 H，n>4，中间元素 G 字母向上分裂到新的节点"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B2.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"插入 E、K、Q 不需要分裂"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B3.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"插入 M，中间元素 M 字母向上分裂到父节点 G"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B4.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"插入 F，W，L，T 不需要分裂"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B5.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"插入 Z，中间元素 T 向上分裂到父节点中"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B6.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"插入 D，中间元素 D 向上分裂到父节点中，然后插入 P，R，X，Y 不需要分裂"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B7.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,"最后插入 S，NPQR 节点 n>5，中间节点 Q 向上分裂，但分裂后父节点 DGMT 的 n>5，中间节点 M 向上分裂"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-BTree%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B8.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])])],-1)),s[107]||(s[107]=e("p",null,[r("BTree 树就已经构建完成了，BTree 树和二叉树相比， 查询数据的效率更高， 因为对于相同的数据量来说，"),e("strong",null,"BTree 的层级结构比二叉树少"),r("，所以搜索速度快")],-1)),s[108]||(s[108]=e("p",null,[r("BTree 结构的数据可以让系统高效的找到数据所在的磁盘块，定义一条记录为一个二元组 [key, data] ，key 为记录的键值，对应表中的主键值，data 为一行记录中除主键外的数据。对于不同的记录，key 值互不相同，BTree 中的每个节点根据实际情况可以包含大量的关键字信息和分支 "),e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8E%9F%E7%90%861.png",alt:""})],-1)),s[109]||(s[109]=e("p",null,"缺点：当进行范围查找时会出现回旋查找",-1)),s[110]||(s[110]=e("hr",null,null,-1)),s[111]||(s[111]=e("h4",{id:"b-tree",tabindex:"-1"},[r("B+Tree "),e("a",{class:"header-anchor",href:"#b-tree","aria-label":'Permalink to "B+Tree"'},"​")],-1)),s[112]||(s[112]=e("h5",{id:"数据结构",tabindex:"-1"},[r("数据结构 "),e("a",{class:"header-anchor",href:"#数据结构","aria-label":'Permalink to "数据结构"'},"​")],-1)),s[113]||(s[113]=e("p",null,"BTree 数据结构中每个节点中不仅包含数据的 key 值，还有 data 值。磁盘中每一页的存储空间是有限的，如果 data 数据较大时将会导致每个节点（即一个页）能存储的 key 的数量很小，当存储的数据量很大时同样会导致 B-Tree 的深度较大，增大查询时的磁盘 I/O 次数，进而影响查询效率，所以引入 B+Tree",-1)),s[114]||(s[114]=e("p",null,"B+Tree 为 BTree 的变种，B+Tree 与 BTree 的区别为：",-1)),s[115]||(s[115]=e("ul",null,[e("li",null,"n 叉 B+Tree 最多含有 n 个 key（哈希值），而 BTree 最多含有 n-1 个 key")],-1)),s[116]||(s[116]=e("ul",null,[e("li",null,[r("所有"),e("strong",null,"非叶子节点只存储键值 key"),r(" 信息，只进行数据索引，使每个非叶子节点所能保存的关键字大大增加")]),e("li",null,[r("所有"),e("strong",null,"数据都存储在叶子节点"),r("，所以每次数据查询的次数都一样")]),e("li",null,[e("strong",null,"叶子节点按照 key 大小顺序排列，左边结尾数据都会保存右边节点开始数据的指针，形成一个链表")]),e("li",null,[r("所有节点中的 key 在叶子节点中也存在（比如 5)，"),e("strong",null,"key 允许重复"),r("，B 树不同节点不存在重复的 key")])],-1)),s[117]||(s[117]=e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-B加Tree数据结构.png",style:{zoom:"67%"}},null,-1)),s[118]||(s[118]=e("p",null,"B* 树：是 B+ 树的变体，在 B+ 树的非根和非叶子结点再增加指向兄弟的指针",-1)),s[119]||(s[119]=e("hr",null,null,-1)),s[120]||(s[120]=e("h5",{id:"优化结构",tabindex:"-1"},[r("优化结构 "),e("a",{class:"header-anchor",href:"#优化结构","aria-label":'Permalink to "优化结构"'},"​")],-1)),s[121]||(s[121]=e("p",null,[r("MySQL 索引数据结构对经典的 B+Tree 进行了优化，在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，"),e("strong",null,"提高区间访问的性能，防止回旋查找")],-1)),s[122]||(s[122]=e("p",null,"区间访问的意思是访问索引为 5 - 15 的数据，可以直接根据相邻节点的指针遍历",-1)),s[123]||(s[123]=e("p",null,[r("B+ 树的"),e("strong",null,"叶子节点是数据页"),r("（page），一个页里面可以存多个数据行")],-1)),s[124]||(s[124]=e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/%E7%B4%A2%E5%BC%95%E7%9A%84%E5%8E%9F%E7%90%862.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})],-1)),s[125]||(s[125]=e("p",null,[r("通常在 B+Tree 上有两个头指针，"),e("strong",null,"一个指向根节点，另一个指向关键字最小的叶子节点"),r("，而且所有叶子节点（即数据节点）之间是一种链式环结构。可以对 B+Tree 进行两种查找运算：")],-1)),s[126]||(s[126]=e("ul",null,[e("li",null,"有范围：对于主键的范围查找和分页查找"),e("li",null,"有顺序：从根节点开始，进行随机查找，顺序查找")],-1)),s[127]||(s[127]=e("p",null,"InnoDB 中每个数据页的大小默认是 16KB，",-1)),s[128]||(s[128]=e("ul",null,[e("li",null,[r("索引行：一般表的主键类型为 INT（4 字节）或 BIGINT（8 字节），指针大小在 InnoDB 中设置为 6 字节节，也就是说一个页大概存储 16KB/(8B+6B)=1K 个键值（估值）。则一个深度为 3 的 B+Tree 索引可以维护 "),e("code",null,"10^3 * 10^3 * 10^3 = 10亿"),r(" 条记录")]),e("li",null,"数据行：一行数据的大小可能是 1k，一个数据页可以存储 16 行")],-1)),s[129]||(s[129]=e("p",null,[r("实际情况中每个节点可能不能填充满，因此在数据库中，B+Tree 的高度一般都在 2-4 层。MySQL 的 InnoDB 存储引擎在设计时是"),e("strong",null,"将根节点常驻内存的"),r("，也就是说查找某一键值的行记录时最多只需要 1~3 次磁盘 I/O 操作")],-1)),s[130]||(s[130]=e("p",null,"B+Tree 优点：提高查询速度，减少磁盘的 IO 次数，树形结构较小",-1)),s[131]||(s[131]=e("hr",null,null,-1)),s[132]||(s[132]=e("h5",{id:"索引维护",tabindex:"-1"},[r("索引维护 "),e("a",{class:"header-anchor",href:"#索引维护","aria-label":'Permalink to "索引维护"'},"​")],-1)),s[133]||(s[133]=e("p",null,"B+ 树为了保持索引的有序性，在插入新值的时候需要做相应的维护",-1)),s[134]||(s[134]=e("p",null,"每个索引中每个块存储在磁盘页中，可能会出现以下两种情况：",-1)),s[135]||(s[135]=e("ul",null,[e("li",null,[r("如果所在的数据页已经满了，这时候需要申请一个新的数据页，然后挪动部分数据过去，这个过程称为"),e("strong",null,"页分裂"),r("，原本放在一个页的数据现在分到两个页中，降低了空间利用率")]),e("li",null,[r("当相邻两个页由于删除了数据，利用率很低之后，会将数据页做"),e("strong",null,"页合并"),r("，合并的过程可以认为是分裂过程的逆过程")]),e("li",null,"这两个情况都是由 B+ 树的结构决定的")],-1)),s[136]||(s[136]=e("p",null,"一般选用数据小的字段做索引，字段长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小",-1)),s[137]||(s[137]=e("p",null,[r("自增主键的插入数据模式，可以让主键索引尽量地保持递增顺序插入，不涉及到挪动其他记录，"),e("strong",null,"避免了页分裂"),r("，页分裂的目的就是保证后一个数据页中的所有行主键值比前一个数据页中主键值大")],-1)),s[138]||(s[138]=e("p",null,[r("参考文章："),e("a",{href:"https://developer.aliyun.com/article/919861",target:"_blank",rel:"noreferrer"},"https://developer.aliyun.com/article/919861")],-1)),s[139]||(s[139]=e("hr",null,null,-1)),s[140]||(s[140]=e("h3",{id:"设计原则",tabindex:"-1"},[r("设计原则 "),e("a",{class:"header-anchor",href:"#设计原则","aria-label":'Permalink to "设计原则"'},"​")],-1)),s[141]||(s[141]=e("p",null,"索引的设计可以遵循一些已有的原则，创建索引的时候请尽量考虑符合这些原则，便于提升索引的使用效率",-1)),s[142]||(s[142]=e("p",null,"创建索引时的原则：",-1)),s[143]||(s[143]=e("ul",null,[e("li",null,"对查询频次较高，且数据量比较大的表建立索引"),e("li",null,"使用唯一索引，区分度越高，使用索引的效率越高"),e("li",null,"索引字段的选择，最佳候选列应当从 where 子句的条件中提取，使用覆盖索引"),e("li",null,"使用短索引，索引创建之后也是使用硬盘来存储的，因此提升索引访问的 I/O 效率，也可以提升总体的访问效率。假如构成索引的字段总长度比较短，那么在给定大小的存储块内可以存储更多的索引值，相应的可以有效的提升 MySQL 访问索引的 I/O 效率"),e("li",null,"索引可以有效的提升查询数据的效率，但索引数量不是多多益善，索引越多，维护索引的代价越高。对于插入、更新、删除等 DML 操作比较频繁的表来说，索引过多，会引入相当高的维护代价，降低 DML 操作的效率，增加相应操作的时间消耗；另外索引过多的话，MySQL 也会犯选择困难病，虽然最终仍然会找到一个可用的索引，但提高了选择的代价")],-1)),s[144]||(s[144]=e("ul",null,[e("li",null,[e("p",null,[r("MySQL 建立联合索引时会遵守"),e("strong",null,"最左前缀匹配原则"),r("，即最左优先，在检索数据时从联合索引的最左边开始匹配")]),e("p",null,[r("N 个列组合而成的组合索引，相当于创建了 N 个索引，如果查询时 where 句中使用了组成该索引的"),e("strong",null,"前"),r("几个字段，那么这条查询 SQL 可以利用组合索引来提升查询效率")]),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 对name、address、phone列建一个联合索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"ALTER"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," TABLE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ADD"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," index_three"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"name,address,phone"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 查询语句执行时会依照最左前缀匹配原则，检索时分别会使用索引进行数据匹配。")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"name,address,phone"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"name,address"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"name,phone"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")\t"),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 只有name字段走了索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"name"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),r("\n"),e("span",{class:"line"}),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 索引的字段可以是任意顺序的，优化器会帮助我们调整顺序，下面的SQL语句可以命中索引")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SELECT"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," *"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," WHERE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," address"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '北京'"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," AND"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," phone"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '12345'"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," AND"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," name"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '张三'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})]),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 如果联合索引中最左边的列不包含在条件查询中，SQL语句就不会命中索引，比如：")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SELECT"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," *"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," WHERE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," address"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '北京'"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," AND"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," phone"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '12345'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})])])],-1)),s[145]||(s[145]=e("p",null,"哪些情况不要建立索引：",-1)),s[146]||(s[146]=e("ul",null,[e("li",null,"记录太少的表"),e("li",null,"经常增删改的表"),e("li",null,"频繁更新的字段不适合创建索引"),e("li",null,"where 条件里用不到的字段不创建索引")],-1)),s[147]||(s[147]=e("hr",null,null,-1)),s[148]||(s[148]=e("h3",{id:"索引优化",tabindex:"-1"},[r("索引优化 "),e("a",{class:"header-anchor",href:"#索引优化","aria-label":'Permalink to "索引优化"'},"​")],-1)),s[149]||(s[149]=e("h4",{id:"覆盖索引",tabindex:"-1"},[r("覆盖索引 "),e("a",{class:"header-anchor",href:"#覆盖索引","aria-label":'Permalink to "覆盖索引"'},"​")],-1)),s[150]||(s[150]=e("p",null,"覆盖索引：包含所有满足查询需要的数据的索引（SELECT 后面的字段刚好是索引字段），可以利用该索引返回 SELECT 列表的字段，而不必根据索引去聚簇索引上读取数据文件",-1)),s[151]||(s[151]=e("p",null,"回表查询：要查找的字段不在非主键索引树上时，需要通过叶子节点的主键值去主键索引上获取对应的行数据",-1)),s[152]||(s[152]=e("p",null,"使用覆盖索引，防止回表查询：",-1)),s[153]||(s[153]=e("ul",null,[e("li",null,[e("p",null,"表 user 主键为 id，普通索引为 age，查询语句："),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SELECT"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," *"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," WHERE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 30"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})]),e("p",null,"查询过程：先通过普通索引 age=30 定位到主键值 id=1，再通过聚集索引 id=1 定位到行记录数据，需要两次扫描 B+ 树")]),e("li",null,[e("p",null,"使用覆盖索引："),e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DROP"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," idx_age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," idx_age_name"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"age,name"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SELECT"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," id,age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," WHERE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 30"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})]),e("p",null,"在一棵索引树上就能获取查询所需的数据，无需回表速度更快")])],-1)),s[154]||(s[154]=e("p",null,"使用覆盖索引，要注意 SELECT 列表中只取出需要的列，不可用 SELECT *，所有字段一起做索引会导致索引文件过大，查询性能下降",-1)),s[155]||(s[155]=e("hr",null,null,-1)),s[156]||(s[156]=e("h4",{id:"索引下推",tabindex:"-1"},[r("索引下推 "),e("a",{class:"header-anchor",href:"#索引下推","aria-label":'Permalink to "索引下推"'},"​")],-1)),s[157]||(s[157]=e("p",null,"索引条件下推优化（Index Condition Pushdown，ICP）是 MySQL5.6 添加，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数",-1)),s[158]||(s[158]=e("p",null,"索引下推充分利用了索引中的数据，在查询出整行数据之前过滤掉无效的数据，再去主键索引树上查找",-1)),s[159]||(s[159]=e("ul",null,[e("li",null,[e("p",null,[r("不使用索引下推优化时存储引擎通过索引检索到数据，然后回表查询记录返回给 Server 层，"),e("strong",null,"服务器判断数据是否符合条件")]),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E4%B8%8D%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,[r("使用索引下推优化时，如果"),e("strong",null,"存在某些被索引的列的判断条件"),r("时，由存储引擎在索引遍历的过程中判断数据是否符合传递的条件，将符合条件的数据进行回表，检索出来返回给服务器，由此减少 IO 次数")]),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])])],-1)),s[160]||(s[160]=e("p",null,[e("strong",null,"适用条件"),r("：")],-1)),s[161]||(s[161]=e("ul",null,[e("li",null,[r("需要存储引擎将索引中的数据与条件进行判断（所以"),e("strong",null,"条件列必须都在同一个索引中"),r("），所以优化是基于存储引擎的，只有特定引擎可以使用，适用于 InnoDB 和 MyISAM")]),e("li",null,"存储引擎没有调用跨存储引擎的能力，跨存储引擎的功能有存储过程、触发器、视图，所以调用这些功能的不可以进行索引下推优化"),e("li",null,"对于 InnoDB 引擎只适用于二级索引，InnoDB 的聚簇索引会将整行数据读到缓冲区，不再需要去回表查询了")],-1)),s[162]||(s[162]=e("p",null,"工作过程：用户表 user，(name, age) 是联合索引",-1)),s[163]||(s[163]=e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"SELECT"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," *"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," FROM"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," WHERE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," name"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," LIKE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '张%'"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," AND　age"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ="),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 10"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";\t"),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"--"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 头部模糊匹配会造成索引失效")])])]),e("button",{class:"collapse"})],-1)),s[164]||(s[164]=e("ul",null,[e("li",null,[e("p",null,"优化前：在非主键索引树上找到满足第一个条件的行，然后通过叶子节点记录的主键值再回到主键索引树上查找到对应的行数据，再对比 AND 后的条件是否符合，符合返回数据，需要 4 次回表"),e("figure",null,[e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8%E4%BC%98%E5%8C%961.png",alt:"",loading:"lazy",decoding:"async",class:"lazy"})])]),e("li",null,[e("p",null,[r("优化后：检查索引中存储的列信息是否符合索引条件，然后交由存储引擎用剩余的判断条件判断此行数据是否符合要求，"),e("strong",null,"不满足条件的不去读取表中的数据"),r("，满足下推条件的就根据主键值进行回表查询，2 次回表 "),e("img",{src:"https://seazean.oss-cn-beijing.aliyuncs.com/img/DB/MySQL-%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8%E4%BC%98%E5%8C%962.png",alt:""})])])],-1)),s[165]||(s[165]=e("p",null,"当使用 EXPLAIN 进行分析时，如果使用了索引条件下推，Extra 会显示 Using index condition",-1)),s[166]||(s[166]=e("p",null,[r("参考文章："),e("a",{href:"https://blog.csdn.net/sinat_29774479/article/details/103470244",target:"_blank",rel:"noreferrer"},"https://blog.csdn.net/sinat_29774479/article/details/103470244")],-1)),s[167]||(s[167]=e("p",null,[r("参考文章："),e("a",{href:"https://time.geekbang.org/column/article/69636",target:"_blank",rel:"noreferrer"},"https://time.geekbang.org/column/article/69636")],-1)),s[168]||(s[168]=e("hr",null,null,-1)),s[169]||(s[169]=e("h4",{id:"前缀索引",tabindex:"-1"},[r("前缀索引 "),e("a",{class:"header-anchor",href:"#前缀索引","aria-label":'Permalink to "前缀索引"'},"​")],-1)),s[170]||(s[170]=e("p",null,"当要索引的列字符很多时，索引会变大变慢，可以只索引列开始的部分字符串，节约索引空间，提高索引效率",-1)),s[171]||(s[171]=e("p",null,"注意：使用前缀索引就系统就忽略覆盖索引对查询性能的优化了",-1)),s[172]||(s[172]=e("p",null,[r("优化原则："),e("strong",null,"降低重复的索引值")],-1)),s[173]||(s[173]=e("p",null,"比如地区表：",-1)),s[174]||(s[174]=e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"area"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\t\tgdp"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\tcode")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"chinaShanghai"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t100"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\taaa")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"chinaDalian"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t200"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\tbbb")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"usaNewYork"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t300"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\tccc")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"chinaFuxin"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t\t400"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\tddd")]),r("\n"),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"chinaBeijing"),e("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\t500"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"\t\teee")])])]),e("button",{class:"collapse"})],-1)),s[175]||(s[175]=e("p",null,"发现 area 字段很多都是以 china 开头的，那么如果以前 1-5 位字符做前缀索引就会出现大量索引值重复的情况，索引值重复性越低，查询效率也就越高，所以需要建立前 6 位字符的索引：",-1)),s[176]||(s[176]=e("div",{style:{"max-height":"300px"},class:"language-bash vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"bash"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CREATE"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," INDEX"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," idx_area"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ON"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," table_name"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"area(7"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"));")])])]),e("button",{class:"collapse"})],-1)),s[177]||(s[177]=e("p",null,"场景：存储身份证",-1)),s[178]||(s[178]=e("ul",null,[e("li",null,"直接创建完整索引，这样可能比较占用空间"),e("li",null,"创建前缀索引，节省空间，但会增加查询扫描次数，并且不能使用覆盖索引"),e("li",null,"倒序存储，再创建前缀索引，用于绕过字符串本身前缀的区分度不够的问题（前 6 位相同的很多）"),e("li",null,"创建 hash 字段索引，查询性能稳定，有额外的存储和计算消耗，跟第三种方式一样，都不支持范围扫描")],-1)),s[179]||(s[179]=e("hr",null,null,-1)),s[180]||(s[180]=e("h4",{id:"索引合并",tabindex:"-1"},[r("索引合并 "),e("a",{class:"header-anchor",href:"#索引合并","aria-label":'Permalink to "索引合并"'},"​")],-1)),s[181]||(s[181]=e("p",null,"使用多个索引来完成一次查询的执行方法叫做索引合并 index merge",-1)),s[182]||(s[182]=e("ul",null,[e("li",null,[e("p",null,"Intersection 索引合并："),e("div",{style:{"max-height":"300px"},class:"language-sql vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sql"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"SELECT"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," *"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," FROM"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," table_test "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WHERE"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," key1 "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'a'"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," AND"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," key3 "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'b'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; # key1 和 key3 列都是单列索引、二级索引")])])]),e("button",{class:"collapse"})]),e("p",null,[r("从不同索引中扫描到的记录的 id 值取"),e("strong",null,"交集"),r("（相同 id），然后执行回表操作，要求从每个二级索引获取到的记录都是按照主键值排序")])]),e("li",null,[e("p",null,"Union 索引合并："),e("div",{style:{"max-height":"300px"},class:"language-sql vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sql"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"SELECT"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," *"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," FROM"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," table_test "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WHERE"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," key1 "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'a'"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," OR"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," key3 "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'b'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})]),e("p",null,[r("从不同索引中扫描到的记录的 id 值取"),e("strong",null,"并集"),r("，然后执行回表操作，要求从每个二级索引获取到的记录都是按照主键值排序")])]),e("li",null,[e("p",null,"Sort-Union 索引合并"),e("div",{style:{"max-height":"300px"},class:"language-sql vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sql"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",{"v-pre":""},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"SELECT"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," *"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," FROM"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," table_test "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"WHERE"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," key1 "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'a'"),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," OR"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," key3 "),e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'b'"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),e("button",{class:"collapse"})]),e("p",null,"先将从不同索引中扫描到的记录的主键值进行排序，再按照 Union 索引合并的方式进行查询")])],-1)),s[183]||(s[183]=e("p",null,"索引合并算法的效率并不好，通过将其中的一个索引改成联合索引会优化效率",-1)),s[184]||(s[184]=e("hr",null,null,-1))])),"main-header":t((()=>[h(l.$slots,"main-header")])),"main-header-after":t((()=>[h(l.$slots,"main-header-after")])),"main-nav":t((()=>[h(l.$slots,"main-nav")])),"main-content-before":t((()=>[h(l.$slots,"main-content-before")])),"main-content":t((()=>[h(l.$slots,"main-content")])),"main-content-after":t((()=>[h(l.$slots,"main-content-after")])),"main-nav-before":t((()=>[h(l.$slots,"main-nav-before")])),"main-nav-after":t((()=>[h(l.$slots,"main-nav-after")])),comment:t((()=>[h(l.$slots,"comment")])),footer:t((()=>[h(l.$slots,"footer")])),aside:t((()=>[h(l.$slots,"aside")])),"aside-custom":t((()=>[h(l.$slots,"aside-custom")])),default:t((()=>[h(l.$slots,"default")])),_:3},8,["frontmatter"])}}};export{g as default,u as usePageData};
