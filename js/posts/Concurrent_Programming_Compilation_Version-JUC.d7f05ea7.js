import{_ as s,u as l,p as o,c as n,w as a,a as e,o as c,b as p,d as t,e as r,r as E,f as y}from"../../assets/app-f772c525.js";const i=JSON.parse('{"title":"并发编程整理版-JUC","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-v9vv3p_1920x1080.png","title":"并发编程整理版-JUC","top":304,"author":"imklaus","tags":["ConcurrentHashMap","CopyOnWriteArrayList","SkipListMap","ConcurrentLinkedQueue"],"categories":"Java","date":"2023-08-24T19:13:57.000Z","outline":"deep"},"headers":[{"level":2,"title":"并发包","slug":"并发包","link":"#并发包","children":[{"level":3,"title":"ConHashMap","slug":"conhashmap","link":"#conhashmap","children":[]},{"level":3,"title":"CopyOnWrite","slug":"copyonwrite","link":"#copyonwrite","children":[]},{"level":3,"title":"Collections","slug":"collections","link":"#collections","children":[]},{"level":3,"title":"SkipListMap","slug":"skiplistmap","link":"#skiplistmap","children":[]},{"level":3,"title":"NoBlocking","slug":"noblocking","link":"#noblocking","children":[]}]}],"relativePath":"pages/posts/Concurrent_Programming_Compilation_Version-JUC.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-lastest\\\\imklaus-valaxy-blog\\\\pages\\\\posts\\\\Concurrent_Programming_Compilation_Version-JUC.md","lastUpdated":null}'),F=JSON.parse('{"title":"并发编程整理版-JUC","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-v9vv3p_1920x1080.png","title":"并发编程整理版-JUC","top":304,"author":"imklaus","tags":["ConcurrentHashMap","CopyOnWriteArrayList","SkipListMap","ConcurrentLinkedQueue"],"categories":"Java","date":"2023-08-24T19:13:57.000Z","outline":"deep"},"headers":[{"level":2,"title":"并发包","slug":"并发包","link":"#并发包","children":[{"level":3,"title":"ConHashMap","slug":"conhashmap","link":"#conhashmap","children":[]},{"level":3,"title":"CopyOnWrite","slug":"copyonwrite","link":"#copyonwrite","children":[]},{"level":3,"title":"Collections","slug":"collections","link":"#collections","children":[]},{"level":3,"title":"SkipListMap","slug":"skiplistmap","link":"#skiplistmap","children":[]},{"level":3,"title":"NoBlocking","slug":"noblocking","link":"#noblocking","children":[]}]}],"relativePath":"pages/posts/Concurrent_Programming_Compilation_Version-JUC.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-lastest\\\\imklaus-valaxy-blog\\\\pages\\\\posts\\\\Concurrent_Programming_Compilation_Version-JUC.md","lastUpdated":null}'),A={name:"pages/posts/Concurrent_Programming_Compilation_Version-JUC.md",data:()=>({data:F,frontmatter:F.frontmatter,$frontmatter:F.frontmatter}),setup(){const s=l();s.meta.frontmatter=Object.assign(s.meta.frontmatter,F.frontmatter),o("pageData",F)}},D={id:"并发编程整理版",tabindex:"-1"},u=p("p",null,"笔记的整体结构依据视频编写，并随着学习的深入补充了很多知识",-1),d={id:"并发包",tabindex:"-1"},h={id:"conhashmap",tabindex:"-1"},C={id:"并发集合",tabindex:"-1"},b={id:"集合对比",tabindex:"-1"},f=p("p",null,"三种集合：",-1),g=p("ul",null,[p("li",null,"HashMap 是线程不安全的，性能好"),p("li",null,"Hashtable 线程安全基于 synchronized，综合性能差，已经被淘汰"),p("li",null,"ConcurrentHashMap 保证了线程安全，综合性能较好，不止线程安全，而且效率高，性能好")],-1),v=p("p",null,"集合对比：",-1),k=p("ol",null,[p("li",null,"Hashtable 继承 Dictionary 类，HashMap、ConcurrentHashMap 继承 AbstractMap，均实现 Map 接口"),p("li",null,"Hashtable 底层是数组 + 链表，JDK8 以后 HashMap 和 ConcurrentHashMap 底层是数组 + 链表 + 红黑树"),p("li",null,"HashMap 线程非安全，Hashtable 线程安全，Hashtable 的方法都加了 synchronized 关来确保线程同步"),p("li",null,[t("ConcurrentHashMap、Hashtable "),p("strong",null,"不允许 null 值"),t("，HashMap 允许 null 值")]),p("li",null,"ConcurrentHashMap、HashMap 的初始容量为 16，Hashtable 初始容量为11，填充因子默认都是 0.75，两种 Map 扩容是当前容量翻倍：capacity * 2，Hashtable 扩容时是容量翻倍 + 1：capacity*2 + 1")],-1),B=p("figure",null,[p("img",{alt:"image-20230824175111596",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175111596.png"})],-1),x=p("p",null,"工作步骤：",-1),m=p("ol",null,[p("li",null,[p("p",null,"初始化，使用 cas 来保证并发安全，懒惰初始化 table")]),p("li",null,[p("p",null,[t("树化，当 table.length < 64 时，先尝试扩容，超过 64 时，并且 bin.length > 8 时，会将"),p("strong",null,"链表树化"),t("，树化过程会用 synchronized 锁住链表头")]),p("p",null,[t("说明：锁住某个槽位的对象头，是一种很好的"),p("strong",null,"细粒度的加锁"),t("方式，类似 MySQL 中的行锁")])]),p("li",null,[p("p",null,"put，如果该 bin 尚未创建，只需要使用 cas 创建 bin；如果已经有了，锁住链表头进行后续 put 操作，元素添加至 bin 的尾部")]),p("li",null,[p("p",null,"get，无锁操作仅需要保证可见性，扩容过程中 get 操作拿到的是 ForwardingNode 会让 get 操作在新 table 进行搜索")]),p("li",null,[p("p",null,"扩容，扩容时以 bin 为单位进行，需要对 bin 进行 synchronized，但这时其它竞争线程也不是无事可做，它们会帮助把其它 bin 进行扩容")]),p("li",null,[p("p",null,"size，元素个数保存在 baseCount 中，并发时的个数变动保存在 CounterCell[] 当中，最后统计数量时累加")])],-1),V=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"//需求：多个线程同时往HashMap容器中存入数据会出现安全问题")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMapDemo"),p("span",{style:{color:"#E1E4E8"}},"{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," Map<"),p("span",{style:{color:"#F97583"}},"String"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"String"),p("span",{style:{color:"#E1E4E8"}},"> map "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMap"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"main"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"String"),p("span",{style:{color:"#E1E4E8"}},"[] "),p("span",{style:{color:"#FFAB70"}},"args"),p("span",{style:{color:"#E1E4E8"}},"){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"AddMapDataThread"),p("span",{style:{color:"#E1E4E8"}},"()."),p("span",{style:{color:"#B392F0"}},"start"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"AddMapDataThread"),p("span",{style:{color:"#E1E4E8"}},"()."),p("span",{style:{color:"#B392F0"}},"start"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Thread."),p("span",{style:{color:"#B392F0"}},"sleep"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"1000"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"*"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"5"),p("span",{style:{color:"#E1E4E8"}},");"),p("span",{style:{color:"#6A737D"}},"//休息5秒，确保两个线程执行完毕")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        System.out."),p("span",{style:{color:"#B392F0"}},"println"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#9ECBFF"}},'"Map大小："'),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," map."),p("span",{style:{color:"#B392F0"}},"size"),p("span",{style:{color:"#E1E4E8"}},"());"),p("span",{style:{color:"#6A737D"}},"//20万")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"AddMapDataThread"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Thread"),p("span",{style:{color:"#E1E4E8"}},"{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    @"),p("span",{style:{color:"#F97583"}},"Override")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"run"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," ; i "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1000000"),p("span",{style:{color:"#E1E4E8"}}," ; i"),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}}," ){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            ConcurrentHashMapDemo.map."),p("span",{style:{color:"#B392F0"}},"put"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#9ECBFF"}},'"键："'),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}},"i , "),p("span",{style:{color:"#9ECBFF"}},'"值"'),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}},"i);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"//需求：多个线程同时往HashMap容器中存入数据会出现安全问题")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMapDemo"),p("span",{style:{color:"#24292E"}},"{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," Map<"),p("span",{style:{color:"#D73A49"}},"String"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"String"),p("span",{style:{color:"#24292E"}},"> map "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMap"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"main"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"String"),p("span",{style:{color:"#24292E"}},"[] "),p("span",{style:{color:"#E36209"}},"args"),p("span",{style:{color:"#24292E"}},"){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"AddMapDataThread"),p("span",{style:{color:"#24292E"}},"()."),p("span",{style:{color:"#6F42C1"}},"start"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"AddMapDataThread"),p("span",{style:{color:"#24292E"}},"()."),p("span",{style:{color:"#6F42C1"}},"start"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Thread."),p("span",{style:{color:"#6F42C1"}},"sleep"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"1000"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"*"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"5"),p("span",{style:{color:"#24292E"}},");"),p("span",{style:{color:"#6A737D"}},"//休息5秒，确保两个线程执行完毕")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        System.out."),p("span",{style:{color:"#6F42C1"}},"println"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#032F62"}},'"Map大小："'),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," map."),p("span",{style:{color:"#6F42C1"}},"size"),p("span",{style:{color:"#24292E"}},"());"),p("span",{style:{color:"#6A737D"}},"//20万")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"AddMapDataThread"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Thread"),p("span",{style:{color:"#24292E"}},"{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    @"),p("span",{style:{color:"#D73A49"}},"Override")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"run"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," ; i "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1000000"),p("span",{style:{color:"#24292E"}}," ; i"),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}}," ){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            ConcurrentHashMapDemo.map."),p("span",{style:{color:"#6F42C1"}},"put"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#032F62"}},'"键："'),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}},"i , "),p("span",{style:{color:"#032F62"}},'"值"'),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}},"i);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),T=p("hr",null,null,-1),N={id:"并发死链",tabindex:"-1"},K=p("p",null,"JDK1.7 的 HashMap 采用的头插法（拉链法）进行节点的添加，HashMap 的扩容长度为原来的 2 倍",-1),I=p("p",null,"resize() 中节点（Entry）转移的源代码：",-1),S=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"transfer"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"Entry"),p("span",{style:{color:"#E1E4E8"}},"[] newTable, "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," rehash) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," newCapacity "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," newTable.length;"),p("span",{style:{color:"#6A737D"}},"//得到新数组的长度   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 遍历整个数组对应下标下的链表，e代表一个节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Entry<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," table) {   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 当e == null时，则该链表遍历完了，继续遍历下一数组下标的链表 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," e) { ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 先把e节点的下一节点存起来")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Entry<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (rehash) {              "),p("span",{style:{color:"#6A737D"}},"//得到新的hash值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                e.hash "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," e.key "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"hash"),p("span",{style:{color:"#E1E4E8"}},"(e.key);  ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 在新数组下得到新的数组下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"indexFor"),p("span",{style:{color:"#E1E4E8"}},"(e.hash, newCapacity);  ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"             "),p("span",{style:{color:"#6A737D"}},"// 将e的next指针指向新数组下标的位置")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            e.next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," newTable[i];   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 将该数组下标的节点变为e节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            newTable[i] "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 遍历链表的下一节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," next;                                   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"transfer"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"Entry"),p("span",{style:{color:"#24292E"}},"[] newTable, "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," rehash) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," newCapacity "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," newTable.length;"),p("span",{style:{color:"#6A737D"}},"//得到新数组的长度   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 遍历整个数组对应下标下的链表，e代表一个节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Entry<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," table) {   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 当e == null时，则该链表遍历完了，继续遍历下一数组下标的链表 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," e) { ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 先把e节点的下一节点存起来")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Entry<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (rehash) {              "),p("span",{style:{color:"#6A737D"}},"//得到新的hash值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                e.hash "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," e.key "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"hash"),p("span",{style:{color:"#24292E"}},"(e.key);  ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 在新数组下得到新的数组下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"indexFor"),p("span",{style:{color:"#24292E"}},"(e.hash, newCapacity);  ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"             "),p("span",{style:{color:"#6A737D"}},"// 将e的next指针指向新数组下标的位置")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            e.next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," newTable[i];   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 将该数组下标的节点变为e节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            newTable[i] "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 遍历链表的下一节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," next;                                   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),w=p("p",null,"JDK 8 虽然将扩容算法做了调整，改用了尾插法，但仍不意味着能够在多线程环境下能够安全扩容，还会出现其它问题（如扩容丢数据）",-1),j=p("hr",null,null,-1),M={id:"成员属性",tabindex:"-1"},_={id:"变量",tabindex:"-1"},H=p("ul",null,[p("li",null,[p("p",null,"存储数组："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] table;")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] table;")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"散列表的长度："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"30"),p("span",{style:{color:"#E1E4E8"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 最大长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," DEFAULT_CAPACITY "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"16"),p("span",{style:{color:"#E1E4E8"}},";\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 默认长度")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"30"),p("span",{style:{color:"#24292E"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 最大长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," DEFAULT_CAPACITY "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"16"),p("span",{style:{color:"#24292E"}},";\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 默认长度")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"并发级别，JDK7 遗留下来，1.8 中不代表并发级别："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," DEFAULT_CONCURRENCY_LEVEL "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"16"),p("span",{style:{color:"#E1E4E8"}},";")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," DEFAULT_CONCURRENCY_LEVEL "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"16"),p("span",{style:{color:"#24292E"}},";")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"负载因子，JDK1.8 的 ConcurrentHashMap 中是固定值："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"float"),p("span",{style:{color:"#E1E4E8"}}," LOAD_FACTOR "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0.75f"),p("span",{style:{color:"#E1E4E8"}},";")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"float"),p("span",{style:{color:"#24292E"}}," LOAD_FACTOR "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0.75f"),p("span",{style:{color:"#24292E"}},";")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"阈值："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," TREEIFY_THRESHOLD "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"8"),p("span",{style:{color:"#E1E4E8"}},";\t\t"),p("span",{style:{color:"#6A737D"}},"// 链表树化的阈值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," UNTREEIFY_THRESHOLD "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"6"),p("span",{style:{color:"#E1E4E8"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 红黑树转化为链表的阈值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," MIN_TREEIFY_CAPACITY "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"64"),p("span",{style:{color:"#E1E4E8"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 当数组长度达到64且某个桶位中的链表长度超过8，才会真正树化")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," TREEIFY_THRESHOLD "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"8"),p("span",{style:{color:"#24292E"}},";\t\t"),p("span",{style:{color:"#6A737D"}},"// 链表树化的阈值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," UNTREEIFY_THRESHOLD "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"6"),p("span",{style:{color:"#24292E"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 红黑树转化为链表的阈值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," MIN_TREEIFY_CAPACITY "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"64"),p("span",{style:{color:"#24292E"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 当数组长度达到64且某个桶位中的链表长度超过8，才会真正树化")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"扩容相关："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," MIN_TRANSFER_STRIDE "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"16"),p("span",{style:{color:"#E1E4E8"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 线程迁移数据【最小步长】，控制线程迁移任务的最小区间")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_BITS "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"16"),p("span",{style:{color:"#E1E4E8"}},";\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 用来计算扩容时生成的【标识戳】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," MAX_RESIZERS "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#79B8FF"}},"32"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_BITS)) "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";"),p("span",{style:{color:"#6A737D"}},"// 65535-1并发扩容最多线程数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_SHIFT "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"32"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_BITS;\t\t"),p("span",{style:{color:"#6A737D"}},"// 扩容时使用")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," MIN_TRANSFER_STRIDE "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"16"),p("span",{style:{color:"#24292E"}},";\t"),p("span",{style:{color:"#6A737D"}},"// 线程迁移数据【最小步长】，控制线程迁移任务的最小区间")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_BITS "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"16"),p("span",{style:{color:"#24292E"}},";\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 用来计算扩容时生成的【标识戳】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," MAX_RESIZERS "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#005CC5"}},"32"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_BITS)) "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";"),p("span",{style:{color:"#6A737D"}},"// 65535-1并发扩容最多线程数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_SHIFT "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"32"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_BITS;\t\t"),p("span",{style:{color:"#6A737D"}},"// 扩容时使用")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"节点哈希值："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," MOVED     "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"; \t\t\t"),p("span",{style:{color:"#6A737D"}},"// 表示当前节点是 FWD 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," TREEBIN   "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},"; \t\t\t"),p("span",{style:{color:"#6A737D"}},"// 表示当前节点已经树化，且当前节点为 TreeBin 对象")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," RESERVED  "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"3"),p("span",{style:{color:"#E1E4E8"}},"; \t\t\t"),p("span",{style:{color:"#6A737D"}},"// 表示节点时临时节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," HASH_BITS "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0x7fffffff"),p("span",{style:{color:"#E1E4E8"}},"; \t"),p("span",{style:{color:"#6A737D"}},"// 正常节点的哈希值的可用的位数")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," MOVED     "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"; \t\t\t"),p("span",{style:{color:"#6A737D"}},"// 表示当前节点是 FWD 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," TREEBIN   "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},"; \t\t\t"),p("span",{style:{color:"#6A737D"}},"// 表示当前节点已经树化，且当前节点为 TreeBin 对象")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," RESERVED  "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"3"),p("span",{style:{color:"#24292E"}},"; \t\t\t"),p("span",{style:{color:"#6A737D"}},"// 表示节点时临时节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," HASH_BITS "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0x7fffffff"),p("span",{style:{color:"#24292E"}},"; \t"),p("span",{style:{color:"#6A737D"}},"// 正常节点的哈希值的可用的位数")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"扩容过程：volatile 修饰保证多线程的可见性"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 扩容过程中，会将扩容中的新 table 赋值给 nextTable 保持引用，扩容结束之后，这里会被设置为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] nextTable;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 记录扩容进度，所有线程都要从 0 - transferIndex 中分配区间任务，简单说就是老表转移到哪了，索引从高到低转移")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," transferIndex;")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 扩容过程中，会将扩容中的新 table 赋值给 nextTable 保持引用，扩容结束之后，这里会被设置为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] nextTable;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 记录扩容进度，所有线程都要从 0 - transferIndex 中分配区间任务，简单说就是老表转移到哪了，索引从高到低转移")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," transferIndex;")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"累加统计："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// LongAdder 中的 baseCount 未发生竞争时或者当前LongAdder处于加锁状态时，增量累到到 baseCount 中")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," baseCount;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// LongAdder 中的 cellsBuzy，0 表示当前 LongAdder 对象无锁状态，1 表示当前 LongAdder 对象加锁状态")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," cellsBusy;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// LongAdder 中的 cells 数组，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"CounterCell"),p("span",{style:{color:"#E1E4E8"}},"[] counterCells;")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// LongAdder 中的 baseCount 未发生竞争时或者当前LongAdder处于加锁状态时，增量累到到 baseCount 中")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," baseCount;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// LongAdder 中的 cellsBuzy，0 表示当前 LongAdder 对象无锁状态，1 表示当前 LongAdder 对象加锁状态")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," cellsBusy;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// LongAdder 中的 cells 数组，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"CounterCell"),p("span",{style:{color:"#24292E"}},"[] counterCells;")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"控制变量："),p("p",null,[p("strong",null,"sizeCtl"),t(" < 0：")]),p("ul",null,[p("li",null,[p("p",null,"-1 表示当前 table 正在初始化（有线程在创建 table 数组），当前线程需要自旋等待")]),p("li",null,[p("p",null,"其他负数表示当前 map 的 table 数组正在进行扩容，高 16 位表示扩容的标识戳；低 16 位表示 (1 + nThread) 当前参与并发扩容的线程数量 + 1")])]),p("p",null,"sizeCtl = 0，表示创建 table 数组时使用 DEFAULT_CAPACITY 为数组大小"),p("p",null,"sizeCtl > 0："),p("ul",null,[p("li",null,"如果 table 未初始化，表示初始化大小"),p("li",null,"如果 table 已经初始化，表示下次扩容时的触发条件（阈值，元素个数，不是数组的长度）")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," sizeCtl;\t\t"),p("span",{style:{color:"#6A737D"}},"// volatile 保持可见性")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," sizeCtl;\t\t"),p("span",{style:{color:"#6A737D"}},"// volatile 保持可见性")])])]),p("button",{class:"collapse"})])])],-1),L=p("hr",null,null,-1),z={id:"内部类",tabindex:"-1"},R=p("ul",null,[p("li",null,[p("p",null,"Node 节点："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Node"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#F97583"}},"implements"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Entry"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 节点哈希值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," hash;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," K key;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," V val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 单向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Node"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#D73A49"}},"implements"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Entry"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 节点哈希值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," hash;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," K key;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," V val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 单向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"TreeBin 节点："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"TreeBin"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Node"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 红黑树根节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> root;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 链表的头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> first;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 等待者线程")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Thread waiter;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," lockState;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 写锁状态 写锁是独占状态，以散列表来看，真正进入到 TreeBin 中的写线程同一时刻只有一个线程")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," WRITER "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 等待者状态（写线程在等待），当 TreeBin 中有读线程目前正在读取数据时，写线程无法修改数据")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," WAITER "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 读锁状态是共享，同一时刻可以有多个线程 同时进入到 TreeBi 对象中获取数据，每一个线程都给 lockState + 4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," READER "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"4"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," }")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"TreeBin"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Node"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 红黑树根节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> root;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 链表的头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> first;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 等待者线程")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Thread waiter;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," lockState;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 写锁状态 写锁是独占状态，以散列表来看，真正进入到 TreeBin 中的写线程同一时刻只有一个线程")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," WRITER "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 等待者状态（写线程在等待），当 TreeBin 中有读线程目前正在读取数据时，写线程无法修改数据")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," WAITER "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 读锁状态是共享，同一时刻可以有多个线程 同时进入到 TreeBi 对象中获取数据，每一个线程都给 lockState + 4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," READER "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"4"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," }")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"TreeNode 节点："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"TreeNode"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Node"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> parent;  "),p("span",{style:{color:"#6A737D"}},"// red-black tree links")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> left;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> prev;   "),p("span",{style:{color:"#6A737D"}},"//双向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," red;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"TreeNode"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Node"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> parent;  "),p("span",{style:{color:"#6A737D"}},"// red-black tree links")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> left;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> prev;   "),p("span",{style:{color:"#6A737D"}},"//双向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," red;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"ForwardingNode 节点：转移节点"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ForwardingNode"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Node"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 持有扩容后新的哈希表的引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] nextTable;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#B392F0"}},"ForwardingNode"),p("span",{style:{color:"#E1E4E8"}},"(Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] "),p("span",{style:{color:"#FFAB70"}},"tab"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"         "),p("span",{style:{color:"#6A737D"}},"// ForwardingNode 节点的 hash 值设为 -1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"         "),p("span",{style:{color:"#79B8FF"}},"super"),p("span",{style:{color:"#E1E4E8"}},"(MOVED, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"         "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".nextTable "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," }")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ForwardingNode"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Node"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 持有扩容后新的哈希表的引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] nextTable;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6F42C1"}},"ForwardingNode"),p("span",{style:{color:"#24292E"}},"(Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] "),p("span",{style:{color:"#E36209"}},"tab"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"         "),p("span",{style:{color:"#6A737D"}},"// ForwardingNode 节点的 hash 值设为 -1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"         "),p("span",{style:{color:"#005CC5"}},"super"),p("span",{style:{color:"#24292E"}},"(MOVED, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"         "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".nextTable "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," }")])])]),p("button",{class:"collapse"})])])],-1),P=p("hr",null,null,-1),O={id:"代码块",tabindex:"-1"},U=p("ul",null,[p("li",null,[p("p",null,"变量："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示sizeCtl属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," SIZECTL;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示transferIndex属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," TRANSFERINDEX;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示baseCount属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," BASECOUNT;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示cellsBusy属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," CELLSBUSY;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示cellValue属性在 CounterCell 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," CELLVALUE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示数组第一个元素的偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," ABASE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 用位移运算替代乘法")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," ASHIFT;")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示sizeCtl属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," SIZECTL;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示transferIndex属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," TRANSFERINDEX;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示baseCount属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," BASECOUNT;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示cellsBusy属性在 ConcurrentHashMap 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," CELLSBUSY;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示cellValue属性在 CounterCell 中内存偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," CELLVALUE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示数组第一个元素的偏移地址")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," ABASE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 用位移运算替代乘法")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," ASHIFT;")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"赋值方法："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示数组单元所占用空间大小，scale 表示 Node[] 数组中每一个单元所占用空间大小，int 是 4 字节")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," scale "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," U."),p("span",{style:{color:"#B392F0"}},"arrayIndexScale"),p("span",{style:{color:"#E1E4E8"}},"(ak);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 判断一个数是不是 2 的 n 次幂，比如 8：1000 & 0111 = 0000")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((scale "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," (scale "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Error"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#9ECBFF"}},'"data type scale not a power of two"'),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// numberOfLeadingZeros(n)：返回当前数值转换为二进制后，从高位到低位开始统计，看有多少个0连续在一起")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 8 → 1000 numberOfLeadingZeros(8) = 28")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 4 → 100 numberOfLeadingZeros(4) = 29   int 值就是占4个字节")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"ASHIFT "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"31"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," Integer."),p("span",{style:{color:"#B392F0"}},"numberOfLeadingZeros"),p("span",{style:{color:"#E1E4E8"}},"(scale);")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// ASHIFT = 31 - 29 = 2 ，int 的大小就是 2 的 2 次方，获取次方数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// ABASE + （5 << ASHIFT） 用位移运算替代了乘法，获取 arr[5] 的值")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 表示数组单元所占用空间大小，scale 表示 Node[] 数组中每一个单元所占用空间大小，int 是 4 字节")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," scale "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," U."),p("span",{style:{color:"#6F42C1"}},"arrayIndexScale"),p("span",{style:{color:"#24292E"}},"(ak);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 判断一个数是不是 2 的 n 次幂，比如 8：1000 & 0111 = 0000")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((scale "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," (scale "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Error"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#032F62"}},'"data type scale not a power of two"'),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// numberOfLeadingZeros(n)：返回当前数值转换为二进制后，从高位到低位开始统计，看有多少个0连续在一起")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 8 → 1000 numberOfLeadingZeros(8) = 28")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 4 → 100 numberOfLeadingZeros(4) = 29   int 值就是占4个字节")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"ASHIFT "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"31"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," Integer."),p("span",{style:{color:"#6F42C1"}},"numberOfLeadingZeros"),p("span",{style:{color:"#24292E"}},"(scale);")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// ASHIFT = 31 - 29 = 2 ，int 的大小就是 2 的 2 次方，获取次方数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// ABASE + （5 << ASHIFT） 用位移运算替代了乘法，获取 arr[5] 的值")])])]),p("button",{class:"collapse"})])])],-1),q=p("hr",null,null,-1),Z={id:"构造方法",tabindex:"-1"},Y=p("ul",null,[p("li",null,[p("p",null,"无参构造， 散列表结构延迟初始化，默认的数组大小是 16："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMap"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMap"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"有参构造："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMap"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," initialCapacity) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 指定容量初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (initialCapacity "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"IllegalArgumentException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," cap "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ((initialCapacity "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," (MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) "),p("span",{style:{color:"#F97583"}},"?")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"               MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"               "),p("span",{style:{color:"#6A737D"}},"// 假如传入的参数是 16，16 + 8 + 1 ，最后得到 32")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"               "),p("span",{style:{color:"#6A737D"}},"// 传入 12， 12 + 6 + 1 = 19，最后得到 32，尽可能的大，与 HashMap不一样")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"               "),p("span",{style:{color:"#B392F0"}},"tableSizeFor"),p("span",{style:{color:"#E1E4E8"}},"(initialCapacity "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," (initialCapacity "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// sizeCtl > 0，当目前 table 未初始化时，sizeCtl 表示初始化容量")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," cap;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMap"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," initialCapacity) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 指定容量初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (initialCapacity "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"IllegalArgumentException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," cap "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ((initialCapacity "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," (MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) "),p("span",{style:{color:"#D73A49"}},"?")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"               MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"               "),p("span",{style:{color:"#6A737D"}},"// 假如传入的参数是 16，16 + 8 + 1 ，最后得到 32")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"               "),p("span",{style:{color:"#6A737D"}},"// 传入 12， 12 + 6 + 1 = 19，最后得到 32，尽可能的大，与 HashMap不一样")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"               "),p("span",{style:{color:"#6F42C1"}},"tableSizeFor"),p("span",{style:{color:"#24292E"}},"(initialCapacity "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," (initialCapacity "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// sizeCtl > 0，当目前 table 未初始化时，sizeCtl 表示初始化容量")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," cap;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tableSizeFor"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," c "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    n "),p("span",{style:{color:"#F97583"}},"|="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    n "),p("span",{style:{color:"#F97583"}},"|="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    n "),p("span",{style:{color:"#F97583"}},"|="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"4"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    n "),p("span",{style:{color:"#F97583"}},"|="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"8"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    n "),p("span",{style:{color:"#F97583"}},"|="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"16"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," MAXIMUM_CAPACITY) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tableSizeFor"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," c "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    n "),p("span",{style:{color:"#D73A49"}},"|="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    n "),p("span",{style:{color:"#D73A49"}},"|="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    n "),p("span",{style:{color:"#D73A49"}},"|="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"4"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    n "),p("span",{style:{color:"#D73A49"}},"|="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"8"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    n "),p("span",{style:{color:"#D73A49"}},"|="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"16"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," MAXIMUM_CAPACITY) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("p",null,[t("HashMap 部分详解了该函数，核心思想就是"),p("strong",null,"把最高位是 1 的位以及右边的位全部置 1"),t("，结果加 1 后就是 2 的 n 次幂")])]),p("li",null,[p("p",null,"多个参数构造方法："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMap"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," initialCapacity, "),p("span",{style:{color:"#F97583"}},"float"),p("span",{style:{color:"#E1E4E8"}}," loadFactor, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," concurrencyLevel) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"(loadFactor "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0.0f"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," initialCapacity "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," concurrencyLevel "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"IllegalArgumentException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 初始容量小于并发级别")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (initialCapacity "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," concurrencyLevel)  ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 把并发级别赋值给初始容量")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        initialCapacity "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," concurrencyLevel; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t"),p("span",{style:{color:"#6A737D"}},"// loadFactor 默认是 0.75")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," size "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")("),p("span",{style:{color:"#79B8FF"}},"1.0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")initialCapacity "),p("span",{style:{color:"#F97583"}},"/"),p("span",{style:{color:"#E1E4E8"}}," loadFactor);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," cap "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (size "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")MAXIMUM_CAPACITY) "),p("span",{style:{color:"#F97583"}},"?")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tableSizeFor"),p("span",{style:{color:"#E1E4E8"}},"(("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}},")size);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// sizeCtl > 0，当目前 table 未初始化时，sizeCtl 表示初始化容量")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," cap;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMap"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," initialCapacity, "),p("span",{style:{color:"#D73A49"}},"float"),p("span",{style:{color:"#24292E"}}," loadFactor, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," concurrencyLevel) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"(loadFactor "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0.0f"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," initialCapacity "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," concurrencyLevel "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"IllegalArgumentException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 初始容量小于并发级别")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (initialCapacity "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," concurrencyLevel)  ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 把并发级别赋值给初始容量")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        initialCapacity "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," concurrencyLevel; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t"),p("span",{style:{color:"#6A737D"}},"// loadFactor 默认是 0.75")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," size "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")("),p("span",{style:{color:"#005CC5"}},"1.0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")initialCapacity "),p("span",{style:{color:"#D73A49"}},"/"),p("span",{style:{color:"#24292E"}}," loadFactor);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," cap "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (size "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")MAXIMUM_CAPACITY) "),p("span",{style:{color:"#D73A49"}},"?")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tableSizeFor"),p("span",{style:{color:"#24292E"}},"(("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}},")size);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// sizeCtl > 0，当目前 table 未初始化时，sizeCtl 表示初始化容量")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," cap;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"集合构造方法："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMap"),p("span",{style:{color:"#E1E4E8"}},"(Map"),p("span",{style:{color:"#F97583"}},"<?"),p("span",{style:{color:"#E1E4E8"}}," extends K, "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," extends V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," m) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," DEFAULT_CAPACITY;\t"),p("span",{style:{color:"#6A737D"}},"// 默认16")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"putAll"),p("span",{style:{color:"#E1E4E8"}},"(m);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"putAll"),p("span",{style:{color:"#E1E4E8"}},"(Map"),p("span",{style:{color:"#F97583"}},"<?"),p("span",{style:{color:"#E1E4E8"}}," extends K, "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," extends V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," m) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 尝试触发扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"tryPresize"),p("span",{style:{color:"#E1E4E8"}},"(m."),p("span",{style:{color:"#B392F0"}},"size"),p("span",{style:{color:"#E1E4E8"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Entry<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," m."),p("span",{style:{color:"#B392F0"}},"entrySet"),p("span",{style:{color:"#E1E4E8"}},"())")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#B392F0"}},"putVal"),p("span",{style:{color:"#E1E4E8"}},"(e."),p("span",{style:{color:"#B392F0"}},"getKey"),p("span",{style:{color:"#E1E4E8"}},"(), e."),p("span",{style:{color:"#B392F0"}},"getValue"),p("span",{style:{color:"#E1E4E8"}},"(), "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMap"),p("span",{style:{color:"#24292E"}},"(Map"),p("span",{style:{color:"#D73A49"}},"<?"),p("span",{style:{color:"#24292E"}}," extends K, "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," extends V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," m) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," DEFAULT_CAPACITY;\t"),p("span",{style:{color:"#6A737D"}},"// 默认16")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"putAll"),p("span",{style:{color:"#24292E"}},"(m);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"putAll"),p("span",{style:{color:"#24292E"}},"(Map"),p("span",{style:{color:"#D73A49"}},"<?"),p("span",{style:{color:"#24292E"}}," extends K, "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," extends V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," m) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 尝试触发扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"tryPresize"),p("span",{style:{color:"#24292E"}},"(m."),p("span",{style:{color:"#6F42C1"}},"size"),p("span",{style:{color:"#24292E"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Entry<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," m."),p("span",{style:{color:"#6F42C1"}},"entrySet"),p("span",{style:{color:"#24292E"}},"())")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6F42C1"}},"putVal"),p("span",{style:{color:"#24292E"}},"(e."),p("span",{style:{color:"#6F42C1"}},"getKey"),p("span",{style:{color:"#24292E"}},"(), e."),p("span",{style:{color:"#6F42C1"}},"getValue"),p("span",{style:{color:"#24292E"}},"(), "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tryPresize"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," size) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 扩容为大于 2 倍的最小的 2 的 n 次幂")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," c "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (size "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," (MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," MAXIMUM_CAPACITY "),p("span",{style:{color:"#F97583"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    \t"),p("span",{style:{color:"#B392F0"}},"tableSizeFor"),p("span",{style:{color:"#E1E4E8"}},"(size "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," (size "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," ((sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sizeCtl) "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 数组还未初始化，【一般是调用集合构造方法才会成立，put 后调用该方法都是不成立的】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (sc "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," c) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," sc "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", SIZECTL, sc, "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"try"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (table "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," tab) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] nt "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[])"),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},">[n];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        table "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nt;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},");"),p("span",{style:{color:"#6A737D"}},"// 扩容阈值：n - 1/4 n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                } "),p("span",{style:{color:"#F97583"}},"finally"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sc;\t"),p("span",{style:{color:"#6A737D"}},"// 扩容阈值赋值给sizeCtl")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 未达到扩容阈值或者数组长度已经大于最大长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (c "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," sc "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," MAXIMUM_CAPACITY)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 与 addCount 逻辑相同")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," table) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"           ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tryPresize"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," size) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 扩容为大于 2 倍的最小的 2 的 n 次幂")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," c "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (size "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," (MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," MAXIMUM_CAPACITY "),p("span",{style:{color:"#D73A49"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    \t"),p("span",{style:{color:"#6F42C1"}},"tableSizeFor"),p("span",{style:{color:"#24292E"}},"(size "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," (size "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," ((sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sizeCtl) "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 数组还未初始化，【一般是调用集合构造方法才会成立，put 后调用该方法都是不成立的】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (sc "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," c) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," sc "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", SIZECTL, sc, "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"try"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (table "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," tab) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] nt "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[])"),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},">[n];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        table "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nt;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},");"),p("span",{style:{color:"#6A737D"}},"// 扩容阈值：n - 1/4 n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                } "),p("span",{style:{color:"#D73A49"}},"finally"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sc;\t"),p("span",{style:{color:"#6A737D"}},"// 扩容阈值赋值给sizeCtl")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 未达到扩容阈值或者数组长度已经大于最大长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (c "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," sc "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," MAXIMUM_CAPACITY)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 与 addCount 逻辑相同")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," table) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"           ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),X=p("hr",null,null,-1),W={id:"成员方法",tabindex:"-1"},J={id:"数据访存",tabindex:"-1"},$=p("ul",null,[p("li",null,[p("p",null,[t("tabAt()：获取数组某个槽位的"),p("strong",null,"头节点"),t("，类似于数组中的直接寻址 arr[i]")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// i 是数组索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// (i << ASHIFT) + ABASE == ABASE + i * 4 （一个 int 占 4 个字节），这就相当于寻址，替代了乘法")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," (Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")U."),p("span",{style:{color:"#B392F0"}},"getObjectVolatile"),p("span",{style:{color:"#E1E4E8"}},"(tab, (("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")i "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," ASHIFT) "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," ABASE);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// i 是数组索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// (i << ASHIFT) + ABASE == ABASE + i * 4 （一个 int 占 4 个字节），这就相当于寻址，替代了乘法")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," (Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")U."),p("span",{style:{color:"#6F42C1"}},"getObjectVolatile"),p("span",{style:{color:"#24292E"}},"(tab, (("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")i "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," ASHIFT) "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," ABASE);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"casTabAt()：指定数组索引位置修改原值为指定的值"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"casTabAt"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," c, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," v) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),p("span",{style:{color:"#E1E4E8"}},"(tab, (("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")i "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," ASHIFT) "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," ABASE, c, v);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"casTabAt"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," c, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," v) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),p("span",{style:{color:"#24292E"}},"(tab, (("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")i "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," ASHIFT) "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," ABASE, c, v);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"setTabAt()：指定数组索引位置设置值"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," v) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    U."),p("span",{style:{color:"#B392F0"}},"putObjectVolatile"),p("span",{style:{color:"#E1E4E8"}},"(tab, (("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")i "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," ASHIFT) "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," ABASE, v);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," v) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    U."),p("span",{style:{color:"#6F42C1"}},"putObjectVolatile"),p("span",{style:{color:"#24292E"}},"(tab, (("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")i "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," ASHIFT) "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," ABASE, v);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),G=p("hr",null,null,-1),Q={id:"添加方法",tabindex:"-1"},ss=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"put"),p("span",{style:{color:"#E1E4E8"}},"(K key, V value) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 第三个参数 onlyIfAbsent 为 false 表示哈希表中存在相同的 key 时【用当前数据覆盖旧数据】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"putVal"),p("span",{style:{color:"#E1E4E8"}},"(key, value, "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"put"),p("span",{style:{color:"#24292E"}},"(K key, V value) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 第三个参数 onlyIfAbsent 为 false 表示哈希表中存在相同的 key 时【用当前数据覆盖旧数据】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"putVal"),p("span",{style:{color:"#24292E"}},"(key, value, "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),ls=p("ul",null,[p("li",null,[p("p",null,"putVal()"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"putVal"),p("span",{style:{color:"#E1E4E8"}},"(K key, V value, "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," onlyIfAbsent) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 【ConcurrentHashMap 不能存放 null 值】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (key "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NullPointerException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 扰动运算，高低位都参与寻址运算")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," hash "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"spread"),p("span",{style:{color:"#E1E4E8"}},"(key."),p("span",{style:{color:"#B392F0"}},"hashCode"),p("span",{style:{color:"#E1E4E8"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 表示当前 k-v 封装成 node 后插入到指定桶位后，在桶位中的所属链表的下标位置")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," binCount "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// tab 引用当前 map 的数组 table，开始自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// f 表示桶位的头节点，n 表示哈希表数组的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// i 表示 key 通过寻址计算后得到的桶位下标，fh 表示桶位头结点的 hash 值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> f; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n, i, fh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE1】：表示当前 map 中的 table 尚未初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//【延迟初始化】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"initTable"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE2】：i 表示 key 使用【寻址算法】得到 key 对应数组的下标位置，tabAt 获取指定桶位的头结点f")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((f "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," hash)) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 对应的数组为 null 说明没有哈希冲突，直接新建节点添加到表中")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"casTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(hash, key, value, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE3】：逻辑说明数组已经被初始化，并且当前 key 对应的位置不为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立表示当前桶位的头结点为 FWD 结点，表示目前 map 正处于扩容过程中")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((fh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f.hash) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," MOVED)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当前线程【需要去帮助哈希表完成扩容】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"helpTransfer"),p("span",{style:{color:"#E1E4E8"}},"(tab, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE4】：哈希表没有在扩容，当前桶位可能是链表也可能是红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当插入 key 存在时，会将旧值赋值给 oldVal 返回")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            V oldVal "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【锁住当前 key 寻址的桶位的头节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"synchronized"),p("span",{style:{color:"#E1E4E8"}}," (f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 这里重新获取一下桶的头节点有没有被修改，因为可能被其他线程修改过，这里是线程安全的获取")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【头节点的哈希值大于 0 说明当前桶位是普通的链表节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (fh "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 当前的插入操作没出现重复的 key，追加到链表的末尾，binCount表示链表长度 -1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 插入的key与链表中的某个元素的 key 一致，变成替换操作，binCount 表示第几个节点冲突")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        binCount "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 迭代循环当前桶位的链表，e 是每次循环处理节点，e 初始是头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f;; "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"binCount) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 当前循环节点 key")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// key 的哈希值与当前节点的哈希一致，并且 key 的值也相同")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (e.hash "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," hash "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                ((ek "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.key) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," key "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                 (ek "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," key."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(ek)))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 把当前节点的 value 赋值给 oldVal")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                oldVal "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 允许覆盖")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"onlyIfAbsent)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#6A737D"}},"// 新数据覆盖旧数据")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    e.val "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," value;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 跳出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> pred "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 如果下一个节点为空，把数据封装成节点插入链表尾部，【binCount 代表长度 - 1】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                pred.next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(hash, key,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                                          value, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 当前桶位头节点是红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"instanceof"),p("span",{style:{color:"#E1E4E8"}}," TreeBin) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        binCount "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ((TreeBin"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")f)."),p("span",{style:{color:"#B392F0"}},"putTreeVal"),p("span",{style:{color:"#E1E4E8"}},"(hash, key,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                                              value)) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            oldVal "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"onlyIfAbsent)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                p.val "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," value;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明当前是链表或者红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (binCount "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 如果 binCount >= 8 表示处理的桶位一定是链表，说明长度是 9")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (binCount "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," TREEIFY_THRESHOLD)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 树化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#B392F0"}},"treeifyBin"),p("span",{style:{color:"#E1E4E8"}},"(tab, i);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (oldVal "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," oldVal;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 统计当前 table 一共有多少数据，判断是否达到扩容阈值标准，触发扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// binCount = 0 表示当前桶位为 null，node 可以直接放入，2 表示当前桶位已经是红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"addCount"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"1L"),p("span",{style:{color:"#E1E4E8"}},", binCount);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"putVal"),p("span",{style:{color:"#24292E"}},"(K key, V value, "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," onlyIfAbsent) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 【ConcurrentHashMap 不能存放 null 值】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (key "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NullPointerException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 扰动运算，高低位都参与寻址运算")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," hash "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"spread"),p("span",{style:{color:"#24292E"}},"(key."),p("span",{style:{color:"#6F42C1"}},"hashCode"),p("span",{style:{color:"#24292E"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 表示当前 k-v 封装成 node 后插入到指定桶位后，在桶位中的所属链表的下标位置")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," binCount "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// tab 引用当前 map 的数组 table，开始自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// f 表示桶位的头节点，n 表示哈希表数组的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// i 表示 key 通过寻址计算后得到的桶位下标，fh 表示桶位头结点的 hash 值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> f; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n, i, fh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE1】：表示当前 map 中的 table 尚未初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//【延迟初始化】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"initTable"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE2】：i 表示 key 使用【寻址算法】得到 key 对应数组的下标位置，tabAt 获取指定桶位的头结点f")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((f "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," hash)) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 对应的数组为 null 说明没有哈希冲突，直接新建节点添加到表中")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"casTabAt"),p("span",{style:{color:"#24292E"}},"(tab, i, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(hash, key, value, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE3】：逻辑说明数组已经被初始化，并且当前 key 对应的位置不为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立表示当前桶位的头结点为 FWD 结点，表示目前 map 正处于扩容过程中")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((fh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f.hash) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," MOVED)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当前线程【需要去帮助哈希表完成扩容】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"helpTransfer"),p("span",{style:{color:"#24292E"}},"(tab, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE4】：哈希表没有在扩容，当前桶位可能是链表也可能是红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当插入 key 存在时，会将旧值赋值给 oldVal 返回")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            V oldVal "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【锁住当前 key 寻址的桶位的头节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"synchronized"),p("span",{style:{color:"#24292E"}}," (f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 这里重新获取一下桶的头节点有没有被修改，因为可能被其他线程修改过，这里是线程安全的获取")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, i) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【头节点的哈希值大于 0 说明当前桶位是普通的链表节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (fh "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 当前的插入操作没出现重复的 key，追加到链表的末尾，binCount表示链表长度 -1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 插入的key与链表中的某个元素的 key 一致，变成替换操作，binCount 表示第几个节点冲突")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        binCount "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 迭代循环当前桶位的链表，e 是每次循环处理节点，e 初始是头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f;; "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"binCount) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 当前循环节点 key")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// key 的哈希值与当前节点的哈希一致，并且 key 的值也相同")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (e.hash "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," hash "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                ((ek "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.key) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," key "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                 (ek "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," key."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(ek)))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 把当前节点的 value 赋值给 oldVal")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                oldVal "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 允许覆盖")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"onlyIfAbsent)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#6A737D"}},"// 新数据覆盖旧数据")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    e.val "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," value;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 跳出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> pred "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 如果下一个节点为空，把数据封装成节点插入链表尾部，【binCount 代表长度 - 1】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                pred.next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(hash, key,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                                          value, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 当前桶位头节点是红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"instanceof"),p("span",{style:{color:"#24292E"}}," TreeBin) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        binCount "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ((TreeBin"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")f)."),p("span",{style:{color:"#6F42C1"}},"putTreeVal"),p("span",{style:{color:"#24292E"}},"(hash, key,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                                              value)) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            oldVal "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"onlyIfAbsent)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                p.val "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," value;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明当前是链表或者红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (binCount "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 如果 binCount >= 8 表示处理的桶位一定是链表，说明长度是 9")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (binCount "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," TREEIFY_THRESHOLD)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 树化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6F42C1"}},"treeifyBin"),p("span",{style:{color:"#24292E"}},"(tab, i);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (oldVal "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," oldVal;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 统计当前 table 一共有多少数据，判断是否达到扩容阈值标准，触发扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// binCount = 0 表示当前桶位为 null，node 可以直接放入，2 表示当前桶位已经是红黑树")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"addCount"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"1L"),p("span",{style:{color:"#24292E"}},", binCount);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"spread()：扰动函数"),p("p",null,[t("将 hashCode 无符号右移 16 位，高 16bit 和低 16bit 做异或，最后与 HASH_BITS 相与变成正数，"),p("strong",null,"与树化节点和转移节点区分"),t("，把高低位都利用起来减少哈希冲突，保证散列的均匀性")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"spread"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," h) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," (h "),p("span",{style:{color:"#F97583"}},"^"),p("span",{style:{color:"#E1E4E8"}}," (h "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"16"),p("span",{style:{color:"#E1E4E8"}},")) "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," HASH_BITS; "),p("span",{style:{color:"#6A737D"}},"// 0111 1111 1111 1111 1111 1111 1111 1111")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"spread"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," h) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," (h "),p("span",{style:{color:"#D73A49"}},"^"),p("span",{style:{color:"#24292E"}}," (h "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"16"),p("span",{style:{color:"#24292E"}},")) "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," HASH_BITS; "),p("span",{style:{color:"#6A737D"}},"// 0111 1111 1111 1111 1111 1111 1111 1111")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"initTable()：初始化数组，延迟初始化"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] "),p("span",{style:{color:"#B392F0"}},"initTable"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// tab 引用 map.table，sc 引用 sizeCtl")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// table 尚未初始化，开始自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," ((tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," tab.length "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// sc < 0 说明 table 正在初始化或者正在扩容，当前线程可以释放 CPU 资源")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sizeCtl) "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Thread."),p("span",{style:{color:"#B392F0"}},"yield"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// sizeCtl 设置为 -1，相当于加锁，【设置的是 SIZECTL 位置的数据】，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 因为是 sizeCtl 是基本类型，不是引用类型，所以 sc 保存的是数据的副本")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", SIZECTL, sc, "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"try"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 线程安全的逻辑，再进行一次判断")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," tab.length "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// sc > 0 创建 table 时使用 sc 为指定大小，否则使用 16 默认值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (sc "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," sc "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," DEFAULT_CAPACITY;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 创建哈希表数组")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] nt "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[])"),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},">[n];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    table "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nt;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 扩容阈值，n >>> 2  => 等于 1/4 n ，n - (1/4)n = 3/4 n => 0.75 * n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            } "),p("span",{style:{color:"#F97583"}},"finally"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 解锁，把下一次扩容的阈值赋值给 sizeCtl")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," tab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] "),p("span",{style:{color:"#6F42C1"}},"initTable"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// tab 引用 map.table，sc 引用 sizeCtl")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// table 尚未初始化，开始自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," ((tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," tab.length "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// sc < 0 说明 table 正在初始化或者正在扩容，当前线程可以释放 CPU 资源")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sizeCtl) "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Thread."),p("span",{style:{color:"#6F42C1"}},"yield"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// sizeCtl 设置为 -1，相当于加锁，【设置的是 SIZECTL 位置的数据】，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 因为是 sizeCtl 是基本类型，不是引用类型，所以 sc 保存的是数据的副本")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", SIZECTL, sc, "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"try"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 线程安全的逻辑，再进行一次判断")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," tab.length "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// sc > 0 创建 table 时使用 sc 为指定大小，否则使用 16 默认值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (sc "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," sc "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," DEFAULT_CAPACITY;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 创建哈希表数组")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] nt "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[])"),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},">[n];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    table "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nt;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 扩容阈值，n >>> 2  => 等于 1/4 n ，n - (1/4)n = 3/4 n => 0.75 * n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            } "),p("span",{style:{color:"#D73A49"}},"finally"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 解锁，把下一次扩容的阈值赋值给 sizeCtl")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," tab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"treeifyBin()：树化方法"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"treeifyBin"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," index) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> b; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n, sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立：【说明当前 table 数组长度未达到 64，此时不进行树化操作，进行扩容操作】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," MIN_TREEIFY_CAPACITY)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当前容量的 2 倍")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#B392F0"}},"tryPresize"),p("span",{style:{color:"#E1E4E8"}},"(n "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立：说明当前桶位有数据，且是普通 node 数据。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, index)) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," b.hash "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【树化加锁】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"synchronized"),p("span",{style:{color:"#E1E4E8"}}," (b) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件成立：表示加锁没问题。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, index) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," b) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> hd "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", tl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," b; e "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"; e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(e.hash, e.key, e.val,"),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((p.prev "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tl) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            hd "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            tl.next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        tl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, index, "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," TreeBin<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(hd));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"treeifyBin"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," index) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> b; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n, sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立：【说明当前 table 数组长度未达到 64，此时不进行树化操作，进行扩容操作】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," MIN_TREEIFY_CAPACITY)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当前容量的 2 倍")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6F42C1"}},"tryPresize"),p("span",{style:{color:"#24292E"}},"(n "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立：说明当前桶位有数据，且是普通 node 数据。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, index)) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," b.hash "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【树化加锁】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"synchronized"),p("span",{style:{color:"#24292E"}}," (b) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件成立：表示加锁没问题。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, index) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," b) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> hd "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", tl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," b; e "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"; e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(e.hash, e.key, e.val,"),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((p.prev "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tl) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            hd "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            tl.next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        tl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(tab, index, "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," TreeBin<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(hd));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,[t("addCount()：添加计数，"),p("strong",null,"代表哈希表中的数据总量")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"addCount"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," x, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," check) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 【上面这部分的逻辑就是 LongAdder 的累加逻辑】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"CounterCell"),p("span",{style:{color:"#E1E4E8"}},"[] as; "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," b, s;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 判断累加数组 cells 是否初始化，没有就去累加 base 域，累加失败进入条件内逻辑")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((as "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," counterCells) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapLong"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", BASECOUNT, b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," baseCount, s "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," b "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," x)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        CounterCell a; "),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}}," v; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," m;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// true 未竞争，false 发生竞争")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," uncontended "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 判断 cells 是否被其他线程初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (as "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (m "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," as.length "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 前面的条件为 fasle 说明 cells 被其他线程初始化，通过 hash 寻址对应的槽位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            (a "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," as[ThreadLocalRandom."),p("span",{style:{color:"#B392F0"}},"getProbe"),p("span",{style:{color:"#E1E4E8"}},"() "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," m]) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 尝试去对应的槽位累加，累加失败进入 fullAddCount 进行重试或者扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"(uncontended "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapLong"),p("span",{style:{color:"#E1E4E8"}},"(a, CELLVALUE, v "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," a.value, v "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," x))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 与 Striped64#longAccumulate 方法相同")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#B392F0"}},"fullAddCount"),p("span",{style:{color:"#E1E4E8"}},"(x, uncontended);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 表示当前桶位是 null，或者一个链表节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (check "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    \t"),p("span",{style:{color:"#6A737D"}},"// 【获取当前散列表元素个数】，这是一个期望值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        s "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"sumCount"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 表示一定 【是一个 put 操作调用的 addCount】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (check "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab, nt; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n, sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件一：true 说明当前 sizeCtl 可能为一个负数表示正在扩容中，或者 sizeCtl 是一个正数，表示扩容阈值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"//        false 表示哈希表的数据的数量没达到扩容条件")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 然后判断当前 table 数组是否初始化了，当前 table 长度是否小于最大值限制，就可以进行扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," (s "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"long"),p("span",{style:{color:"#E1E4E8"}},")(sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sizeCtl) "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"               (n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," MAXIMUM_CAPACITY) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 16 -> 32 扩容 标识为：1000 0000 0001 1011，【负数，扩容批次唯一标识戳】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"resizeStamp"),p("span",{style:{color:"#E1E4E8"}},"(n);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 表示当前 table，【正在扩容】，sc 高 16 位是扩容标识戳，低 16 位是线程数 + 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (sc "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件一：判断扩容标识戳是否一样，fasle 代表一样")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 勘误两个条件：")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件二是：sc == (rs << 16 ) + 1，true 代表扩容完成，因为低16位是1代表没有线程扩容了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件三是：sc == (rs << 16) + MAX_RESIZERS，判断是否已经超过最大允许的并发扩容线程数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件四：判断新表的引用是否是 null，代表扩容完成")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件五：【扩容是从高位到低位转移】，transferIndex < 0 说明没有区间需要扩容了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((sc "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_SHIFT) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," sc "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    sc "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," MAX_RESIZERS "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (nt "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextTable) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    transferIndex "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 设置当前线程参与到扩容任务中，将 sc 低 16 位值加 1，表示多一个线程参与扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 设置失败其他线程或者 transfer 内部修改了 sizeCtl 值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", SIZECTL, sc, sc "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"//【协助扩容线程】，持有nextTable参数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#B392F0"}},"transfer"),p("span",{style:{color:"#E1E4E8"}},"(tab, nt);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明当前线程是触发扩容的第一个线程，线程数量 + 2")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 1000 0000 0001 1011 0000 0000 0000 0000 +2 => 1000 0000 0001 1011 0000 0000 0000 0010")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", SIZECTL, sc,(rs "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_SHIFT) "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},"))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//【触发扩容条件的线程】，不持有 nextTable，初始线程会新建 nextTable")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#B392F0"}},"transfer"),p("span",{style:{color:"#E1E4E8"}},"(tab, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            s "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"sumCount"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"addCount"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," x, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," check) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 【上面这部分的逻辑就是 LongAdder 的累加逻辑】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"CounterCell"),p("span",{style:{color:"#24292E"}},"[] as; "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," b, s;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 判断累加数组 cells 是否初始化，没有就去累加 base 域，累加失败进入条件内逻辑")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((as "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," counterCells) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapLong"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", BASECOUNT, b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," baseCount, s "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," b "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," x)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        CounterCell a; "),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}}," v; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," m;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// true 未竞争，false 发生竞争")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," uncontended "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 判断 cells 是否被其他线程初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (as "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (m "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," as.length "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 前面的条件为 fasle 说明 cells 被其他线程初始化，通过 hash 寻址对应的槽位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            (a "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," as[ThreadLocalRandom."),p("span",{style:{color:"#6F42C1"}},"getProbe"),p("span",{style:{color:"#24292E"}},"() "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," m]) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 尝试去对应的槽位累加，累加失败进入 fullAddCount 进行重试或者扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"(uncontended "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapLong"),p("span",{style:{color:"#24292E"}},"(a, CELLVALUE, v "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," a.value, v "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," x))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 与 Striped64#longAccumulate 方法相同")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6F42C1"}},"fullAddCount"),p("span",{style:{color:"#24292E"}},"(x, uncontended);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 表示当前桶位是 null，或者一个链表节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (check "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    \t"),p("span",{style:{color:"#6A737D"}},"// 【获取当前散列表元素个数】，这是一个期望值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        s "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"sumCount"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 表示一定 【是一个 put 操作调用的 addCount】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (check "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab, nt; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n, sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件一：true 说明当前 sizeCtl 可能为一个负数表示正在扩容中，或者 sizeCtl 是一个正数，表示扩容阈值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"//        false 表示哈希表的数据的数量没达到扩容条件")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 然后判断当前 table 数组是否初始化了，当前 table 长度是否小于最大值限制，就可以进行扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," (s "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"long"),p("span",{style:{color:"#24292E"}},")(sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sizeCtl) "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"               (n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," MAXIMUM_CAPACITY) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 16 -> 32 扩容 标识为：1000 0000 0001 1011，【负数，扩容批次唯一标识戳】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"resizeStamp"),p("span",{style:{color:"#24292E"}},"(n);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 表示当前 table，【正在扩容】，sc 高 16 位是扩容标识戳，低 16 位是线程数 + 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (sc "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件一：判断扩容标识戳是否一样，fasle 代表一样")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 勘误两个条件：")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件二是：sc == (rs << 16 ) + 1，true 代表扩容完成，因为低16位是1代表没有线程扩容了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件三是：sc == (rs << 16) + MAX_RESIZERS，判断是否已经超过最大允许的并发扩容线程数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件四：判断新表的引用是否是 null，代表扩容完成")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件五：【扩容是从高位到低位转移】，transferIndex < 0 说明没有区间需要扩容了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((sc "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_SHIFT) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," sc "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    sc "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," MAX_RESIZERS "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (nt "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextTable) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    transferIndex "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 设置当前线程参与到扩容任务中，将 sc 低 16 位值加 1，表示多一个线程参与扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 设置失败其他线程或者 transfer 内部修改了 sizeCtl 值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", SIZECTL, sc, sc "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"//【协助扩容线程】，持有nextTable参数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6F42C1"}},"transfer"),p("span",{style:{color:"#24292E"}},"(tab, nt);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明当前线程是触发扩容的第一个线程，线程数量 + 2")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 1000 0000 0001 1011 0000 0000 0000 0000 +2 => 1000 0000 0001 1011 0000 0000 0000 0010")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", SIZECTL, sc,(rs "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_SHIFT) "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},"))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//【触发扩容条件的线程】，不持有 nextTable，初始线程会新建 nextTable")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6F42C1"}},"transfer"),p("span",{style:{color:"#24292E"}},"(tab, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            s "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"sumCount"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,[t("resizeStamp()：扩容标识符，"),p("strong",null,"每次扩容都会产生一个，不是每个线程都产生"),t("，16 扩容到 32 产生一个，32 扩容到 64 产生一个")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"/**")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 扩容的标识符")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 16 -> 32 从16扩容到32")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * numberOfLeadingZeros(16) => 1 0000 => 32 - 5 = 27 => 0000 0000 0001 1011")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * (1 << (RESIZE_STAMP_BITS - 1)) => 1000 0000 0000 0000 => 32768")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * ---------------------------------------------------------------")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 0000 0000 0001 1011")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 1000 0000 0000 0000")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 1000 0000 0001 1011")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 永远是负数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," */")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"resizeStamp"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 或运算")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," Integer."),p("span",{style:{color:"#B392F0"}},"numberOfLeadingZeros"),p("span",{style:{color:"#E1E4E8"}},"(n) "),p("span",{style:{color:"#F97583"}},"|"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," (RESIZE_STAMP_BITS "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")); "),p("span",{style:{color:"#6A737D"}},"// (16 -1 = 15)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"/**")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 扩容的标识符")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 16 -> 32 从16扩容到32")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * numberOfLeadingZeros(16) => 1 0000 => 32 - 5 = 27 => 0000 0000 0001 1011")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * (1 << (RESIZE_STAMP_BITS - 1)) => 1000 0000 0000 0000 => 32768")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * ---------------------------------------------------------------")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 0000 0000 0001 1011")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 1000 0000 0000 0000")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 1000 0000 0001 1011")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," * 永远是负数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}}," */")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"resizeStamp"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 或运算")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," Integer."),p("span",{style:{color:"#6F42C1"}},"numberOfLeadingZeros"),p("span",{style:{color:"#24292E"}},"(n) "),p("span",{style:{color:"#D73A49"}},"|"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," (RESIZE_STAMP_BITS "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")); "),p("span",{style:{color:"#6A737D"}},"// (16 -1 = 15)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),os=p("hr",null,null,-1),ns={id:"扩容方法",tabindex:"-1"},as=p("p",null,"扩容机制：",-1),es=p("ul",null,[p("li",null,"当链表中元素个数超过 8 个，数组的大小还未超过 64 时，此时进行数组的扩容，如果超过则将链表转化成红黑树"),p("li",null,"put 数据后调用 addCount() 方法，判断当前哈希表的容量超过阈值 sizeCtl，超过进行扩容"),p("li",null,"增删改线程发现其他线程正在扩容，帮其扩容")],-1),cs=p("p",null,"常见方法：",-1),ps=p("ul",null,[p("li",null,[p("p",null,"transfer()：数据转移到新表中，完成扩容"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"transfer"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] nextTab) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// n 表示扩容之前 table 数组的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length, stride;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// stride 表示分配给线程任务的步长，默认就是 16 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((stride "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (NCPU "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"3"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"/"),p("span",{style:{color:"#E1E4E8"}}," NCPU "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," n) "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," MIN_TRANSFER_STRIDE)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        stride "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," MIN_TRANSFER_STRIDE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 如果当前线程为触发本次扩容的线程，需要做一些扩容准备工作，【协助线程不做这一步】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (nextTab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"try"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 创建一个容量是之前【二倍的 table 数组】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] nt "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[])"),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},">[n "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            nextTab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nt;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        } "),p("span",{style:{color:"#F97583"}},"catch"),p("span",{style:{color:"#E1E4E8"}}," (Throwable "),p("span",{style:{color:"#FFAB70"}},"ex"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," Integer.MAX_VALUE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 把新表赋值给对象属性 nextTable，方便其他线程获取新表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        nextTable "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextTab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 记录迁移数据整体位置的一个标记，transferIndex 计数从1开始不是 0，所以这里是长度，不是长度-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        transferIndex "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 新数组的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," nextn "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextTab.length;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 当某个桶位数据处理完毕后，将此桶位设置为 fwd 节点，其它写线程或读线程看到后，可以从中获取到新表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ForwardingNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> fwd "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," ForwardingNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(nextTab);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 推进标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 完成标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," finishing "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// i 表示分配给当前线程任务，执行到的桶位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// bound 表示分配给当前线程任务的下界限制，因为是倒序迁移，16 迁移完 迁移 15，15完成去迁移14")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},", bound "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},";;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> f; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," fh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 给当前线程【分配任务区间】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," (advance) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 分配任务的开始下标，分配任务的结束下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," nextIndex, nextBound;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"         ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// --i 让当前线程处理下一个索引，true说明当前的迁移任务尚未完成，false说明线程已经完成或者还未分配")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"--"),p("span",{style:{color:"#E1E4E8"}},"i "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," bound "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," finishing)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 迁移的开始下标，小于0说明没有区间需要迁移了，设置当前线程的 i 变量为 -1 跳出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((nextIndex "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," transferIndex) "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明还有区间需要分配，然后给当前线程分配任务，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", TRANSFERINDEX, nextIndex,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                      "),p("span",{style:{color:"#6A737D"}},"// 判断区间是否还够一个步长，不够就全部分配")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                      nextBound "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (nextIndex "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," stride "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," nextIndex "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," stride "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},"))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 当前线程的结束下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                bound "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextBound;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 当前线程的开始下标，上一个线程结束的下标的下一个索引就是这个线程开始的下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextIndex "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 任务分配结束，跳出循环执行迁移操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【分配完成，开始数据迁移操作】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE1】：i < 0 成立表示当前线程未分配到任务，或者任务执行完了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (i "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," n "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," nextn) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 如果迁移完成")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (finishing) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                nextTable "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";\t"),p("span",{style:{color:"#6A737D"}},"// help GC")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                table "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextTab;\t"),p("span",{style:{color:"#6A737D"}},"// 新表赋值给当前对象")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                sizeCtl "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},");"),p("span",{style:{color:"#6A737D"}},"// 扩容阈值为 2n - n/2 = 3n/2 = 0.75*(2n)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当前线程完成了分配的任务区间，可以退出，先把 sizeCtl 赋值给 sc 保留")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", SIZECTL, sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sizeCtl, sc "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 判断当前线程是不是最后一个线程，不是的话直接 return，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((sc "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"2"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"resizeStamp"),p("span",{style:{color:"#E1E4E8"}},"(n) "),p("span",{style:{color:"#F97583"}},"<<"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_SHIFT)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 所以最后一个线程退出的时候，sizeCtl 的低 16 位为 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                finishing "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 【这里表示最后一个线程需要重新检查一遍是否有漏掉的区间】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE2】：当前桶位未存放数据，只需要将此处设置为 fwd 节点即可。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((f "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i)) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"casTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", fwd);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE3】：说明当前桶位已经迁移过了，当前线程不用再处理了，直接处理下一个桶位即可")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((fh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f.hash) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," MOVED)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},"; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE4】：当前桶位有数据，而且 node 节点不是 fwd 节点，说明这些数据需要迁移")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【锁住头节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"synchronized"),p("span",{style:{color:"#E1E4E8"}}," (f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 二次检查，防止头节点已经被修改了，因为这里才是线程安全的访问")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【迁移数据的逻辑，和 HashMap 相似】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// ln 表示低位链表引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// hn 表示高位链表引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> ln, hn;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 哈希 > 0 表示当前桶位是链表桶位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (fh "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 和 HashMap 的处理方式一致，与老数组长度相与，16 是 10000")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 判断对应的 1 的位置上是 0 或 1 分成高低位链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," runBit "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," fh "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> lastRun "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 遍历链表，寻找【逆序看】最长的对应位相同的链表，看下面的图更好的理解")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f.next; p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"; p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 将当前节点的哈希 与 n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.hash "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 如果当前值与前面节点的值 对应位 不同，则修改 runBit，把 lastRun 指向当前节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (b "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," runBit) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                runBit "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," b;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                lastRun "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 判断筛选出的链表是低位的还是高位的")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (runBit "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            ln "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," lastRun;\t"),p("span",{style:{color:"#6A737D"}},"// ln 指向该链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            hn "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";\t\t"),p("span",{style:{color:"#6A737D"}},"// hn 为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 说明 lastRun 引用的链表为高位链表，就让 hn 指向高位链表头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            hn "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," lastRun;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            ln "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 从头开始遍历所有的链表节点，迭代到 p == lastRun 节点跳出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f; p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," lastRun; p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," ph "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.hash; K pk "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.key; V pv "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((ph "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," n) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 【头插法】，从右往左看，首先 ln 指向的是上一个节点，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 所以这次新建的节点的 next 指向上一个节点，然后更新 ln 的引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                ln "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(ph, pk, pv, ln);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                hn "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(ph, pk, pv, hn);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 高低位链设置到新表中的指定位置")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(nextTab, i, ln);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(nextTab, i "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," n, hn);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 老表中的该桶位设置为 fwd 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i, fwd);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 条件成立：表示当前桶位是 红黑树结点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"instanceof"),p("span",{style:{color:"#E1E4E8"}}," TreeBin) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        TreeBin<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (TreeBin"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> lo "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", loTail "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> hi "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", hiTail "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," lc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},", hc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 迭代 TreeBin 中的双向链表，从头结点至尾节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t.first; e "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"; e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 迭代的当前元素的 hash")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.hash;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                (h, e.key, e.val, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 条件成立表示当前循环节点属于低位链节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((h "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," n) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((p.prev "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," loTail) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    lo "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#6A737D"}},"//【尾插法】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    loTail.next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// loTail 指向尾节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                loTail "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"lc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((p.prev "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," hiTail) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    hi "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    hiTail.next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                hiTail "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"hc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 拆成的高位低位两个链，【判断是否需要需要转化为链表】，反之保持树化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        ln "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (lc "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," UNTREEIFY_THRESHOLD) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"untreeify"),p("span",{style:{color:"#E1E4E8"}},"(lo) "),p("span",{style:{color:"#F97583"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        (hc "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," TreeBin<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(lo) "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," t;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        hn "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (hc "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," UNTREEIFY_THRESHOLD) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"untreeify"),p("span",{style:{color:"#E1E4E8"}},"(hi) "),p("span",{style:{color:"#F97583"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        (lc "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," TreeBin<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(hi) "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," t;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(nextTab, i, ln);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(nextTab, i "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," n, hn);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i, fwd);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        advance "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"transfer"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] nextTab) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// n 表示扩容之前 table 数组的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length, stride;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// stride 表示分配给线程任务的步长，默认就是 16 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((stride "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (NCPU "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"3"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"/"),p("span",{style:{color:"#24292E"}}," NCPU "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," n) "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," MIN_TRANSFER_STRIDE)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        stride "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," MIN_TRANSFER_STRIDE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 如果当前线程为触发本次扩容的线程，需要做一些扩容准备工作，【协助线程不做这一步】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (nextTab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"try"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 创建一个容量是之前【二倍的 table 数组】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] nt "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[])"),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},">[n "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            nextTab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nt;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        } "),p("span",{style:{color:"#D73A49"}},"catch"),p("span",{style:{color:"#24292E"}}," (Throwable "),p("span",{style:{color:"#E36209"}},"ex"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," Integer.MAX_VALUE;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 把新表赋值给对象属性 nextTable，方便其他线程获取新表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        nextTable "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextTab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 记录迁移数据整体位置的一个标记，transferIndex 计数从1开始不是 0，所以这里是长度，不是长度-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        transferIndex "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 新数组的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," nextn "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextTab.length;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 当某个桶位数据处理完毕后，将此桶位设置为 fwd 节点，其它写线程或读线程看到后，可以从中获取到新表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ForwardingNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> fwd "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," ForwardingNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(nextTab);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 推进标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 完成标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," finishing "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// i 表示分配给当前线程任务，执行到的桶位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// bound 表示分配给当前线程任务的下界限制，因为是倒序迁移，16 迁移完 迁移 15，15完成去迁移14")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},", bound "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},";;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> f; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," fh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 给当前线程【分配任务区间】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," (advance) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 分配任务的开始下标，分配任务的结束下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," nextIndex, nextBound;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"         ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// --i 让当前线程处理下一个索引，true说明当前的迁移任务尚未完成，false说明线程已经完成或者还未分配")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"--"),p("span",{style:{color:"#24292E"}},"i "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," bound "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," finishing)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 迁移的开始下标，小于0说明没有区间需要迁移了，设置当前线程的 i 变量为 -1 跳出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((nextIndex "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," transferIndex) "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明还有区间需要分配，然后给当前线程分配任务，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", TRANSFERINDEX, nextIndex,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                      "),p("span",{style:{color:"#6A737D"}},"// 判断区间是否还够一个步长，不够就全部分配")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                      nextBound "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (nextIndex "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," stride "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," nextIndex "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," stride "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},"))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 当前线程的结束下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                bound "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextBound;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 当前线程的开始下标，上一个线程结束的下标的下一个索引就是这个线程开始的下标")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextIndex "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 任务分配结束，跳出循环执行迁移操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【分配完成，开始数据迁移操作】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE1】：i < 0 成立表示当前线程未分配到任务，或者任务执行完了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (i "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," n "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," nextn) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 如果迁移完成")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (finishing) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                nextTable "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";\t"),p("span",{style:{color:"#6A737D"}},"// help GC")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                table "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextTab;\t"),p("span",{style:{color:"#6A737D"}},"// 新表赋值给当前对象")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                sizeCtl "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},");"),p("span",{style:{color:"#6A737D"}},"// 扩容阈值为 2n - n/2 = 3n/2 = 0.75*(2n)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当前线程完成了分配的任务区间，可以退出，先把 sizeCtl 赋值给 sc 保留")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", SIZECTL, sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sizeCtl, sc "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 判断当前线程是不是最后一个线程，不是的话直接 return，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((sc "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"2"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"resizeStamp"),p("span",{style:{color:"#24292E"}},"(n) "),p("span",{style:{color:"#D73A49"}},"<<"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_SHIFT)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 所以最后一个线程退出的时候，sizeCtl 的低 16 位为 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                finishing "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 【这里表示最后一个线程需要重新检查一遍是否有漏掉的区间】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE2】：当前桶位未存放数据，只需要将此处设置为 fwd 节点即可。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((f "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, i)) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"casTabAt"),p("span",{style:{color:"#24292E"}},"(tab, i, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", fwd);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE3】：说明当前桶位已经迁移过了，当前线程不用再处理了，直接处理下一个桶位即可")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((fh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f.hash) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," MOVED)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},"; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE4】：当前桶位有数据，而且 node 节点不是 fwd 节点，说明这些数据需要迁移")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【锁住头节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"synchronized"),p("span",{style:{color:"#24292E"}}," (f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 二次检查，防止头节点已经被修改了，因为这里才是线程安全的访问")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, i) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【迁移数据的逻辑，和 HashMap 相似】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// ln 表示低位链表引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// hn 表示高位链表引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> ln, hn;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 哈希 > 0 表示当前桶位是链表桶位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (fh "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 和 HashMap 的处理方式一致，与老数组长度相与，16 是 10000")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 判断对应的 1 的位置上是 0 或 1 分成高低位链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," runBit "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," fh "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> lastRun "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 遍历链表，寻找【逆序看】最长的对应位相同的链表，看下面的图更好的理解")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f.next; p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"; p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 将当前节点的哈希 与 n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.hash "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 如果当前值与前面节点的值 对应位 不同，则修改 runBit，把 lastRun 指向当前节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (b "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," runBit) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                runBit "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," b;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                lastRun "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 判断筛选出的链表是低位的还是高位的")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (runBit "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            ln "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," lastRun;\t"),p("span",{style:{color:"#6A737D"}},"// ln 指向该链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            hn "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";\t\t"),p("span",{style:{color:"#6A737D"}},"// hn 为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 说明 lastRun 引用的链表为高位链表，就让 hn 指向高位链表头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            hn "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," lastRun;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            ln "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 从头开始遍历所有的链表节点，迭代到 p == lastRun 节点跳出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f; p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," lastRun; p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," ph "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.hash; K pk "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.key; V pv "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((ph "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," n) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 【头插法】，从右往左看，首先 ln 指向的是上一个节点，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 所以这次新建的节点的 next 指向上一个节点，然后更新 ln 的引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                ln "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(ph, pk, pv, ln);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                hn "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(ph, pk, pv, hn);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 高低位链设置到新表中的指定位置")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(nextTab, i, ln);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(nextTab, i "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," n, hn);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 老表中的该桶位设置为 fwd 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(tab, i, fwd);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 条件成立：表示当前桶位是 红黑树结点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"instanceof"),p("span",{style:{color:"#24292E"}}," TreeBin) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        TreeBin<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (TreeBin"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> lo "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", loTail "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> hi "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", hiTail "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," lc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},", hc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 迭代 TreeBin 中的双向链表，从头结点至尾节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t.first; e "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"; e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 迭代的当前元素的 hash")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.hash;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                (h, e.key, e.val, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// 条件成立表示当前循环节点属于低位链节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((h "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," n) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((p.prev "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," loTail) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    lo "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#6A737D"}},"//【尾插法】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    loTail.next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// loTail 指向尾节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                loTail "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"lc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((p.prev "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," hiTail) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    hi "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    hiTail.next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                hiTail "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"hc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 拆成的高位低位两个链，【判断是否需要需要转化为链表】，反之保持树化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        ln "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (lc "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," UNTREEIFY_THRESHOLD) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"untreeify"),p("span",{style:{color:"#24292E"}},"(lo) "),p("span",{style:{color:"#D73A49"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        (hc "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," TreeBin<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(lo) "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," t;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        hn "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (hc "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," UNTREEIFY_THRESHOLD) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"untreeify"),p("span",{style:{color:"#24292E"}},"(hi) "),p("span",{style:{color:"#D73A49"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        (lc "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," TreeBin<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(hi) "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," t;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(nextTab, i, ln);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(nextTab, i "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," n, hn);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(tab, i, fwd);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        advance "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("p",null,[t("链表处理的 LastRun 机制，"),p("strong",null,"可以减少节点的创建")]),p("figure",null,[p("img",{alt:"image-20230824175210854",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175210854.png"})])]),p("li",null,[p("p",null,"helpTransfer()：帮助扩容机制"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] "),p("span",{style:{color:"#B392F0"}},"helpTransfer"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] nextTab; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 数组不为空，节点是转发节点，获取转发节点指向的新表开始协助主线程扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"instanceof"),p("span",{style:{color:"#E1E4E8"}}," ForwardingNode) "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        (nextTab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ((ForwardingNode"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")f).nextTable) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 扩容标识戳")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"resizeStamp"),p("span",{style:{color:"#E1E4E8"}},"(tab.length);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 判断数据迁移是否完成，迁移完成会把 新表赋值给 nextTable 属性")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," (nextTab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," nextTable "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," table "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," tab "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," (sc "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," sizeCtl) "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((sc "),p("span",{style:{color:"#F97583"}},">>>"),p("span",{style:{color:"#E1E4E8"}}," RESIZE_STAMP_SHIFT) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," sc "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                sc "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," rs "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," MAX_RESIZERS "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," transferIndex "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 设置扩容线程数量 + 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (U."),p("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", SIZECTL, sc, sc "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 协助扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#B392F0"}},"transfer"),p("span",{style:{color:"#E1E4E8"}},"(tab, nextTab);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," nextTab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," table;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] "),p("span",{style:{color:"#6F42C1"}},"helpTransfer"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] nextTab; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," sc;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 数组不为空，节点是转发节点，获取转发节点指向的新表开始协助主线程扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"instanceof"),p("span",{style:{color:"#24292E"}}," ForwardingNode) "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        (nextTab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ((ForwardingNode"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")f).nextTable) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 扩容标识戳")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"resizeStamp"),p("span",{style:{color:"#24292E"}},"(tab.length);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 判断数据迁移是否完成，迁移完成会把 新表赋值给 nextTable 属性")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," (nextTab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," nextTable "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," table "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," tab "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," (sc "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," sizeCtl) "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((sc "),p("span",{style:{color:"#D73A49"}},">>>"),p("span",{style:{color:"#24292E"}}," RESIZE_STAMP_SHIFT) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," sc "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                sc "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," rs "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," MAX_RESIZERS "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," transferIndex "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 设置扩容线程数量 + 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (U."),p("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", SIZECTL, sc, sc "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 协助扩容")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6F42C1"}},"transfer"),p("span",{style:{color:"#24292E"}},"(tab, nextTab);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," nextTab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," table;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),ts=p("hr",null,null,-1),rs={id:"获取方法",tabindex:"-1"},Es=p("p",null,"ConcurrentHashMap 使用 get() 方法获取指定 key 的数据",-1),ys=p("ul",null,[p("li",null,[p("p",null,"get()：获取指定数据的方法"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"get"),p("span",{style:{color:"#E1E4E8"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab; Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e, p; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n, eh; K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 扰动运算，获取 key 的哈希值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"spread"),p("span",{style:{color:"#E1E4E8"}},"(key."),p("span",{style:{color:"#B392F0"}},"hashCode"),p("span",{style:{color:"#E1E4E8"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 判断当前哈希表的数组是否初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 如果 table 已经初始化，进行【哈希寻址】，映射到数组对应索引处，获取该索引处的头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        (e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, (n "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," h)) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 对比头结点 hash 与查询 key 的 hash 是否一致")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((eh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.hash) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," h) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 进行值的判断，如果成功就说明当前节点就是要查询的节点，直接返回")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((ek "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.key) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," key "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (ek "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," key."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(ek)))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 当前槽位的【哈希值小于0】说明是红黑树节点或者是正在扩容的 fwd 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (eh "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e."),p("span",{style:{color:"#B392F0"}},"find"),p("span",{style:{color:"#E1E4E8"}},"(h, key)) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," p.val "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 当前桶位是【链表】，循环遍历查找")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," ((e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (e.hash "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," h "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                ((ek "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.key) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," key "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (ek "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," key."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(ek))))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"get"),p("span",{style:{color:"#24292E"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab; Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e, p; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n, eh; K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 扰动运算，获取 key 的哈希值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"spread"),p("span",{style:{color:"#24292E"}},"(key."),p("span",{style:{color:"#6F42C1"}},"hashCode"),p("span",{style:{color:"#24292E"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 判断当前哈希表的数组是否初始化")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 如果 table 已经初始化，进行【哈希寻址】，映射到数组对应索引处，获取该索引处的头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        (e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, (n "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," h)) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 对比头结点 hash 与查询 key 的 hash 是否一致")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((eh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.hash) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," h) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 进行值的判断，如果成功就说明当前节点就是要查询的节点，直接返回")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((ek "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.key) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," key "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (ek "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," key."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(ek)))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 当前槽位的【哈希值小于0】说明是红黑树节点或者是正在扩容的 fwd 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (eh "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e."),p("span",{style:{color:"#6F42C1"}},"find"),p("span",{style:{color:"#24292E"}},"(h, key)) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," p.val "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 当前桶位是【链表】，循环遍历查找")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," ((e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (e.hash "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," h "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                ((ek "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.key) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," key "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (ek "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," key."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(ek))))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"ForwardingNode#find：转移节点的查找方法"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"find"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," h, Object k) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 获取新表的引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    outer"),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," nextTable;;)  {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// e 表示在扩容而创建新表使用寻址算法得到的桶位头结点，n 表示为扩容而创建的新表的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (k "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," tab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 在新表中重新定位 hash 对应的头结点，表示在 oldTable 中对应的桶位在迁移之前就是 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            (e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, (n "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," h)) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," eh; K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【哈希相同值也相同】，表示新表当前命中桶位中的数据，即为查询想要数据")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((eh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.hash) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," h "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," ((ek "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.key) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," k "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (ek "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," k."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(ek))))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," e;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// eh < 0 说明当前新表中该索引的头节点是 TreeBin 类型，或者是 FWD 类型")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (eh "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 在并发很大的情况下新扩容的表还没完成可能【再次扩容】，在此方法处再次拿到 FWD 类型")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (e "),p("span",{style:{color:"#F97583"}},"instanceof"),p("span",{style:{color:"#E1E4E8"}}," ForwardingNode) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 继续获取新的 fwd 指向的新数组的地址，递归了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ((ForwardingNode"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")e).nextTable;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 说明此桶位为 TreeBin 节点，使用TreeBin.find 查找红黑树中相应节点。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," e."),p("span",{style:{color:"#B392F0"}},"find"),p("span",{style:{color:"#E1E4E8"}},"(h, k);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明当前桶位是链表，将当前元素指向链表的下一个元素，判断当前元素的下一个位置是否为空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明迭代到链表末尾，【未找到对应的数据，返回 null】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"find"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," h, Object k) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 获取新表的引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    outer"),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," nextTable;;)  {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// e 表示在扩容而创建新表使用寻址算法得到的桶位头结点，n 表示为扩容而创建的新表的长度")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (k "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," tab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 在新表中重新定位 hash 对应的头结点，表示在 oldTable 中对应的桶位在迁移之前就是 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            (e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, (n "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," h)) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," eh; K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【哈希相同值也相同】，表示新表当前命中桶位中的数据，即为查询想要数据")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((eh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.hash) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," h "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," ((ek "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.key) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," k "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (ek "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," k."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(ek))))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," e;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// eh < 0 说明当前新表中该索引的头节点是 TreeBin 类型，或者是 FWD 类型")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (eh "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 在并发很大的情况下新扩容的表还没完成可能【再次扩容】，在此方法处再次拿到 FWD 类型")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (e "),p("span",{style:{color:"#D73A49"}},"instanceof"),p("span",{style:{color:"#24292E"}}," ForwardingNode) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 继续获取新的 fwd 指向的新数组的地址，递归了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ((ForwardingNode"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")e).nextTable;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 说明此桶位为 TreeBin 节点，使用TreeBin.find 查找红黑树中相应节点。")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," e."),p("span",{style:{color:"#6F42C1"}},"find"),p("span",{style:{color:"#24292E"}},"(h, k);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明当前桶位是链表，将当前元素指向链表的下一个元素，判断当前元素的下一个位置是否为空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明迭代到链表末尾，【未找到对应的数据，返回 null】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),is=p("hr",null,null,-1),Fs={id:"删除方法",tabindex:"-1"},As=p("ul",null,[p("li",null,[p("p",null,"remove()：删除指定元素"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"remove"),p("span",{style:{color:"#E1E4E8"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"replaceNode"),p("span",{style:{color:"#E1E4E8"}},"(key, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"remove"),p("span",{style:{color:"#24292E"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"replaceNode"),p("span",{style:{color:"#24292E"}},"(key, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,[t("replaceNode()：替代指定的元素，会协助扩容，"),p("strong",null,"增删改（写）都会协助扩容，查询（读）操作不会"),t("，因为读操作不涉及加锁")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"replaceNode"),p("span",{style:{color:"#E1E4E8"}},"(Object key, V value, Object cv) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 计算 key 扰动运算后的 hash")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," hash "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"spread"),p("span",{style:{color:"#E1E4E8"}},"(key."),p("span",{style:{color:"#B392F0"}},"hashCode"),p("span",{style:{color:"#E1E4E8"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 开始自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," table;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> f; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," n, i, fh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE1】：table 还未初始化或者哈希寻址的数组索引处为 null，直接结束自旋，返回 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (tab "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab.length) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," hash)) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE2】：条件成立说明当前 table 正在扩容，【当前是个写操作，所以当前线程需要协助 table 完成扩容】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((fh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f.hash) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," MOVED)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"helpTransfer"),p("span",{style:{color:"#E1E4E8"}},"(tab, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE3】：当前桶位可能是 链表 也可能是 红黑树 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 保留替换之前数据引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            V oldVal "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 校验标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," validated "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【加锁当前桶位头结点】，加锁成功之后会进入代码块")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"synchronized"),p("span",{style:{color:"#E1E4E8"}}," (f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 双重检查")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"tabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 说明当前节点是链表节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (fh "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        validated "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"//遍历所有的节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f, pred "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#6A737D"}},"// hash 和值都相同，定位到了具体的节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (e.hash "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," hash "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                ((ek "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.key) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," key "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                 (ek "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," key."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(ek)))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 当前节点的value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                V ev "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (cv "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," cv "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," ev "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    (ev "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," cv."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(ev))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#6A737D"}},"// 将当前节点的值 赋值给 oldVal 后续返回会用到")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    oldVal "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ev;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (value "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")\t\t"),p("span",{style:{color:"#6A737D"}},"// 条件成立说明是替换操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                        e.val "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," value;\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (pred "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")\t"),p("span",{style:{color:"#6A737D"}},"// 非头节点删除操作，断开链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                        pred.next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next;\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                        "),p("span",{style:{color:"#6A737D"}},"// 说明当前节点即为头结点，将桶位头节点设置为以前头节点的下一个节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                        "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i, e.next);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            pred "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e.next) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 说明是红黑树节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"instanceof"),p("span",{style:{color:"#E1E4E8"}}," TreeBin) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        validated "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        TreeBin<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (TreeBin"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        TreeNode<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> r, p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t.root) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            (p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r."),p("span",{style:{color:"#B392F0"}},"findTreeNode"),p("span",{style:{color:"#E1E4E8"}},"(hash, key, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            V pv "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (cv "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," cv "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," pv "),p("span",{style:{color:"#F97583"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                (pv "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," cv."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(pv))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                oldVal "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," pv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明替换操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (value "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    p.val "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," value;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 删除操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (t."),p("span",{style:{color:"#B392F0"}},"removeTreeNode"),p("span",{style:{color:"#E1E4E8"}},"(p))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                                    "),p("span",{style:{color:"#B392F0"}},"setTabAt"),p("span",{style:{color:"#E1E4E8"}},"(tab, i, "),p("span",{style:{color:"#B392F0"}},"untreeify"),p("span",{style:{color:"#E1E4E8"}},"(t.first));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 其他线程修改过桶位头结点时，当前线程 sync 头结点锁错对象，validated 为 false，会进入下次 for 自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (validated) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (oldVal "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 替换的值为 null，【说明当前是一次删除操作，更新当前元素个数计数器】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"addCount"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"1L"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"-"),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," oldVal;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"replaceNode"),p("span",{style:{color:"#24292E"}},"(Object key, V value, Object cv) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 计算 key 扰动运算后的 hash")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," hash "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"spread"),p("span",{style:{color:"#24292E"}},"(key."),p("span",{style:{color:"#6F42C1"}},"hashCode"),p("span",{style:{color:"#24292E"}},"());")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 开始自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," table;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> f; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," n, i, fh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE1】：table 还未初始化或者哈希寻址的数组索引处为 null，直接结束自旋，返回 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (tab "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab.length) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," hash)) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE2】：条件成立说明当前 table 正在扩容，【当前是个写操作，所以当前线程需要协助 table 完成扩容】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((fh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f.hash) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," MOVED)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"helpTransfer"),p("span",{style:{color:"#24292E"}},"(tab, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【CASE3】：当前桶位可能是 链表 也可能是 红黑树 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 保留替换之前数据引用")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            V oldVal "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 校验标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," validated "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【加锁当前桶位头结点】，加锁成功之后会进入代码块")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"synchronized"),p("span",{style:{color:"#24292E"}}," (f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 双重检查")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"tabAt"),p("span",{style:{color:"#24292E"}},"(tab, i) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 说明当前节点是链表节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (fh "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        validated "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"//遍历所有的节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f, pred "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            K ek;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#6A737D"}},"// hash 和值都相同，定位到了具体的节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (e.hash "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," hash "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                ((ek "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.key) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," key "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                 (ek "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," key."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(ek)))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 当前节点的value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                V ev "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (cv "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," cv "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," ev "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    (ev "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," cv."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(ev))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#6A737D"}},"// 将当前节点的值 赋值给 oldVal 后续返回会用到")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    oldVal "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ev;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (value "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")\t\t"),p("span",{style:{color:"#6A737D"}},"// 条件成立说明是替换操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                        e.val "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," value;\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (pred "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")\t"),p("span",{style:{color:"#6A737D"}},"// 非头节点删除操作，断开链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                        pred.next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next;\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                        "),p("span",{style:{color:"#6A737D"}},"// 说明当前节点即为头结点，将桶位头节点设置为以前头节点的下一个节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                        "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(tab, i, e.next);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            pred "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e.next) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 说明是红黑树节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"instanceof"),p("span",{style:{color:"#24292E"}}," TreeBin) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        validated "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        TreeBin<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (TreeBin"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        TreeNode<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> r, p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t.root) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            (p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r."),p("span",{style:{color:"#6F42C1"}},"findTreeNode"),p("span",{style:{color:"#24292E"}},"(hash, key, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            V pv "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.val;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (cv "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," cv "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," pv "),p("span",{style:{color:"#D73A49"}},"||")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                (pv "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," cv."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(pv))) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                oldVal "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," pv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明替换操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (value "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    p.val "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," value;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#6A737D"}},"// 删除操作")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (t."),p("span",{style:{color:"#6F42C1"}},"removeTreeNode"),p("span",{style:{color:"#24292E"}},"(p))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                                    "),p("span",{style:{color:"#6F42C1"}},"setTabAt"),p("span",{style:{color:"#24292E"}},"(tab, i, "),p("span",{style:{color:"#6F42C1"}},"untreeify"),p("span",{style:{color:"#24292E"}},"(t.first));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 其他线程修改过桶位头结点时，当前线程 sync 头结点锁错对象，validated 为 false，会进入下次 for 自旋")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (validated) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (oldVal "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 替换的值为 null，【说明当前是一次删除操作，更新当前元素个数计数器】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"addCount"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"1L"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"-"),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," oldVal;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),Ds=p("hr",null,null,-1),us={id:"jdk7原理",tabindex:"-1"},ds=p("p",null,[t("ConcurrentHashMap 对锁粒度进行了优化，"),p("strong",null,"分段锁技术"),t("，将整张表分成了多个数组（Segment），每个数组又是一个类似 HashMap 数组的结构。允许多个修改操作并发进行，Segment 是一种可重入锁，继承 ReentrantLock，并发时锁住的是每个 Segment，其他 Segment 还是可以操作的，这样不同 Segment 之间就可以实现并发，大大提高效率。")],-1),hs=p("p",null,[t("底层结构： "),p("strong",null,"Segment 数组 + HashEntry 数组 + 链表"),t("（数组 + 链表是 HashMap 的结构）")],-1),Cs=p("ul",null,[p("li",null,[p("p",null,"优点：如果多个线程访问不同的 segment，实际是没有冲突的，这与 JDK8 中是类似的")]),p("li",null,[p("p",null,"缺点：Segments 数组默认大小为16，这个容量初始化指定后就不能改变了，并且不是懒惰初始化"),p("figure",null,[p("img",{alt:"image-20230824175317393",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175317393.png"})])])],-1),bs=p("hr",null,null,-1),fs={id:"copyonwrite",tabindex:"-1"},gs={id:"原理分析",tabindex:"-1"},vs=p("p",null,[t("CopyOnWriteArrayList 采用了"),p("strong",null,"写入时拷贝"),t("的思想，增删改操作会将底层数组拷贝一份，在新数组上执行操作，不影响其它线程的"),p("strong",null,"并发读，读写分离")],-1),ks=p("p",null,"CopyOnWriteArraySet 底层对 CopyOnWriteArrayList 进行了包装，装饰器模式",-1),Bs=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"CopyOnWriteArraySet"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    al "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," CopyOnWriteArrayList<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},">();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"CopyOnWriteArraySet"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    al "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," CopyOnWriteArrayList<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},">();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),xs=p("ul",null,[p("li",null,[p("p",null,"存储结构："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"[] array;\t"),p("span",{style:{color:"#6A737D"}},"// volatile 保证了读写线程之间的可见性")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"Object"),p("span",{style:{color:"#24292E"}},"[] array;\t"),p("span",{style:{color:"#6A737D"}},"// volatile 保证了读写线程之间的可见性")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"全局锁：保证线程的执行安全"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ReentrantLock"),p("span",{style:{color:"#E1E4E8"}},"();")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," ReentrantLock lock "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ReentrantLock"),p("span",{style:{color:"#24292E"}},"();")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,[t("新增数据：需要加锁，"),p("strong",null,"创建新的数组操作")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"add"),p("span",{style:{color:"#E1E4E8"}},"(E e) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".lock;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 加锁，保证线程安全")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    lock."),p("span",{style:{color:"#B392F0"}},"lock"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"try"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 获取旧的数组")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"[] elements "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"getArray"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," len "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," elements.length;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【拷贝新的数组（这里是比较耗时的操作，但不影响其它读线程）】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"[] newElements "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," Arrays."),p("span",{style:{color:"#B392F0"}},"copyOf"),p("span",{style:{color:"#E1E4E8"}},"(elements, len "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 添加新元素")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        newElements[len] "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 替换旧的数组，【这个操作以后，其他线程获取数组就是获取的新数组了】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#B392F0"}},"setArray"),p("span",{style:{color:"#E1E4E8"}},"(newElements);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    } "),p("span",{style:{color:"#F97583"}},"finally"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        lock."),p("span",{style:{color:"#B392F0"}},"unlock"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"add"),p("span",{style:{color:"#24292E"}},"(E e) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," ReentrantLock lock "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".lock;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 加锁，保证线程安全")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    lock."),p("span",{style:{color:"#6F42C1"}},"lock"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"try"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 获取旧的数组")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"Object"),p("span",{style:{color:"#24292E"}},"[] elements "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"getArray"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," len "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," elements.length;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 【拷贝新的数组（这里是比较耗时的操作，但不影响其它读线程）】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"Object"),p("span",{style:{color:"#24292E"}},"[] newElements "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," Arrays."),p("span",{style:{color:"#6F42C1"}},"copyOf"),p("span",{style:{color:"#24292E"}},"(elements, len "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 添加新元素")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        newElements[len] "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 替换旧的数组，【这个操作以后，其他线程获取数组就是获取的新数组了】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6F42C1"}},"setArray"),p("span",{style:{color:"#24292E"}},"(newElements);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    } "),p("span",{style:{color:"#D73A49"}},"finally"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        lock."),p("span",{style:{color:"#6F42C1"}},"unlock"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,[t("读操作：不加锁，"),p("strong",null,"在原数组上操作")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," E "),p("span",{style:{color:"#B392F0"}},"get"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," index) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"get"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#B392F0"}},"getArray"),p("span",{style:{color:"#E1E4E8"}},"(), index);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," E "),p("span",{style:{color:"#B392F0"}},"get"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"[] a, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," index) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," (E) a[index];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," E "),p("span",{style:{color:"#6F42C1"}},"get"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," index) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"get"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#6F42C1"}},"getArray"),p("span",{style:{color:"#24292E"}},"(), index);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," E "),p("span",{style:{color:"#6F42C1"}},"get"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"Object"),p("span",{style:{color:"#24292E"}},"[] a, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," index) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," (E) a[index];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("p",null,"适合读多写少的应用场景")]),p("li",null,[p("p",null,[t("迭代器：CopyOnWriteArrayList 在返回迭代器时，"),p("strong",null,"创建一个内部数组当前的快照（引用）"),t("，即使其他线程替换了原始数组，迭代器遍历的快照依然引用的是创建快照时的数组，所以这种实现方式也存在一定的数据延迟性，对其他线程并行添加的数据不可见")]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," Iterator"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"E"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"iterator"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 获取到数组引用，整个遍历的过程该数组都不会变，一直引用的都是老数组，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," COWIterator<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},">("),p("span",{style:{color:"#B392F0"}},"getArray"),p("span",{style:{color:"#E1E4E8"}},"(), "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 迭代器会创建一个底层array的快照，故主类的修改不影响该快照")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"COWIterator"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#F97583"}},"implements"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ListIterator"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 内部数组快照")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"[] snapshot;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"COWIterator"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#F97583"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"[] "),p("span",{style:{color:"#FFAB70"}},"elements"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#FFAB70"}},"initialCursor"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        cursor "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," initialCursor;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 数组的引用在迭代过程不会改变")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        snapshot "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," elements;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 【不支持写操作】，因为是在快照上操作，无法同步回去")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"remove"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"UnsupportedOperationException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    } ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," Iterator"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"E"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"iterator"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 获取到数组引用，整个遍历的过程该数组都不会变，一直引用的都是老数组，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," COWIterator<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},">("),p("span",{style:{color:"#6F42C1"}},"getArray"),p("span",{style:{color:"#24292E"}},"(), "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 迭代器会创建一个底层array的快照，故主类的修改不影响该快照")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"COWIterator"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#D73A49"}},"implements"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ListIterator"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 内部数组快照")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"Object"),p("span",{style:{color:"#24292E"}},"[] snapshot;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"COWIterator"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#D73A49"}},"Object"),p("span",{style:{color:"#24292E"}},"[] "),p("span",{style:{color:"#E36209"}},"elements"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#E36209"}},"initialCursor"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        cursor "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," initialCursor;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 数组的引用在迭代过程不会改变")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        snapshot "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," elements;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 【不支持写操作】，因为是在快照上操作，无法同步回去")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"remove"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"UnsupportedOperationException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    } ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),ms=p("hr",null,null,-1),Vs={id:"弱一致性",tabindex:"-1"},Ts=p("p",null,"数据一致性就是读到最新更新的数据：",-1),Ns=p("ul",null,[p("li",null,[p("p",null,"强一致性：当更新操作完成之后，任何多个后续进程或者线程的访问都会返回最新的更新过的值")]),p("li",null,[p("p",null,"弱一致性：系统并不保证进程或者线程的访问都会返回最新的更新过的值，也不会承诺多久之后可以读到")])],-1),Ks=p("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230720205728245.png",alt:"image-20230720205728245",style:{zoom:"50%"}},null,-1),Is=p("table",null,[p("thead",null,[p("tr",null,[p("th",null,"时间点"),p("th",null,"操作")])]),p("tbody",null,[p("tr",null,[p("td",null,"1"),p("td",null,"Thread-0 getArray()")]),p("tr",null,[p("td",null,"2"),p("td",null,"Thread-1 getArray()")]),p("tr",null,[p("td",null,"3"),p("td",null,"Thread-1 setArray(arrayCopy)")]),p("tr",null,[p("td",null,"4"),p("td",null,"Thread-0 array[index]")])])],-1),Ss=p("p",null,"Thread-0 读到了脏数据",-1),ws=p("p",null,"不一定弱一致性就不好",-1),js=p("ul",null,[p("li",null,[t("数据库的"),p("strong",null,"事务隔离级别"),t("就是弱一致性的表现")]),p("li",null,"并发高和一致性是矛盾的，需要权衡")],-1),Ms=p("hr",null,null,-1),_s={id:"安全失败",tabindex:"-1"},Hs=p("p",null,"在 java.util 包的集合类就都是快速失败的，而 java.util.concurrent 包下的类都是安全失败",-1),Ls=p("ul",null,[p("li",null,[p("p",null,[t("快速失败：在 A 线程使用"),p("strong",null,"迭代器"),t("对集合进行遍历的过程中，此时 B 线程对集合进行修改（增删改），或者 A 线程在遍历过程中对集合进行修改，都会导致 A 线程抛出 ConcurrentModificationException 异常")]),p("ul",null,[p("li",null,[t("AbstractList 类中的成员变量 modCount，用来记录 List 结构发生变化的次数，"),p("strong",null,"结构发生变化"),t("是指添加或者删除至少一个元素的操作，或者是调整内部数组的大小，仅仅设置元素的值不算结构发生变化")]),p("li",null,"在进行序列化或者迭代等操作时，需要比较操作前后 modCount 是否改变，如果改变了抛出 CME 异常")])]),p("li",null,[p("p",null,[t("安全失败：采用安全失败机制的集合容器，在"),p("strong",null,"迭代器"),t("遍历时直接在原集合数组内容上访问，但其他线程的增删改都会新建数组进行修改，就算修改了集合底层的数组容器，迭代器依然引用着以前的数组（"),p("strong",null,"快照思想"),t("），所以不会出现异常")]),p("p",null,"ConcurrentHashMap 不会出现并发时的迭代异常，因为在迭代过程中 CHM 的迭代器并没有判断结构的变化，迭代器还可以根据迭代的节点状态去寻找并发扩容时的新表进行迭代"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"ConcurrentHashMap map "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentHashMap"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// KeyIterator")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"Iterator iterator "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," map."),p("span",{style:{color:"#B392F0"}},"keySet"),p("span",{style:{color:"#E1E4E8"}},"()."),p("span",{style:{color:"#B392F0"}},"iterator"),p("span",{style:{color:"#E1E4E8"}},"();")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"ConcurrentHashMap map "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentHashMap"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// KeyIterator")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"Iterator iterator "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," map."),p("span",{style:{color:"#6F42C1"}},"keySet"),p("span",{style:{color:"#24292E"}},"()."),p("span",{style:{color:"#6F42C1"}},"iterator"),p("span",{style:{color:"#24292E"}},"();")])])]),p("button",{class:"collapse"})]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Traverser"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[] tab, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," size, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," index, "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," limit) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#6A737D"}},"// 引用还是原来集合的 Node 数组，所以其他线程对数据的修改是可见的")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".tab "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".baseSize "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," size;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".baseIndex "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".index "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," index;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".baseLimit "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," limit;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," }")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Traverser"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[] tab, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," size, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," index, "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," limit) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#6A737D"}},"// 引用还是原来集合的 Node 数组，所以其他线程对数据的修改是可见的")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".tab "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tab;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".baseSize "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," size;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".baseIndex "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".index "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," index;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".baseLimit "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," limit;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," }")])])]),p("button",{class:"collapse"})]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"hasNext"),p("span",{style:{color:"#E1E4E8"}},"() { "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," next "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"; }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," K "),p("span",{style:{color:"#B392F0"}},"next"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," next) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NoSuchElementException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    K k "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.key;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    lastReturned "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 在方法中进行下一个节点的获取，会进行槽位头节点的状态判断")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"advance"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," k;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"hasNext"),p("span",{style:{color:"#24292E"}},"() { "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," next "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"; }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," K "),p("span",{style:{color:"#6F42C1"}},"next"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," next) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NoSuchElementException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    K k "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.key;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    lastReturned "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 在方法中进行下一个节点的获取，会进行槽位头节点的状态判断")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"advance"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," k;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),zs=p("hr",null,null,-1),Rs={id:"collections",tabindex:"-1"},Ps=p("p",null,"Collections类是用来操作集合的工具类，提供了集合转换成线程安全的方法：",-1),Os=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"T"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," Collection"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"T"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"synchronizedCollection"),p("span",{style:{color:"#E1E4E8"}},"(Collection"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"T"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"     "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," SynchronizedCollection<>(c);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}}," }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," Map"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"synchronizedMap"),p("span",{style:{color:"#E1E4E8"}},"(Map"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," m) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," SynchronizedMap<>(m);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"T"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," Collection"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"T"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"synchronizedCollection"),p("span",{style:{color:"#24292E"}},"(Collection"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"T"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"     "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," SynchronizedCollection<>(c);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}}," }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," Map"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"synchronizedMap"),p("span",{style:{color:"#24292E"}},"(Map"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," m) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," SynchronizedMap<>(m);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),Us=p("p",null,"源码：底层也是对方法进行加锁",-1),qs=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"add"),p("span",{style:{color:"#E1E4E8"}},"(E e) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"synchronized"),p("span",{style:{color:"#E1E4E8"}}," (mutex) {"),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," c."),p("span",{style:{color:"#B392F0"}},"add"),p("span",{style:{color:"#E1E4E8"}},"(e);}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"add"),p("span",{style:{color:"#24292E"}},"(E e) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"synchronized"),p("span",{style:{color:"#24292E"}}," (mutex) {"),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," c."),p("span",{style:{color:"#6F42C1"}},"add"),p("span",{style:{color:"#24292E"}},"(e);}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),Zs=p("hr",null,null,-1),Ys={id:"skiplistmap",tabindex:"-1"},Xs={id:"底层结构",tabindex:"-1"},Ws=p("p",null,[t("跳表 SkipList 是一个"),p("strong",null,"有序的链表"),t("，默认升序，底层是链表加多级索引的结构。跳表可以对元素进行快速查询，类似于平衡树，是一种利用空间换时间的算法")],-1),Js=p("p",null,[t("对于单链表，即使链表是有序的，如果查找数据也只能从头到尾遍历链表，所以采用链表上建索引的方式提高效率，跳表的查询时间复杂度是 "),p("strong",null,"O(logn)"),t("，空间复杂度 O(n)")],-1),$s=p("p",null,"ConcurrentSkipListMap 提供了一种线程安全的并发访问的排序映射表，内部是跳表结构实现，通过 CAS + volatile 保证线程安全",-1),Gs=p("p",null,"平衡树和跳表的区别：",-1),Qs=p("ul",null,[p("li",null,[t("对平衡树的插入和删除往往很可能导致平衡树进行一次全局的调整；而对跳表的插入和删除，"),p("strong",null,"只需要对整个结构的局部进行操作")]),p("li",null,"在高并发的情况下，保证整个平衡树的线程安全需要一个全局锁；对于跳表则只需要部分锁，拥有更好的性能")],-1),sl=p("figure",null,[p("img",{alt:"image-20230824175500066",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175500066.png"})],-1),ll=p("p",null,[t("BaseHeader 存储数据，headIndex 存储索引，纵向上"),p("strong",null,"所有索引都指向链表最下面的节点")],-1),ol=p("hr",null,null,-1),nl={id:"成员变量",tabindex:"-1"},al=p("ul",null,[p("li",null,[p("p",null,"标识索引头节点位置"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Object BASE_HEADER "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Object"),p("span",{style:{color:"#E1E4E8"}},"();")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Object BASE_HEADER "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Object"),p("span",{style:{color:"#24292E"}},"();")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"跳表的顶层索引"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> head;")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> head;")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"比较器，为 null 则使用自然排序"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Comparator<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"super"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},"> comparator;")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Comparator<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"super"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},"> comparator;")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"Node 节点"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Node"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," K key;  \t\t\t\t"),p("span",{style:{color:"#6A737D"}},"// key 是 final 的, 说明节点一旦定下来, 除了删除, 一般不会改动 key")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Object value; \t\t"),p("span",{style:{color:"#6A737D"}},"// 对应的 value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> next; \t"),p("span",{style:{color:"#6A737D"}},"// 下一个节点，单向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Node"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," K key;  \t\t\t\t"),p("span",{style:{color:"#6A737D"}},"// key 是 final 的, 说明节点一旦定下来, 除了删除, 一般不会改动 key")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Object value; \t\t"),p("span",{style:{color:"#6A737D"}},"// 对应的 value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> next; \t"),p("span",{style:{color:"#6A737D"}},"// 下一个节点，单向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"索引节点 Index，只有向下和向右的指针"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Index"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> node; \t\t"),p("span",{style:{color:"#6A737D"}},"// 索引指向的节点，每个都会指向数据节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> down; \t"),p("span",{style:{color:"#6A737D"}},"// 下边level层的Index，分层索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> right; "),p("span",{style:{color:"#6A737D"}},"// 右边的Index，单向")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 在 index 本身和 succ 之间插入一个新的节点 newSucc")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"link"),p("span",{style:{color:"#E1E4E8"}},"(Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#FFAB70"}},"succ"),p("span",{style:{color:"#E1E4E8"}},", Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#FFAB70"}},"newSucc"),p("span",{style:{color:"#E1E4E8"}},"){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        newSucc.right "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," succ;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 把当前节点的右指针从 succ 改为 newSucc")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," n.value "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"casRight"),p("span",{style:{color:"#E1E4E8"}},"(succ, newSucc);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 断开当前节点和 succ 节点，将当前的节点 index 设置其的 right 为 succ.right，就是把 succ 删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"unlink"),p("span",{style:{color:"#E1E4E8"}},"(Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#FFAB70"}},"succ"),p("span",{style:{color:"#E1E4E8"}},"){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," node.value "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"casRight"),p("span",{style:{color:"#E1E4E8"}},"(succ, succ.right);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Index"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">{")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> node; \t\t"),p("span",{style:{color:"#6A737D"}},"// 索引指向的节点，每个都会指向数据节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> down; \t"),p("span",{style:{color:"#6A737D"}},"// 下边level层的Index，分层索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> right; "),p("span",{style:{color:"#6A737D"}},"// 右边的Index，单向")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 在 index 本身和 succ 之间插入一个新的节点 newSucc")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"link"),p("span",{style:{color:"#24292E"}},"(Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#E36209"}},"succ"),p("span",{style:{color:"#24292E"}},", Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#E36209"}},"newSucc"),p("span",{style:{color:"#24292E"}},"){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        newSucc.right "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," succ;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 把当前节点的右指针从 succ 改为 newSucc")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," n.value "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"casRight"),p("span",{style:{color:"#24292E"}},"(succ, newSucc);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 断开当前节点和 succ 节点，将当前的节点 index 设置其的 right 为 succ.right，就是把 succ 删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"unlink"),p("span",{style:{color:"#24292E"}},"(Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#E36209"}},"succ"),p("span",{style:{color:"#24292E"}},"){")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," node.value "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"casRight"),p("span",{style:{color:"#24292E"}},"(succ, succ.right);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"头索引节点 HeadIndex"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"HeadIndex"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#F97583"}},"extends"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Index"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," level;\t"),p("span",{style:{color:"#6A737D"}},"// 表示索引层级，所有的 HeadIndex 都指向同一个 Base_header 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"HeadIndex"),p("span",{style:{color:"#E1E4E8"}},"(Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#FFAB70"}},"node"),p("span",{style:{color:"#E1E4E8"}},", Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#FFAB70"}},"down"),p("span",{style:{color:"#E1E4E8"}},", Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> "),p("span",{style:{color:"#FFAB70"}},"right"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#FFAB70"}},"level"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#79B8FF"}},"super"),p("span",{style:{color:"#E1E4E8"}},"(node, down, right);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".level "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"HeadIndex"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#D73A49"}},"extends"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Index"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," level;\t"),p("span",{style:{color:"#6A737D"}},"// 表示索引层级，所有的 HeadIndex 都指向同一个 Base_header 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"HeadIndex"),p("span",{style:{color:"#24292E"}},"(Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#E36209"}},"node"),p("span",{style:{color:"#24292E"}},", Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#E36209"}},"down"),p("span",{style:{color:"#24292E"}},", Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> "),p("span",{style:{color:"#E36209"}},"right"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#E36209"}},"level"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#005CC5"}},"super"),p("span",{style:{color:"#24292E"}},"(node, down, right);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".level "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),el=p("hr",null,null,-1),cl={id:"成员方法-1",tabindex:"-1"},pl={id:"其他方法",tabindex:"-1"},tl=p("ul",null,[p("li",null,[p("p",null,"构造方法："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentSkipListMap"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},".comparator "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";\t"),p("span",{style:{color:"#6A737D"}},"// comparator 为 null，使用 key 的自然序，如字典序")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"initialize"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentSkipListMap"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},".comparator "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";\t"),p("span",{style:{color:"#6A737D"}},"// comparator 为 null，使用 key 的自然序，如字典序")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"initialize"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"initialize"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    keySet "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    entrySet "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    values "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    descendingMap "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 初始化索引头节点，Node 的 key 为 null，value 为 BASE_HEADER 对象，下一个节点为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// head 的分层索引 down 为 null，链表的后续索引 right 为 null，层级 level 为第 1 层")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    head "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">("),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">("),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", BASE_HEADER, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"), "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"initialize"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    keySet "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    entrySet "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    values "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    descendingMap "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 初始化索引头节点，Node 的 key 为 null，value 为 BASE_HEADER 对象，下一个节点为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// head 的分层索引 down 为 null，链表的后续索引 right 为 null，层级 level 为第 1 层")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    head "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">("),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">("),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", BASE_HEADER, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"), "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"cpr：排序"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"//　x 是比较者，y 是被比较者，比较者大于被比较者 返回正数，小于返回负数，相等返回 0")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(Comparator c, Object x, Object y) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," (c "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," c."),p("span",{style:{color:"#B392F0"}},"compare"),p("span",{style:{color:"#E1E4E8"}},"(x, y) "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," ((Comparable)x)."),p("span",{style:{color:"#B392F0"}},"compareTo"),p("span",{style:{color:"#E1E4E8"}},"(y);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"//　x 是比较者，y 是被比较者，比较者大于被比较者 返回正数，小于返回负数，相等返回 0")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(Comparator c, Object x, Object y) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," (c "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," c."),p("span",{style:{color:"#6F42C1"}},"compare"),p("span",{style:{color:"#24292E"}},"(x, y) "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," ((Comparable)x)."),p("span",{style:{color:"#6F42C1"}},"compareTo"),p("span",{style:{color:"#24292E"}},"(y);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),rl=p("hr",null,null,-1),El={id:"添加方法-1",tabindex:"-1"},yl=p("ul",null,[p("li",null,[p("p",null,"findPredecessor()：寻找前置节点"),p("p",null,"从最上层的头索引开始向右查找（链表的后续索引），如果后续索引的节点的 key 大于要查找的 key，则头索引移到下层链表，在下层链表查找，以此反复，一直查找到没有下层的分层索引为止，返回该索引的节点。如果后续索引的节点的 key 小于要查找的 key，则在该层链表中向后查找。由于查找的 key 可能永远大于索引节点的 key，所以只能找到目标的前置索引节点。如果遇到空值索引的存在，通过 CAS 来断开索引"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"findPredecessor"),p("span",{style:{color:"#E1E4E8"}},"(Object key, Comparator"),p("span",{style:{color:"#F97583"}},"<?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"super"),p("span",{style:{color:"#E1E4E8"}}," K"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," cmp) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (key "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NullPointerException"),p("span",{style:{color:"#E1E4E8"}},"(); "),p("span",{style:{color:"#6A737D"}},"// don't postpone errors")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 1.初始数据 q 是 head，r 是最顶层 h 的右 Index 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," head, r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.right, d;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.右索引节点不为空，则进行向下查找")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (r "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                K k "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.key;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 3.n.value 为 null 说明节点 n 正在删除的过程中，此时【当前线程帮其删除索引】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n.value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 在 index 层直接删除 r 索引节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"q."),p("span",{style:{color:"#B392F0"}},"unlink"),p("span",{style:{color:"#E1E4E8"}},"(r))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 删除失败重新从 head 节点开始查找，break 一个 for 到步骤 1，又从初始值开始")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 删除节点 r 成功，获取新的 r 节点,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 回到步骤 2，还是从这层索引开始向右遍历")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 4.若参数 key > r.node.key，则继续向右遍历, continue 到步骤 2 处获取右节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//   若参数 key < r.node.key，说明需要进入下层索引，到步骤 5")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(cmp, key, k) "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 5.先让 d 指向 q 的下一层，判断是否是 null，是则说明已经到了数据层，也就是第一层")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((d "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.down) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," q.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 6.未到数据层, 进行重新赋值向下扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," d;\t\t"),p("span",{style:{color:"#6A737D"}},"// q 指向 d")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," d.right;"),p("span",{style:{color:"#6A737D"}},"// r 指向 q 的后续索引节点，此时(q.key < key < r.key)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"findPredecessor"),p("span",{style:{color:"#24292E"}},"(Object key, Comparator"),p("span",{style:{color:"#D73A49"}},"<?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"super"),p("span",{style:{color:"#24292E"}}," K"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," cmp) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (key "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NullPointerException"),p("span",{style:{color:"#24292E"}},"(); "),p("span",{style:{color:"#6A737D"}},"// don't postpone errors")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 1.初始数据 q 是 head，r 是最顶层 h 的右 Index 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," head, r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.right, d;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.右索引节点不为空，则进行向下查找")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (r "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                K k "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.key;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 3.n.value 为 null 说明节点 n 正在删除的过程中，此时【当前线程帮其删除索引】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n.value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 在 index 层直接删除 r 索引节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"q."),p("span",{style:{color:"#6F42C1"}},"unlink"),p("span",{style:{color:"#24292E"}},"(r))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 删除失败重新从 head 节点开始查找，break 一个 for 到步骤 1，又从初始值开始")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 删除节点 r 成功，获取新的 r 节点,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 回到步骤 2，还是从这层索引开始向右遍历")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 4.若参数 key > r.node.key，则继续向右遍历, continue 到步骤 2 处获取右节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//   若参数 key < r.node.key，说明需要进入下层索引，到步骤 5")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(cmp, key, k) "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 5.先让 d 指向 q 的下一层，判断是否是 null，是则说明已经到了数据层，也就是第一层")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((d "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.down) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," q.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 6.未到数据层, 进行重新赋值向下扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," d;\t\t"),p("span",{style:{color:"#6A737D"}},"// q 指向 d")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," d.right;"),p("span",{style:{color:"#6A737D"}},"// r 指向 q 的后续索引节点，此时(q.key < key < r.key)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("figure",null,[p("img",{alt:"image-20230824175548648",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175548648.png"})])]),p("li",null,[p("p",null,"put()：添加数据"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"put"),p("span",{style:{color:"#E1E4E8"}},"(K key, V value) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 非空判断，value不能为空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NullPointerException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"doPut"),p("span",{style:{color:"#E1E4E8"}},"(key, value, "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"put"),p("span",{style:{color:"#24292E"}},"(K key, V value) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 非空判断，value不能为空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NullPointerException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"doPut"),p("span",{style:{color:"#24292E"}},"(key, value, "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"doPut"),p("span",{style:{color:"#E1E4E8"}},"(K key, V value, "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," onlyIfAbsent) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> z;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 非空判断，key 不能为空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (key "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NullPointerException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Comparator<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"super"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},"> cmp "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," comparator;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// outer 循环，【把待插入数据插入到数据层的合适的位置，并在扫描过程中处理已删除(value = null)的数据】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    outer"),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"//0.for (;;)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"//1.将 key 对应的前继节点找到, b 为前继节点，是数据层的, n 是前继节点的 next, ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t\t"),p("span",{style:{color:"#6A737D"}},"//  若没发生条件竞争，最终 key 在 b 与 n 之间 (找到的 b 在 base_level 上)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"findPredecessor"),p("span",{style:{color:"#E1E4E8"}},"(key, cmp), n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," b.next;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.n 不为 null 说明 b 不是链表的最后一个节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                Object v; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 3.获取 n 的右节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> f "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 4.条件竞争，并发下其他线程在 b 之后插入节点或直接删除节点 n, break 到步骤 0")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," b.next)              ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//  若节点 n 已经删除, 则调用 helpDelete 进行【帮助删除节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((v "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.value) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    n."),p("span",{style:{color:"#B392F0"}},"helpDelete"),p("span",{style:{color:"#E1E4E8"}},"(b, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 5.节点 b 被删除中，则 break 到步骤 0,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),p("span",{style:{color:"#6A737D"}},"//  【调用findPredecessor帮助删除index层的数据, node层的数据会通过helpDelete方法进行删除】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (b.value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," v "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," n) ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 6.若 key > n.key，则进行向后扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//   若 key < n.key，则证明 key 应该存储在 b 和 n 之间")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((c "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 7.key 的值和 n.key 相等，则可以直接覆盖赋值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (c "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// onlyIfAbsent 默认 false，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (onlyIfAbsent "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," n."),p("span",{style:{color:"#B392F0"}},"casValue"),p("span",{style:{color:"#E1E4E8"}},"(v, value)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        @"),p("span",{style:{color:"#F97583"}},"SuppressWarnings"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#9ECBFF"}},'"unchecked"'),p("span",{style:{color:"#E1E4E8"}},") V vv "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (V)v;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 返回被覆盖的值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," vv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// cas失败，break 一层循环，返回 0 重试")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// else c < 0; fall through")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 8.此时的情况 b.key < key < n.key，对应流程图1中的7，创建z节点指向n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            z "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(key, value, n);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 9.尝试把 b.next 从 n 设置成 z")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"b."),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"(n, z))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// cas失败，返回到步骤0，重试")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 10.break outer 后, 上面的 for 循环不会再执行, 而后执行下面的代码")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t"),p("span",{style:{color:"#6A737D"}},"// 【以上插入节点已经完成，剩下的任务要根据随机数的值来表示是否向上增加层数与上层索引】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 随机数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," rnd "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," ThreadLocalRandom."),p("span",{style:{color:"#B392F0"}},"nextSecondarySeed"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 如果随机数的二进制与 10000000000000000000000000000001 进行与运算为 0")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 即随机数的二进制最高位与最末尾必须为 0，其他位无所谓，就进入该循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 如果随机数的二进制最高位与最末位不为 0，不增加新节点的层数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 11.判断是否需要添加 level，32 位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((rnd "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0x80000001"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 索引层 level，从 1 开始，就是最底层")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," level "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},", max;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 12.判断最低位前面有几个 1，有几个leve就加几：0..0 0001 1110，这是4个，则1+4=5")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"//    【最大有30个就是 1 + 30 = 31")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"while"),p("span",{style:{color:"#E1E4E8"}}," (((rnd "),p("span",{style:{color:"#F97583"}},">>>="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 最终会指向 z 节点，就是添加的节点 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> idx "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 指向头索引节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 13.判断level是否比当前最高索引小，图中 max 为 3")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (level "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," (max "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h.level)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"; i "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," level; "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"i)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 根据层数level不断创建新增节点的上层索引，索引的后继索引留空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 第一次idx为null，也就是下层索引为空，第二次把上次的索引作为下层索引，【类似头插法】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                idx "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(z, idx, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 循环以后的索引结构")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// index-3\t← idx")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// index-2")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// index-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//  z-node")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 14.若 level > max，则【只增加一层 index 索引层】，3 + 1 = 4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," { ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            level "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," max "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//创建一个 index 数组，长度是 level+1，假设 level 是 4，创建的数组长度为 5")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">[] idxs "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (Index"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},"[])"),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Index<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}},">[level"),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// index[0]的数组 slot 并没有使用，只使用 [1,level] 这些数组的 slot")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," i "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"; i "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," level; "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"i)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                idxs[i] "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," idx "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(z, idx, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"              \t\t"),p("span",{style:{color:"#6A737D"}},"// index-4   ← idx")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                  \t"),p("span",{style:{color:"#6A737D"}},"// ......")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// index-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"//  z-node")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 获取头索引的层数，3")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," oldLevel "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h.level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 如果 level <= oldLevel，说明其他线程进行了 index 层增加操作，退出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (level "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," oldLevel)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 定义一个新的头索引节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> newh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 获取头索引的节点，就是 BASE_HEADER")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> oldbase "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 升级 baseHeader 索引，升高一级，并发下可能升高多级")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," j "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," oldLevel "),p("span",{style:{color:"#F97583"}},"+"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"1"),p("span",{style:{color:"#E1E4E8"}},"; j "),p("span",{style:{color:"#F97583"}},"<="),p("span",{style:{color:"#E1E4E8"}}," level; "),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"j)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 参数1：底层node，参数二：down，为以前的头节点，参数三：right，新建")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    newh "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(oldbase, newh, idxs[j], j);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 执行完for循环之后，baseHeader 索引长这个样子，这里只升高一级")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-4             →             index-4\t← idx")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-3                           index-3     ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-2                           index-2")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-1                           index-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// baseHeader    →    ....      →     z-node")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// cas 成功后，head 字段指向最新的 headIndex，baseHeader 的 index-4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#B392F0"}},"casHead"),p("span",{style:{color:"#E1E4E8"}},"(h, newh)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// h 指向最新的 index-4 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," newh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 让 idx 指向 z-node 的 index-3 节点，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 因为从 index-3 - index-1 的这些 z-node 索引节点 都没有插入到索引链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    idx "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," idxs[level "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," oldLevel];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 15.【把新加的索引插入索引链表中】，有上述两种情况，一种索引高度不变，另一种是高度加 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 要插入的是第几层的索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        splice"),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," insertionLevel "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," level;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 获取头索引的层数，情况 1 是 3，情况 2 是 4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," j "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h.level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【遍历 insertionLevel 层的索引，找到合适的插入位置】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Index<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h, r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.right, t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," idx;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 如果头索引为 null 或者新增节点索引为 null，退出插入索引的总循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (q "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 此处表示有其他线程删除了头索引或者新增节点的索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," splice;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 头索引的链表后续索引存在，如果是新层则为新节点索引，如果是老层则为原索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (r "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 获取r的节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 插入的key和n.key的比较值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," c "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(cmp, key, n.key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【删除空值索引】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n.value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"q."),p("span",{style:{color:"#B392F0"}},"unlink"),p("span",{style:{color:"#E1E4E8"}},"(r))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                            "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// key > r.node.key，向右扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (c "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," r.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 执行到这里，说明 key < r.node.key，判断是否是第 j 层插入新增节点的前置索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (j "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," insertionLevel) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【将新索引节点 t 插入 q r 之间】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"q."),p("span",{style:{color:"#B392F0"}},"link"),p("span",{style:{color:"#E1E4E8"}},"(r, t))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},"; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 如果新增节点的值为 null，表示该节点已经被其他线程删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (t.node.value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 找到该节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#B392F0"}},"findNode"),p("span",{style:{color:"#E1E4E8"}},"(key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," splice;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 插入层逐层自减，当为最底层时退出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"--"),p("span",{style:{color:"#E1E4E8"}},"insertionLevel "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                        "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," splice;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 其他节点随着插入节点的层数下移而下移")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"--"),p("span",{style:{color:"#E1E4E8"}},"j "),p("span",{style:{color:"#F97583"}},">="),p("span",{style:{color:"#E1E4E8"}}," insertionLevel "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," j "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," level)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t.down;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.down;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                r "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"doPut"),p("span",{style:{color:"#24292E"}},"(K key, V value, "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," onlyIfAbsent) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> z;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 非空判断，key 不能为空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (key "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NullPointerException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Comparator<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"super"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},"> cmp "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," comparator;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// outer 循环，【把待插入数据插入到数据层的合适的位置，并在扫描过程中处理已删除(value = null)的数据】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    outer"),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"//0.for (;;)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"//1.将 key 对应的前继节点找到, b 为前继节点，是数据层的, n 是前继节点的 next, ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t\t"),p("span",{style:{color:"#6A737D"}},"//  若没发生条件竞争，最终 key 在 b 与 n 之间 (找到的 b 在 base_level 上)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"findPredecessor"),p("span",{style:{color:"#24292E"}},"(key, cmp), n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," b.next;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.n 不为 null 说明 b 不是链表的最后一个节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                Object v; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 3.获取 n 的右节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> f "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 4.条件竞争，并发下其他线程在 b 之后插入节点或直接删除节点 n, break 到步骤 0")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," b.next)              ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//  若节点 n 已经删除, 则调用 helpDelete 进行【帮助删除节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((v "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.value) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    n."),p("span",{style:{color:"#6F42C1"}},"helpDelete"),p("span",{style:{color:"#24292E"}},"(b, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 5.节点 b 被删除中，则 break 到步骤 0,")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t\t\t\t"),p("span",{style:{color:"#6A737D"}},"//  【调用findPredecessor帮助删除index层的数据, node层的数据会通过helpDelete方法进行删除】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (b.value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," v "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," n) ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 6.若 key > n.key，则进行向后扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//   若 key < n.key，则证明 key 应该存储在 b 和 n 之间")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((c "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 7.key 的值和 n.key 相等，则可以直接覆盖赋值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (c "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// onlyIfAbsent 默认 false，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (onlyIfAbsent "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," n."),p("span",{style:{color:"#6F42C1"}},"casValue"),p("span",{style:{color:"#24292E"}},"(v, value)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        @"),p("span",{style:{color:"#D73A49"}},"SuppressWarnings"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#032F62"}},'"unchecked"'),p("span",{style:{color:"#24292E"}},") V vv "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (V)v;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 返回被覆盖的值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," vv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// cas失败，break 一层循环，返回 0 重试")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// else c < 0; fall through")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 8.此时的情况 b.key < key < n.key，对应流程图1中的7，创建z节点指向n")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            z "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(key, value, n);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 9.尝试把 b.next 从 n 设置成 z")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"b."),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"(n, z))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// cas失败，返回到步骤0，重试")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 10.break outer 后, 上面的 for 循环不会再执行, 而后执行下面的代码")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t"),p("span",{style:{color:"#6A737D"}},"// 【以上插入节点已经完成，剩下的任务要根据随机数的值来表示是否向上增加层数与上层索引】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 随机数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," rnd "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," ThreadLocalRandom."),p("span",{style:{color:"#6F42C1"}},"nextSecondarySeed"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 如果随机数的二进制与 10000000000000000000000000000001 进行与运算为 0")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 即随机数的二进制最高位与最末尾必须为 0，其他位无所谓，就进入该循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 如果随机数的二进制最高位与最末位不为 0，不增加新节点的层数")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 11.判断是否需要添加 level，32 位")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((rnd "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0x80000001"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 索引层 level，从 1 开始，就是最底层")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," level "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},", max;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 12.判断最低位前面有几个 1，有几个leve就加几：0..0 0001 1110，这是4个，则1+4=5")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"//    【最大有30个就是 1 + 30 = 31")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"while"),p("span",{style:{color:"#24292E"}}," (((rnd "),p("span",{style:{color:"#D73A49"}},">>>="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 最终会指向 z 节点，就是添加的节点 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> idx "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 指向头索引节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 13.判断level是否比当前最高索引小，图中 max 为 3")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (level "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," (max "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h.level)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"; i "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," level; "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"i)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 根据层数level不断创建新增节点的上层索引，索引的后继索引留空")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 第一次idx为null，也就是下层索引为空，第二次把上次的索引作为下层索引，【类似头插法】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                idx "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(z, idx, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 循环以后的索引结构")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// index-3\t← idx")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// index-2")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// index-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//  z-node")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 14.若 level > max，则【只增加一层 index 索引层】，3 + 1 = 4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," { ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            level "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," max "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//创建一个 index 数组，长度是 level+1，假设 level 是 4，创建的数组长度为 5")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">[] idxs "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (Index"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},"[])"),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Index<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}},">[level"),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// index[0]的数组 slot 并没有使用，只使用 [1,level] 这些数组的 slot")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," i "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"; i "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," level; "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"i)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                idxs[i] "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," idx "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(z, idx, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"              \t\t"),p("span",{style:{color:"#6A737D"}},"// index-4   ← idx")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                  \t"),p("span",{style:{color:"#6A737D"}},"// ......")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// index-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"//   ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"//  z-node")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 获取头索引的层数，3")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," oldLevel "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h.level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 如果 level <= oldLevel，说明其他线程进行了 index 层增加操作，退出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (level "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," oldLevel)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 定义一个新的头索引节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> newh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 获取头索引的节点，就是 BASE_HEADER")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> oldbase "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 升级 baseHeader 索引，升高一级，并发下可能升高多级")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," j "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," oldLevel "),p("span",{style:{color:"#D73A49"}},"+"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"1"),p("span",{style:{color:"#24292E"}},"; j "),p("span",{style:{color:"#D73A49"}},"<="),p("span",{style:{color:"#24292E"}}," level; "),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"j)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 参数1：底层node，参数二：down，为以前的头节点，参数三：right，新建")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    newh "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(oldbase, newh, idxs[j], j);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 执行完for循环之后，baseHeader 索引长这个样子，这里只升高一级")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-4             →             index-4\t← idx")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-3                           index-3     ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-2                           index-2")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// index-1                           index-1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"//   ↓                                  ↓")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// baseHeader    →    ....      →     z-node")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// cas 成功后，head 字段指向最新的 headIndex，baseHeader 的 index-4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#6F42C1"}},"casHead"),p("span",{style:{color:"#24292E"}},"(h, newh)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// h 指向最新的 index-4 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," newh;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 让 idx 指向 z-node 的 index-3 节点，")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t\t\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 因为从 index-3 - index-1 的这些 z-node 索引节点 都没有插入到索引链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    idx "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," idxs[level "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," oldLevel];")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 15.【把新加的索引插入索引链表中】，有上述两种情况，一种索引高度不变，另一种是高度加 1")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 要插入的是第几层的索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        splice"),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," insertionLevel "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," level;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 获取头索引的层数，情况 1 是 3，情况 2 是 4")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," j "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h.level;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 【遍历 insertionLevel 层的索引，找到合适的插入位置】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Index<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h, r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.right, t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," idx;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 如果头索引为 null 或者新增节点索引为 null，退出插入索引的总循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (q "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 此处表示有其他线程删除了头索引或者新增节点的索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," splice;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 头索引的链表后续索引存在，如果是新层则为新节点索引，如果是老层则为原索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (r "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 获取r的节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r.node;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 插入的key和n.key的比较值")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," c "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(cmp, key, n.key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【删除空值索引】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n.value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"q."),p("span",{style:{color:"#6F42C1"}},"unlink"),p("span",{style:{color:"#24292E"}},"(r))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                            "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// key > r.node.key，向右扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (c "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," r.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 执行到这里，说明 key < r.node.key，判断是否是第 j 层插入新增节点的前置索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (j "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," insertionLevel) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 【将新索引节点 t 插入 q r 之间】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"q."),p("span",{style:{color:"#6F42C1"}},"link"),p("span",{style:{color:"#24292E"}},"(r, t))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},"; ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 如果新增节点的值为 null，表示该节点已经被其他线程删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (t.node.value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6A737D"}},"// 找到该节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#6F42C1"}},"findNode"),p("span",{style:{color:"#24292E"}},"(key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," splice;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 插入层逐层自减，当为最底层时退出循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"--"),p("span",{style:{color:"#24292E"}},"insertionLevel "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                        "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," splice;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 其他节点随着插入节点的层数下移而下移")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"--"),p("span",{style:{color:"#24292E"}},"j "),p("span",{style:{color:"#D73A49"}},">="),p("span",{style:{color:"#24292E"}}," insertionLevel "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," j "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," level)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t.down;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.down;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                r "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q.right;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"findNode()"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"findNode"),p("span",{style:{color:"#E1E4E8"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 原理与doGet相同，无非是 findNode 返回节点，doGet 返回 value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((c "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"findNode"),p("span",{style:{color:"#24292E"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 原理与doGet相同，无非是 findNode 返回节点，doGet 返回 value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((c "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),il=p("hr",null,null,-1),Fl={id:"获取方法-1",tabindex:"-1"},Al=p("ul",null,[p("li",null,[p("p",null,"get(key)：获取对应的数据"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"get"),p("span",{style:{color:"#E1E4E8"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"doGet"),p("span",{style:{color:"#E1E4E8"}},"(key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"get"),p("span",{style:{color:"#24292E"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"doGet"),p("span",{style:{color:"#24292E"}},"(key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"doGet()：扫描过程会对已 value = null 的元素进行删除处理"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"doGet"),p("span",{style:{color:"#E1E4E8"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (key "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NullPointerException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Comparator<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"super"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},"> cmp "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," comparator;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    outer"),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 1.找到最底层节点的前置节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"findPredecessor"),p("span",{style:{color:"#E1E4E8"}},"(key, cmp), n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," b.next;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Object v; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.【如果该前置节点的链表后续节点为 null，说明不存在该节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// b → n → f")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> f "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 3.如果n不为前置节点的后续节点，表示已经有其他线程删除了该节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," b.next) ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 4.如果后续节点的值为null，【需要帮助删除该节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((v "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.value) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                n."),p("span",{style:{color:"#B392F0"}},"helpDelete"),p("span",{style:{color:"#E1E4E8"}},"(b, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 5.如果前置节点已被其他线程删除，重新循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (b.value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," v "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," n)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"             "),p("span",{style:{color:"#6A737D"}},"// 6.如果要获取的key与后续节点的key相等，返回节点的value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((c "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                @"),p("span",{style:{color:"#F97583"}},"SuppressWarnings"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#9ECBFF"}},'"unchecked"'),p("span",{style:{color:"#E1E4E8"}},") V vv "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (V)v;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," vv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 7.key < n.key，因位 key > b.key，b 和 n 相连，说明不存在该节点或者被其他线程删除了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (c "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"doGet"),p("span",{style:{color:"#24292E"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (key "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NullPointerException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Comparator<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"super"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},"> cmp "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," comparator;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    outer"),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 1.找到最底层节点的前置节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"findPredecessor"),p("span",{style:{color:"#24292E"}},"(key, cmp), n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," b.next;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Object v; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.【如果该前置节点的链表后续节点为 null，说明不存在该节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// b → n → f")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> f "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 3.如果n不为前置节点的后续节点，表示已经有其他线程删除了该节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," b.next) ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 4.如果后续节点的值为null，【需要帮助删除该节点】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((v "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.value) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                n."),p("span",{style:{color:"#6F42C1"}},"helpDelete"),p("span",{style:{color:"#24292E"}},"(b, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 5.如果前置节点已被其他线程删除，重新循环")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (b.value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," v "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," n)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"             "),p("span",{style:{color:"#6A737D"}},"// 6.如果要获取的key与后续节点的key相等，返回节点的value")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((c "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                @"),p("span",{style:{color:"#D73A49"}},"SuppressWarnings"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#032F62"}},'"unchecked"'),p("span",{style:{color:"#24292E"}},") V vv "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (V)v;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," vv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 7.key < n.key，因位 key > b.key，b 和 n 相连，说明不存在该节点或者被其他线程删除了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (c "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),Dl=p("hr",null,null,-1),ul={id:"删除方法-1",tabindex:"-1"},dl=p("ul",null,[p("li",null,[p("p",null,"remove()"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"remove"),p("span",{style:{color:"#E1E4E8"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"doRemove"),p("span",{style:{color:"#E1E4E8"}},"(key, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," V "),p("span",{style:{color:"#B392F0"}},"doRemove"),p("span",{style:{color:"#E1E4E8"}},"(Object key, Object value) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (key "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"throw"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"NullPointerException"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Comparator<"),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"super"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},"> cmp "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," comparator;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    outer"),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 1.找到最底层目标节点的前置节点，b.key < key")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"findPredecessor"),p("span",{style:{color:"#E1E4E8"}},"(key, cmp), n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," b.next;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Object v; "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.如果该前置节点的链表后续节点为 null，退出循环，说明不存在这个元素")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// b → n → f")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> f "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (n "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," b.next)                    "),p("span",{style:{color:"#6A737D"}},"// inconsistent read")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((v "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n.value) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {        "),p("span",{style:{color:"#6A737D"}},"// n is deleted")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                n."),p("span",{style:{color:"#B392F0"}},"helpDelete"),p("span",{style:{color:"#E1E4E8"}},"(b, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (b.value "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," v "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," n)      "),p("span",{style:{color:"#6A737D"}},"// b is deleted")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//3.key < n.key，说明被其他线程删除了，或者不存在该节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((c "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"cpr"),p("span",{style:{color:"#E1E4E8"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//4.key > n.key，继续向后扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (c "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                b "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                n "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//5.到这里是 key = n.key，value 不为空的情况下判断 value 和 n.value 是否相等")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (value "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"value."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(v))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//6.【把 n 节点的 value 置空】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"n."),p("span",{style:{color:"#B392F0"}},"casValue"),p("span",{style:{color:"#E1E4E8"}},"(v, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"//7.【给 n 添加一个删除标志 mark】，mark.next = f，然后把 b.next 设置为 f，成功后n出队")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"n."),p("span",{style:{color:"#B392F0"}},"appendMarker"),p("span",{style:{color:"#E1E4E8"}},"(f) "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"b."),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"(n, f))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 对 key 对应的 index 进行删除，调用了 findPredecessor 方法")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#B392F0"}},"findNode"),p("span",{style:{color:"#E1E4E8"}},"(key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 进行操作失败后通过 findPredecessor 中进行 index 的删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#B392F0"}},"findPredecessor"),p("span",{style:{color:"#E1E4E8"}},"(key, cmp);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (head.right "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 进行headIndex 对应的index 层的删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#B392F0"}},"tryReduceLevel"),p("span",{style:{color:"#E1E4E8"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            @"),p("span",{style:{color:"#F97583"}},"SuppressWarnings"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#9ECBFF"}},'"unchecked"'),p("span",{style:{color:"#E1E4E8"}},") V vv "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (V)v;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," vv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"remove"),p("span",{style:{color:"#24292E"}},"(Object key) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"doRemove"),p("span",{style:{color:"#24292E"}},"(key, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," V "),p("span",{style:{color:"#6F42C1"}},"doRemove"),p("span",{style:{color:"#24292E"}},"(Object key, Object value) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (key "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"throw"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"NullPointerException"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Comparator<"),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"super"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},"> cmp "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," comparator;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    outer"),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 1.找到最底层目标节点的前置节点，b.key < key")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"findPredecessor"),p("span",{style:{color:"#24292E"}},"(key, cmp), n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," b.next;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Object v; "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," c;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 2.如果该前置节点的链表后续节点为 null，退出循环，说明不存在这个元素")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// b → n → f")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> f "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (n "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," b.next)                    "),p("span",{style:{color:"#6A737D"}},"// inconsistent read")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((v "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n.value) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {        "),p("span",{style:{color:"#6A737D"}},"// n is deleted")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                n."),p("span",{style:{color:"#6F42C1"}},"helpDelete"),p("span",{style:{color:"#24292E"}},"(b, f);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (b.value "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," v "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," n)      "),p("span",{style:{color:"#6A737D"}},"// b is deleted")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//3.key < n.key，说明被其他线程删除了，或者不存在该节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((c "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"cpr"),p("span",{style:{color:"#24292E"}},"(cmp, key, n.key)) "),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//4.key > n.key，继续向后扫描")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (c "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                b "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," n;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                n "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," f;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//5.到这里是 key = n.key，value 不为空的情况下判断 value 和 n.value 是否相等")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (value "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"value."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(v))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}}," outer;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//6.【把 n 节点的 value 置空】")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"n."),p("span",{style:{color:"#6F42C1"}},"casValue"),p("span",{style:{color:"#24292E"}},"(v, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"//7.【给 n 添加一个删除标志 mark】，mark.next = f，然后把 b.next 设置为 f，成功后n出队")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"n."),p("span",{style:{color:"#6F42C1"}},"appendMarker"),p("span",{style:{color:"#24292E"}},"(f) "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"b."),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"(n, f))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 对 key 对应的 index 进行删除，调用了 findPredecessor 方法")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6F42C1"}},"findNode"),p("span",{style:{color:"#24292E"}},"(key);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 进行操作失败后通过 findPredecessor 中进行 index 的删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6F42C1"}},"findPredecessor"),p("span",{style:{color:"#24292E"}},"(key, cmp);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (head.right "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 进行headIndex 对应的index 层的删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6F42C1"}},"tryReduceLevel"),p("span",{style:{color:"#24292E"}},"();")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            @"),p("span",{style:{color:"#D73A49"}},"SuppressWarnings"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#032F62"}},'"unchecked"'),p("span",{style:{color:"#24292E"}},") V vv "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (V)v;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," vv;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})]),p("p",null,"经过 findPredecessor() 中的 unlink() 后索引已经被删除"),p("figure",null,[p("img",{alt:"image-20230824175621276",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175621276.png"})])]),p("li",null,[p("p",null,"appendMarker()：添加删除标记节点"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"appendMarker"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 通过 CAS 让 n.next 指向一个 key 为 null，value 为 this，next 为 f 的标记节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"(f, "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(f));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"appendMarker"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 通过 CAS 让 n.next 指向一个 key 为 null，value 为 this，next 为 f 的标记节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"(f, "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(f));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"helpDelete()：将添加了删除标记的节点清除，参数是该节点的前驱和后继节点"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"helpDelete"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," b, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// this 节点的后续节点为 f，且本身为 b 的后续节点，一般都是正确的，除非被别的线程删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," next "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," b.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 如果 n 还还没有被标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (f "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," f.value "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," f) ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"(f, "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},">(f));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 通过 CAS，将 b 的下一个节点 n 变成 f.next，即成为图中的样式")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            b."),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"this"),p("span",{style:{color:"#E1E4E8"}},", f.next);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"helpDelete"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," b, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," f) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// this 节点的后续节点为 f，且本身为 b 的后续节点，一般都是正确的，除非被别的线程删除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," next "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," b.next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 如果 n 还还没有被标记")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (f "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," f.value "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," f) ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"(f, "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},">(f));")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 通过 CAS，将 b 的下一个节点 n 变成 f.next，即成为图中的样式")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            b."),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"this"),p("span",{style:{color:"#24292E"}},", f.next);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"tryReduceLevel()：删除索引"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"tryReduceLevel"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> d;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    HeadIndex<"),p("span",{style:{color:"#F97583"}},"K"),p("span",{style:{color:"#E1E4E8"}},","),p("span",{style:{color:"#F97583"}},"V"),p("span",{style:{color:"#E1E4E8"}},"> e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (h.level "),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"3"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        (d "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (HeadIndex"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")h.down) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        (e "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (HeadIndex"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"K,V"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}},")d.down) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        e.right "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        d.right "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        h.right "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 设置头索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#B392F0"}},"casHead"),p("span",{style:{color:"#E1E4E8"}},"(h, d) "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 重新检查")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        h.right "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 重新检查返回true，说明其他线程增加了索引层级，把索引头节点设置回来")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#B392F0"}},"casHead"),p("span",{style:{color:"#E1E4E8"}},"(d, h);   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"tryReduceLevel"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> d;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    HeadIndex<"),p("span",{style:{color:"#D73A49"}},"K"),p("span",{style:{color:"#24292E"}},","),p("span",{style:{color:"#D73A49"}},"V"),p("span",{style:{color:"#24292E"}},"> e;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (h.level "),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"3"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        (d "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (HeadIndex"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")h.down) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        (e "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (HeadIndex"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"K,V"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}},")d.down) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        e.right "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        d.right "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        h.right "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 设置头索引")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6F42C1"}},"casHead"),p("span",{style:{color:"#24292E"}},"(h, d) "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 重新检查")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        h.right "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 重新检查返回true，说明其他线程增加了索引层级，把索引头节点设置回来")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6F42C1"}},"casHead"),p("span",{style:{color:"#24292E"}},"(d, h);   ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),hl=p("hr",null,null,-1),Cl={id:"noblocking",tabindex:"-1"},bl={id:"非阻塞队列",tabindex:"-1"},fl=p("p",null,"并发编程中，需要用到安全的队列，实现安全队列可以使用 2 种方式：",-1),gl=p("ul",null,[p("li",null,"加锁，这种实现方式是阻塞队列"),p("li",null,"使用循环 CAS 算法实现，这种方式是非阻塞队列")],-1),vl=p("p",null,"ConcurrentLinkedQueue 是一个基于链接节点的无界线程安全队列，采用先进先出的规则对节点进行排序，当添加一个元素时，会添加到队列的尾部，当获取一个元素时，会返回队列头部的元素",-1),kl=p("p",null,"补充：ConcurrentLinkedDeque 是双向链表结构的无界并发队列",-1),Bl=p("p",null,"ConcurrentLinkedQueue 使用约定：",-1),xl=p("ol",null,[p("li",null,"不允许 null 入列"),p("li",null,"队列中所有未删除的节点的 item 都不能为 null 且都能从 head 节点遍历到"),p("li",null,"删除节点是将 item 设置为 null，队列迭代时跳过 item 为 null 节点"),p("li",null,[t("head 节点跟 tail 不一定指向头节点或尾节点，可能"),p("strong",null,"存在滞后性")])],-1),ml=p("p",null,"ConcurrentLinkedQueue 由 head 节点和 tail 节点组成，每个节点由节点元素和指向下一个节点的引用组成，组成一张链表结构的队列",-1),Vl=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"transient"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> tail;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"private"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"static"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"class"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"Node"),p("span",{style:{color:"#E1E4E8"}},"<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," E item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"volatile"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"//.....")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"transient"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> tail;")]),t("\n"),p("span",{class:"line"}),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"private"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"static"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"class"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"Node"),p("span",{style:{color:"#24292E"}},"<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," E item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"volatile"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"//.....")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),Tl=p("hr",null,null,-1),Nl={id:"构造方法-1",tabindex:"-1"},Kl=p("ul",null,[p("li",null,[p("p",null,"无参构造方法："),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentLinkedQueue"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 默认情况下 head 节点存储的元素为空，dummy 节点，tail 节点等于 head 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    head "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tail "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},">("),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentLinkedQueue"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 默认情况下 head 节点存储的元素为空，dummy 节点，tail 节点等于 head 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    head "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tail "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},">("),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"有参构造方法"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"ConcurrentLinkedQueue"),p("span",{style:{color:"#E1E4E8"}},"(Collection"),p("span",{style:{color:"#F97583"}},"<?"),p("span",{style:{color:"#E1E4E8"}}," extends E"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 遍历节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (E e "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#B392F0"}},"checkNotNull"),p("span",{style:{color:"#E1E4E8"}},"(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> newNode "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},">(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (h "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," newNode;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 单向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            t."),p("span",{style:{color:"#B392F0"}},"lazySetNext"),p("span",{style:{color:"#E1E4E8"}},"(newNode);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," newNode;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (h "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},">("),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    head "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    tail "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"ConcurrentLinkedQueue"),p("span",{style:{color:"#24292E"}},"(Collection"),p("span",{style:{color:"#D73A49"}},"<?"),p("span",{style:{color:"#24292E"}}," extends E"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 遍历节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (E e "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," c) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6F42C1"}},"checkNotNull"),p("span",{style:{color:"#24292E"}},"(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> newNode "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},">(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (h "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," newNode;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 单向链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            t."),p("span",{style:{color:"#6F42C1"}},"lazySetNext"),p("span",{style:{color:"#24292E"}},"(newNode);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," newNode;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (h "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},">("),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    head "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    tail "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),Il=p("hr",null,null,-1),Sl={id:"入队方法",tabindex:"-1"},wl=p("p",null,"与传统的链表不同，单线程入队的工作流程：",-1),jl=p("ul",null,[p("li",null,"将入队节点设置成当前队列尾节点的下一个节点"),p("li",null,[t("更新 tail 节点，如果 tail 节点的 next 节点不为空，则将入队节点设置成 tail 节点；如果 tail 节点的 next 节点为空，则将入队节点设置成 tail 的 next 节点，所以 tail 节点不总是尾节点，"),p("strong",null,"存在滞后性")])],-1),Ml=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"offer"),p("span",{style:{color:"#E1E4E8"}},"(E e) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#B392F0"}},"checkNotNull"),p("span",{style:{color:"#E1E4E8"}},"(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 创建入队节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> newNode "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"new"),p("span",{style:{color:"#E1E4E8"}}," Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},">(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 循环 CAS 直到入队成功")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tail, p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," t;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// p 用来表示队列的尾节点，初始情况下等于 tail 节点，q 是 p 的 next 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明 p 是尾节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (q "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// p 是尾节点，设置 p 节点的下一个节点为新节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 设置成功则 casNext 返回 true，否则返回 false，说明有其他线程更新过尾节点，继续寻找尾节点，继续 CAS")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p."),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"("),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},", newNode)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 首次添加时，p 等于 t，不进行尾节点更新，所以尾节点存在滞后性")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," t)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 将 tail 设置成新入队的节点，设置失败表示其他线程更新了 tail 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#B392F0"}},"casTail"),p("span",{style:{color:"#E1E4E8"}},"(t, newNode); ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," q)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当 tail 不指向最后节点时，如果执行出列操作，可能将 tail 也移除，tail 不在链表中 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        \t"),p("span",{style:{color:"#6A737D"}},"// 此时需要对 tail 节点进行复位，复位到 head 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (t "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," (t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tail)) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 推动 tail 尾节点往队尾移动")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," (t "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," tail)) "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," t "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," q;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"offer"),p("span",{style:{color:"#24292E"}},"(E e) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6F42C1"}},"checkNotNull"),p("span",{style:{color:"#24292E"}},"(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 创建入队节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> newNode "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"new"),p("span",{style:{color:"#24292E"}}," Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},">(e);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 循环 CAS 直到入队成功")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tail, p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," t;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// p 用来表示队列的尾节点，初始情况下等于 tail 节点，q 是 p 的 next 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.next;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 条件成立说明 p 是尾节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (q "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// p 是尾节点，设置 p 节点的下一个节点为新节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 设置成功则 casNext 返回 true，否则返回 false，说明有其他线程更新过尾节点，继续寻找尾节点，继续 CAS")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p."),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"("),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},", newNode)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 首次添加时，p 等于 t，不进行尾节点更新，所以尾节点存在滞后性")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," t)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6A737D"}},"// 将 tail 设置成新入队的节点，设置失败表示其他线程更新了 tail 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6F42C1"}},"casTail"),p("span",{style:{color:"#24292E"}},"(t, newNode); ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," q)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 当 tail 不指向最后节点时，如果执行出列操作，可能将 tail 也移除，tail 不在链表中 ")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        \t"),p("span",{style:{color:"#6A737D"}},"// 此时需要对 tail 节点进行复位，复位到 head 节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (t "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," (t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tail)) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," head;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 推动 tail 尾节点往队尾移动")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," (t "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," tail)) "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," t "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," q;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),_l=p("p",null,"图解入队：",-1),Hl=p("figure",null,[p("img",{alt:"image-20230824175705470",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175705470.png"})],-1),Ll=p("figure",null,[p("img",{alt:"image-20230824175745374",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175745374.png"})],-1),zl=p("figure",null,[p("img",{alt:"image-20230824175937960",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824175937960.png"})],-1),Rl=p("p",null,[t("当 tail 节点和尾节点的距离"),p("strong",null,"大于等于 1"),t(" 时（每入队两次）更新 tail，可以减少 CAS 更新 tail 节点的次数，提高入队效率")],-1),Pl=p("p",null,"线程安全问题：",-1),Ol=p("ul",null,[p("li",null,"线程 1 线程 2 同时入队，无论从哪个位置开始并发入队，都可以循环 CAS，直到入队成功，线程安全"),p("li",null,"线程 1 遍历，线程 2 入队，所以造成 ConcurrentLinkedQueue 的 size 是变化，需要加锁保证安全"),p("li",null,"线程 1 线程 2 同时出列，线程也是安全的")],-1),Ul=p("hr",null,null,-1),ql={id:"出队方法",tabindex:"-1"},Zl=p("p",null,"出队列的就是从队列里返回一个节点元素，并清空该节点对元素的引用，并不是每次出队都更新 head 节点",-1),Yl=p("ul",null,[p("li",null,"当 head 节点里有元素时，直接弹出 head 节点里的元素，而不会更新 head 节点"),p("li",null,"当 head 节点里没有元素时，出队操作才会更新 head 节点")],-1),Xl=p("p",null,[p("strong",null,"批处理方式"),t("可以减少使用 CAS 更新 head 节点的消耗，从而提高出队效率")],-1),Wl=p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," E "),p("span",{style:{color:"#B392F0"}},"poll"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    restartFromHead"),p("span",{style:{color:"#F97583"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// p 节点表示首节点，即需要出队的节点，FIFO")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," head, p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h, q;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            E item "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 如果 p 节点的元素不为 null，则通过 CAS 来设置 p 节点引用元素为 null，成功返回 item")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (item "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," p."),p("span",{style:{color:"#B392F0"}},"casItem"),p("span",{style:{color:"#E1E4E8"}},"(item, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," h)\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                   \t"),p("span",{style:{color:"#6A737D"}},"// 对 head 进行移动")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#B392F0"}},"updateHead"),p("span",{style:{color:"#E1E4E8"}},"(h, ((q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.next) "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#F97583"}},"?"),p("span",{style:{color:"#E1E4E8"}}," q "),p("span",{style:{color:"#F97583"}},":"),p("span",{style:{color:"#E1E4E8"}}," p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"           \t"),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明头节点的元素为空或头节点发生了变化，头节点被另外一个线程修改了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 那么获取 p 节点的下一个节点，如果 p 节点的下一节点也为 null，则表明队列已经空了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ((q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.next) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#B392F0"}},"updateHead"),p("span",{style:{color:"#E1E4E8"}},"(h, p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"      \t\t"),p("span",{style:{color:"#6A737D"}},"// 第一轮操作失败，下一轮继续，调回到循环前")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," q)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}}," restartFromHead;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 如果下一个元素不为空，则将头节点的下一个节点设置成头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"final"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"void"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"updateHead"),p("span",{style:{color:"#E1E4E8"}},"(Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"E"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," h, Node"),p("span",{style:{color:"#F97583"}},"<"),p("span",{style:{color:"#E1E4E8"}},"E"),p("span",{style:{color:"#F97583"}},">"),p("span",{style:{color:"#E1E4E8"}}," p) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (h "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," p "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"casHead"),p("span",{style:{color:"#E1E4E8"}},"(h, p))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#6A737D"}},"// 将旧结点 h 的 next 域指向为 h，help gc")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        h."),p("span",{style:{color:"#B392F0"}},"lazySetNext"),p("span",{style:{color:"#E1E4E8"}},"(h);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," E "),p("span",{style:{color:"#6F42C1"}},"poll"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    restartFromHead"),p("span",{style:{color:"#D73A49"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// p 节点表示首节点，即需要出队的节点，FIFO")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," head, p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h, q;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            E item "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"\t\t\t"),p("span",{style:{color:"#6A737D"}},"// 如果 p 节点的元素不为 null，则通过 CAS 来设置 p 节点引用元素为 null，成功返回 item")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (item "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," p."),p("span",{style:{color:"#6F42C1"}},"casItem"),p("span",{style:{color:"#24292E"}},"(item, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," h)\t")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                   \t"),p("span",{style:{color:"#6A737D"}},"// 对 head 进行移动")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#6F42C1"}},"updateHead"),p("span",{style:{color:"#24292E"}},"(h, ((q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.next) "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#D73A49"}},"?"),p("span",{style:{color:"#24292E"}}," q "),p("span",{style:{color:"#D73A49"}},":"),p("span",{style:{color:"#24292E"}}," p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"           \t"),p("span",{style:{color:"#6A737D"}},"// 逻辑到这说明头节点的元素为空或头节点发生了变化，头节点被另外一个线程修改了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 那么获取 p 节点的下一个节点，如果 p 节点的下一节点也为 null，则表明队列已经空了")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ((q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.next) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6F42C1"}},"updateHead"),p("span",{style:{color:"#24292E"}},"(h, p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"      \t\t"),p("span",{style:{color:"#6A737D"}},"// 第一轮操作失败，下一轮继续，调回到循环前")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," q)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}}," restartFromHead;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 如果下一个元素不为空，则将头节点的下一个节点设置成头节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"final"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"void"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"updateHead"),p("span",{style:{color:"#24292E"}},"(Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"E"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," h, Node"),p("span",{style:{color:"#D73A49"}},"<"),p("span",{style:{color:"#24292E"}},"E"),p("span",{style:{color:"#D73A49"}},">"),p("span",{style:{color:"#24292E"}}," p) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (h "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," p "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"casHead"),p("span",{style:{color:"#24292E"}},"(h, p))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#6A737D"}},"// 将旧结点 h 的 next 域指向为 h，help gc")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        h."),p("span",{style:{color:"#6F42C1"}},"lazySetNext"),p("span",{style:{color:"#24292E"}},"(h);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})],-1),Jl=p("p",null,"在更新完 head 之后，会将旧的头结点 h 的 next 域指向为 h，图中所示的虚线也就表示这个节点的自引用，被移动的节点（item 为 null 的节点）会被 GC 回收",-1),$l=p("figure",null,[p("img",{alt:"image-20230824180023394",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824180023394.png"})],-1),Gl=p("figure",null,[p("img",{alt:"image-20230824180101118",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824180101118.png"})],-1),Ql=p("figure",null,[p("img",{alt:"image-20230824180122859",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824180122859.png"})],-1),so=p("p",null,"如果这时，有一个线程来添加元素，通过 tail 获取的 next 节点则仍然是它本身，这就出现了p == q 的情况，出现该种情况之后，则会触发执行 head 的更新，将 p 节点重新指向为 head",-1),lo=p("hr",null,null,-1),oo={id:"成员方法-2",tabindex:"-1"},no=p("ul",null,[p("li",null,[p("p",null,"peek()：会改变 head 指向，执行 peek() 方法后 head 会指向第一个具有非空元素的节点"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 获取链表的首部元素，只读取而不移除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," E "),p("span",{style:{color:"#B392F0"}},"peek"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    restartFromHead"),p("span",{style:{color:"#F97583"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> h "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," head, p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," h, q;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            E item "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (item "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"||"),p("span",{style:{color:"#E1E4E8"}}," (q "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.next) "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 更改h的位置为非空元素节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#B392F0"}},"updateHead"),p("span",{style:{color:"#E1E4E8"}},"(h, p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," q)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}}," restartFromHead;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," q;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#6A737D"}},"// 获取链表的首部元素，只读取而不移除")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," E "),p("span",{style:{color:"#6F42C1"}},"peek"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    restartFromHead"),p("span",{style:{color:"#D73A49"}},":")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> h "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," head, p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," h, q;;) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            E item "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (item "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"||"),p("span",{style:{color:"#24292E"}}," (q "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.next) "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 更改h的位置为非空元素节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6F42C1"}},"updateHead"),p("span",{style:{color:"#24292E"}},"(h, p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," q)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}}," restartFromHead;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"else")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," q;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"size()：用来获取当前队列的元素个数，因为整个过程都没有加锁，在并发环境中从调用 size 方法到返回结果期间有可能增删元素，导致统计的元素个数不精确"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"size"),p("span",{style:{color:"#E1E4E8"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"int"),p("span",{style:{color:"#E1E4E8"}}," count "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"0"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// first() 获取第一个具有非空元素的节点，若不存在，返回 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// succ(p) 方法获取 p 的后继节点，若 p == p.next，则返回 head")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 类似遍历链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"first"),p("span",{style:{color:"#E1E4E8"}},"(); p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"; p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"succ"),p("span",{style:{color:"#E1E4E8"}},"(p))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (p.item "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 最大返回Integer.MAX_VALUE")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"++"),p("span",{style:{color:"#E1E4E8"}},"count "),p("span",{style:{color:"#F97583"}},"=="),p("span",{style:{color:"#E1E4E8"}}," Integer.MAX_VALUE)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"break"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," count;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"size"),p("span",{style:{color:"#24292E"}},"() {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"int"),p("span",{style:{color:"#24292E"}}," count "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"0"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// first() 获取第一个具有非空元素的节点，若不存在，返回 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// succ(p) 方法获取 p 的后继节点，若 p == p.next，则返回 head")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 类似遍历链表")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"first"),p("span",{style:{color:"#24292E"}},"(); p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"; p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"succ"),p("span",{style:{color:"#24292E"}},"(p))")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (p.item "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},")")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 最大返回Integer.MAX_VALUE")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"++"),p("span",{style:{color:"#24292E"}},"count "),p("span",{style:{color:"#D73A49"}},"=="),p("span",{style:{color:"#24292E"}}," Integer.MAX_VALUE)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"break"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," count;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])]),p("li",null,[p("p",null,"remove()：移除元素"),p("div",{style:{"max-height":"300px"},class:"language-java"},[p("button",{title:"Copy Code",class:"copy"}),p("span",{class:"lang"},"java"),p("pre",{class:"shiki github-dark vp-code-dark"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#F97583"}},"public"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"remove"),p("span",{style:{color:"#E1E4E8"}},"(Object o) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#6A737D"}},"// 删除的元素不能为null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (o "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> next, pred "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        "),p("span",{style:{color:"#F97583"}},"for"),p("span",{style:{color:"#E1E4E8"}}," (Node<"),p("span",{style:{color:"#F97583"}},"E"),p("span",{style:{color:"#E1E4E8"}},"> p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"first"),p("span",{style:{color:"#E1E4E8"}},"(); p "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},"; pred "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p, p "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"boolean"),p("span",{style:{color:"#E1E4E8"}}," removed "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            E item "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p.item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 节点元素不为null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (item "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 若不匹配，则获取next节点继续匹配")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," ("),p("span",{style:{color:"#F97583"}},"!"),p("span",{style:{color:"#E1E4E8"}},"o."),p("span",{style:{color:"#B392F0"}},"equals"),p("span",{style:{color:"#E1E4E8"}},"(item)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"succ"),p("span",{style:{color:"#E1E4E8"}},"(p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                    "),p("span",{style:{color:"#F97583"}},"continue"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#6A737D"}},"// 若匹配，则通过 CAS 操作将对应节点元素置为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                removed "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," p."),p("span",{style:{color:"#B392F0"}},"casItem"),p("span",{style:{color:"#E1E4E8"}},"(item, "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 获取删除节点的后继节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            next "),p("span",{style:{color:"#F97583"}},"="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#B392F0"}},"succ"),p("span",{style:{color:"#E1E4E8"}},"(p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#6A737D"}},"// 将被删除的节点移除队列")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (pred "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#F97583"}},"&&"),p("span",{style:{color:"#E1E4E8"}}," next "),p("span",{style:{color:"#F97583"}},"!="),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"null"),p("span",{style:{color:"#E1E4E8"}},") "),p("span",{style:{color:"#6A737D"}},"// unlink")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                pred."),p("span",{style:{color:"#B392F0"}},"casNext"),p("span",{style:{color:"#E1E4E8"}},"(p, next);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"            "),p("span",{style:{color:"#F97583"}},"if"),p("span",{style:{color:"#E1E4E8"}}," (removed)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"                "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"true"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"    "),p("span",{style:{color:"#F97583"}},"return"),p("span",{style:{color:"#E1E4E8"}}," "),p("span",{style:{color:"#79B8FF"}},"false"),p("span",{style:{color:"#E1E4E8"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#E1E4E8"}},"}")])])]),p("pre",{class:"shiki github-light vp-code-light"},[p("code",null,[p("span",{class:"line"},[p("span",{style:{color:"#D73A49"}},"public"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"remove"),p("span",{style:{color:"#24292E"}},"(Object o) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#6A737D"}},"// 删除的元素不能为null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (o "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> next, pred "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        "),p("span",{style:{color:"#D73A49"}},"for"),p("span",{style:{color:"#24292E"}}," (Node<"),p("span",{style:{color:"#D73A49"}},"E"),p("span",{style:{color:"#24292E"}},"> p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"first"),p("span",{style:{color:"#24292E"}},"(); p "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},"; pred "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p, p "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," next) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"boolean"),p("span",{style:{color:"#24292E"}}," removed "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            E item "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p.item;")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 节点元素不为null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (item "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 若不匹配，则获取next节点继续匹配")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," ("),p("span",{style:{color:"#D73A49"}},"!"),p("span",{style:{color:"#24292E"}},"o."),p("span",{style:{color:"#6F42C1"}},"equals"),p("span",{style:{color:"#24292E"}},"(item)) {")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"succ"),p("span",{style:{color:"#24292E"}},"(p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                    "),p("span",{style:{color:"#D73A49"}},"continue"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#6A737D"}},"// 若匹配，则通过 CAS 操作将对应节点元素置为 null")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                removed "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," p."),p("span",{style:{color:"#6F42C1"}},"casItem"),p("span",{style:{color:"#24292E"}},"(item, "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},");")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 获取删除节点的后继节点")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            next "),p("span",{style:{color:"#D73A49"}},"="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#6F42C1"}},"succ"),p("span",{style:{color:"#24292E"}},"(p);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#6A737D"}},"// 将被删除的节点移除队列")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (pred "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#D73A49"}},"&&"),p("span",{style:{color:"#24292E"}}," next "),p("span",{style:{color:"#D73A49"}},"!="),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"null"),p("span",{style:{color:"#24292E"}},") "),p("span",{style:{color:"#6A737D"}},"// unlink")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                pred."),p("span",{style:{color:"#6F42C1"}},"casNext"),p("span",{style:{color:"#24292E"}},"(p, next);")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"            "),p("span",{style:{color:"#D73A49"}},"if"),p("span",{style:{color:"#24292E"}}," (removed)")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"                "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"true"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"        }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    }")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"    "),p("span",{style:{color:"#D73A49"}},"return"),p("span",{style:{color:"#24292E"}}," "),p("span",{style:{color:"#005CC5"}},"false"),p("span",{style:{color:"#24292E"}},";")]),t("\n"),p("span",{class:"line"},[p("span",{style:{color:"#24292E"}},"}")])])]),p("button",{class:"collapse"})])])],-1),ao=p("hr",null,null,-1);const eo=s(A,[["render",function(s,l,o,i,F,A){const eo=y,co=e;return c(),n(co,{frontmatter:F.frontmatter,data:F.data},{"main-content-md":a((()=>[p("h1",D,[t("并发编程整理版 "),r(eo,{class:"header-anchor",href:"#并发编程整理版","aria-label":'Permalink to "并发编程整理版"'},{default:a((()=>[t("​")])),_:1})]),p("p",null,[t("参考视频："),r(eo,{href:"https://www.bilibili.com/video/BV16J411h7Rd",target:"_blank",rel:"noreferrer"},{default:a((()=>[t("https://www.bilibili.com/video/BV16J411h7Rd")])),_:1})]),u,p("h2",d,[t("并发包 "),r(eo,{class:"header-anchor",href:"#并发包","aria-label":'Permalink to "并发包"'},{default:a((()=>[t("​")])),_:1})]),p("h3",h,[t("ConHashMap "),r(eo,{class:"header-anchor",href:"#conhashmap","aria-label":'Permalink to "ConHashMap"'},{default:a((()=>[t("​")])),_:1})]),p("h4",C,[t("并发集合 "),r(eo,{class:"header-anchor",href:"#并发集合","aria-label":'Permalink to "并发集合"'},{default:a((()=>[t("​")])),_:1})]),p("h5",b,[t("集合对比 "),r(eo,{class:"header-anchor",href:"#集合对比","aria-label":'Permalink to "集合对比"'},{default:a((()=>[t("​")])),_:1})]),f,g,v,k,B,x,m,V,T,p("h5",N,[t("并发死链 "),r(eo,{class:"header-anchor",href:"#并发死链","aria-label":'Permalink to "并发死链"'},{default:a((()=>[t("​")])),_:1})]),K,I,S,w,p("p",null,[t("B站视频解析："),r(eo,{href:"https://www.bilibili.com/video/BV1n541177Ea",target:"_blank",rel:"noreferrer"},{default:a((()=>[t("https://www.bilibili.com/video/BV1n541177Ea")])),_:1})]),j,p("h4",M,[t("成员属性 "),r(eo,{class:"header-anchor",href:"#成员属性","aria-label":'Permalink to "成员属性"'},{default:a((()=>[t("​")])),_:1})]),p("h5",_,[t("变量 "),r(eo,{class:"header-anchor",href:"#变量","aria-label":'Permalink to "变量"'},{default:a((()=>[t("​")])),_:1})]),H,L,p("h5",z,[t("内部类 "),r(eo,{class:"header-anchor",href:"#内部类","aria-label":'Permalink to "内部类"'},{default:a((()=>[t("​")])),_:1})]),R,P,p("h5",O,[t("代码块 "),r(eo,{class:"header-anchor",href:"#代码块","aria-label":'Permalink to "代码块"'},{default:a((()=>[t("​")])),_:1})]),U,q,p("h4",Z,[t("构造方法 "),r(eo,{class:"header-anchor",href:"#构造方法","aria-label":'Permalink to "构造方法"'},{default:a((()=>[t("​")])),_:1})]),Y,X,p("h4",W,[t("成员方法 "),r(eo,{class:"header-anchor",href:"#成员方法","aria-label":'Permalink to "成员方法"'},{default:a((()=>[t("​")])),_:1})]),p("h5",J,[t("数据访存 "),r(eo,{class:"header-anchor",href:"#数据访存","aria-label":'Permalink to "数据访存"'},{default:a((()=>[t("​")])),_:1})]),$,G,p("h5",Q,[t("添加方法 "),r(eo,{class:"header-anchor",href:"#添加方法","aria-label":'Permalink to "添加方法"'},{default:a((()=>[t("​")])),_:1})]),ss,ls,os,p("h5",ns,[t("扩容方法 "),r(eo,{class:"header-anchor",href:"#扩容方法","aria-label":'Permalink to "扩容方法"'},{default:a((()=>[t("​")])),_:1})]),as,es,cs,ps,ts,p("h5",rs,[t("获取方法 "),r(eo,{class:"header-anchor",href:"#获取方法","aria-label":'Permalink to "获取方法"'},{default:a((()=>[t("​")])),_:1})]),Es,ys,is,p("h5",Fs,[t("删除方法 "),r(eo,{class:"header-anchor",href:"#删除方法","aria-label":'Permalink to "删除方法"'},{default:a((()=>[t("​")])),_:1})]),As,p("p",null,[t("参考视频："),r(eo,{href:"https://space.bilibili.com/457326371/",target:"_blank",rel:"noreferrer"},{default:a((()=>[t("https://space.bilibili.com/457326371/")])),_:1})]),Ds,p("h4",us,[t("JDK7原理 "),r(eo,{class:"header-anchor",href:"#jdk7原理","aria-label":'Permalink to "JDK7原理"'},{default:a((()=>[t("​")])),_:1})]),ds,hs,Cs,bs,p("h3",fs,[t("CopyOnWrite "),r(eo,{class:"header-anchor",href:"#copyonwrite","aria-label":'Permalink to "CopyOnWrite"'},{default:a((()=>[t("​")])),_:1})]),p("h4",gs,[t("原理分析 "),r(eo,{class:"header-anchor",href:"#原理分析","aria-label":'Permalink to "原理分析"'},{default:a((()=>[t("​")])),_:1})]),vs,ks,Bs,xs,ms,p("h4",Vs,[t("弱一致性 "),r(eo,{class:"header-anchor",href:"#弱一致性","aria-label":'Permalink to "弱一致性"'},{default:a((()=>[t("​")])),_:1})]),Ts,Ns,Ks,Is,Ss,ws,js,Ms,p("h4",_s,[t("安全失败 "),r(eo,{class:"header-anchor",href:"#安全失败","aria-label":'Permalink to "安全失败"'},{default:a((()=>[t("​")])),_:1})]),Hs,Ls,zs,p("h3",Rs,[t("Collections "),r(eo,{class:"header-anchor",href:"#collections","aria-label":'Permalink to "Collections"'},{default:a((()=>[t("​")])),_:1})]),Ps,Os,Us,qs,Zs,p("h3",Ys,[t("SkipListMap "),r(eo,{class:"header-anchor",href:"#skiplistmap","aria-label":'Permalink to "SkipListMap"'},{default:a((()=>[t("​")])),_:1})]),p("h4",Xs,[t("底层结构 "),r(eo,{class:"header-anchor",href:"#底层结构","aria-label":'Permalink to "底层结构"'},{default:a((()=>[t("​")])),_:1})]),Ws,Js,$s,Gs,Qs,sl,ll,ol,p("h4",nl,[t("成员变量 "),r(eo,{class:"header-anchor",href:"#成员变量","aria-label":'Permalink to "成员变量"'},{default:a((()=>[t("​")])),_:1})]),al,el,p("h4",cl,[t("成员方法 "),r(eo,{class:"header-anchor",href:"#成员方法-1","aria-label":'Permalink to "成员方法"'},{default:a((()=>[t("​")])),_:1})]),p("h5",pl,[t("其他方法 "),r(eo,{class:"header-anchor",href:"#其他方法","aria-label":'Permalink to "其他方法"'},{default:a((()=>[t("​")])),_:1})]),tl,rl,p("h5",El,[t("添加方法 "),r(eo,{class:"header-anchor",href:"#添加方法-1","aria-label":'Permalink to "添加方法"'},{default:a((()=>[t("​")])),_:1})]),yl,il,p("h5",Fl,[t("获取方法 "),r(eo,{class:"header-anchor",href:"#获取方法-1","aria-label":'Permalink to "获取方法"'},{default:a((()=>[t("​")])),_:1})]),Al,Dl,p("h5",ul,[t("删除方法 "),r(eo,{class:"header-anchor",href:"#删除方法-1","aria-label":'Permalink to "删除方法"'},{default:a((()=>[t("​")])),_:1})]),dl,p("p",null,[t("参考文章："),r(eo,{href:"https://my.oschina.net/u/3768341/blog/3135659",target:"_blank",rel:"noreferrer"},{default:a((()=>[t("https://my.oschina.net/u/3768341/blog/3135659")])),_:1})]),p("p",null,[t("参考视频："),r(eo,{href:"https://www.bilibili.com/video/BV1Er4y1P7k1",target:"_blank",rel:"noreferrer"},{default:a((()=>[t("https://www.bilibili.com/video/BV1Er4y1P7k1")])),_:1})]),hl,p("h3",Cl,[t("NoBlocking "),r(eo,{class:"header-anchor",href:"#noblocking","aria-label":'Permalink to "NoBlocking"'},{default:a((()=>[t("​")])),_:1})]),p("h4",bl,[t("非阻塞队列 "),r(eo,{class:"header-anchor",href:"#非阻塞队列","aria-label":'Permalink to "非阻塞队列"'},{default:a((()=>[t("​")])),_:1})]),fl,gl,vl,kl,Bl,xl,ml,Vl,Tl,p("h4",Nl,[t("构造方法 "),r(eo,{class:"header-anchor",href:"#构造方法-1","aria-label":'Permalink to "构造方法"'},{default:a((()=>[t("​")])),_:1})]),Kl,Il,p("h4",Sl,[t("入队方法 "),r(eo,{class:"header-anchor",href:"#入队方法","aria-label":'Permalink to "入队方法"'},{default:a((()=>[t("​")])),_:1})]),wl,jl,Ml,_l,Hl,Ll,zl,Rl,Pl,Ol,Ul,p("h4",ql,[t("出队方法 "),r(eo,{class:"header-anchor",href:"#出队方法","aria-label":'Permalink to "出队方法"'},{default:a((()=>[t("​")])),_:1})]),Zl,Yl,Xl,Wl,Jl,$l,Gl,Ql,so,p("p",null,[t("参考文章："),r(eo,{href:"https://www.jianshu.com/p/231caf90f30b",target:"_blank",rel:"noreferrer"},{default:a((()=>[t("https://www.jianshu.com/p/231caf90f30b")])),_:1})]),lo,p("h4",oo,[t("成员方法 "),r(eo,{class:"header-anchor",href:"#成员方法-2","aria-label":'Permalink to "成员方法"'},{default:a((()=>[t("​")])),_:1})]),no,ao])),"main-header":a((()=>[E(s.$slots,"main-header")])),"main-header-after":a((()=>[E(s.$slots,"main-header-after")])),"main-nav":a((()=>[E(s.$slots,"main-nav")])),"main-content":a((()=>[E(s.$slots,"main-content")])),"main-content-after":a((()=>[E(s.$slots,"main-content-after")])),"main-nav-before":a((()=>[E(s.$slots,"main-nav-before")])),"main-nav-after":a((()=>[E(s.$slots,"main-nav-after")])),comment:a((()=>[E(s.$slots,"comment")])),footer:a((()=>[E(s.$slots,"footer")])),aside:a((()=>[E(s.$slots,"aside")])),"aside-custom":a((()=>[E(s.$slots,"aside-custom")])),default:a((()=>[E(s.$slots,"default")])),_:3},8,["frontmatter","data"])}]]);export{i as __pageData,eo as default};
