import{_ as l,h as s,p as n,j as o,k as a,l as e,m as t,s as c,t as r,v as i,q as p,x as y}from"../../assets/app-56b13812.js";import"../@vueuse/@vueuse.2d040ebb.js";import"../animejs/animejs.7aacf446.js";const E=JSON.parse('{"title":"Java面试专题-基础篇","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-g8oee3_1920x1080.png","title":"Java面试专题-基础篇","date":"2023-04-18T14:52:05.000Z","categories":"Java","tags":["ArrayList","LinkedList","HashMap","Hashtable","Singleton"],"top":121,"outline":"deep"},"headers":[{"level":2,"title":"1. ArrayList","slug":"_1-arraylist","link":"#_1-arraylist","children":[{"level":3,"title":"补充","slug":"补充","link":"#补充","children":[]}]},{"level":2,"title":"2. Iterator","slug":"_2-iterator","link":"#_2-iterator","children":[]},{"level":2,"title":"3. LinkedList VS ArrayList","slug":"_3-linkedlist-vs-arraylist","link":"#_3-linkedlist-vs-arraylist","children":[]},{"level":2,"title":"4. HashMap","slug":"_4-hashmap","link":"#_4-hashmap","children":[{"level":3,"title":"1）基本数据结构","slug":"_1-基本数据结构","link":"#_1-基本数据结构","children":[]},{"level":3,"title":"2）树化与退化","slug":"_2-树化与退化","link":"#_2-树化与退化","children":[]},{"level":3,"title":"3）索引计算","slug":"_3-索引计算","link":"#_3-索引计算","children":[]},{"level":3,"title":"4）put 与扩容","slug":"_4-put-与扩容","link":"#_4-put-与扩容","children":[]},{"level":3,"title":"5）并发问题","slug":"_5-并发问题","link":"#_5-并发问题","children":[]},{"level":3,"title":"6）key 的设计","slug":"_6-key-的设计","link":"#_6-key-的设计","children":[]}]},{"level":2,"title":"4.1. HashMap-快速查找","slug":"_4-1-hashmap-快速查找","link":"#_4-1-hashmap-快速查找","children":[]},{"level":2,"title":"4.2. HashMap-链表过长的解决方案","slug":"_4-2-hashmap-链表过长的解决方案","link":"#_4-2-hashmap-链表过长的解决方案","children":[{"level":3,"title":"4.2.1.扩容","slug":"_4-2-1-扩容","link":"#_4-2-1-扩容","children":[]},{"level":3,"title":"4.2.2. 树化","slug":"_4-2-2-树化","link":"#_4-2-2-树化","children":[]}]},{"level":2,"title":"5. 单例模式","slug":"_5-单例模式","link":"#_5-单例模式","children":[{"level":3,"title":"饿汉式","slug":"饿汉式","link":"#饿汉式","children":[]},{"level":3,"title":"枚举饿汉式","slug":"枚举饿汉式","link":"#枚举饿汉式","children":[]},{"level":3,"title":"懒汉式","slug":"懒汉式","link":"#懒汉式","children":[]},{"level":3,"title":"双检锁懒汉式","slug":"双检锁懒汉式","link":"#双检锁懒汉式","children":[]},{"level":3,"title":"内部类懒汉式","slug":"内部类懒汉式","link":"#内部类懒汉式","children":[]},{"level":3,"title":"JDK 中单例的体现","slug":"jdk-中单例的体现","link":"#jdk-中单例的体现","children":[]}]}],"relativePath":"pages/posts/Java Interview Topics - Basic.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Java Interview Topics - Basic.md","lastUpdated":null}'),u=JSON.parse('{"title":"Java面试专题-基础篇","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-g8oee3_1920x1080.png","title":"Java面试专题-基础篇","date":"2023-04-18T14:52:05.000Z","categories":"Java","tags":["ArrayList","LinkedList","HashMap","Hashtable","Singleton"],"top":121,"outline":"deep"},"headers":[{"level":2,"title":"1. ArrayList","slug":"_1-arraylist","link":"#_1-arraylist","children":[{"level":3,"title":"补充","slug":"补充","link":"#补充","children":[]}]},{"level":2,"title":"2. Iterator","slug":"_2-iterator","link":"#_2-iterator","children":[]},{"level":2,"title":"3. LinkedList VS ArrayList","slug":"_3-linkedlist-vs-arraylist","link":"#_3-linkedlist-vs-arraylist","children":[]},{"level":2,"title":"4. HashMap","slug":"_4-hashmap","link":"#_4-hashmap","children":[{"level":3,"title":"1）基本数据结构","slug":"_1-基本数据结构","link":"#_1-基本数据结构","children":[]},{"level":3,"title":"2）树化与退化","slug":"_2-树化与退化","link":"#_2-树化与退化","children":[]},{"level":3,"title":"3）索引计算","slug":"_3-索引计算","link":"#_3-索引计算","children":[]},{"level":3,"title":"4）put 与扩容","slug":"_4-put-与扩容","link":"#_4-put-与扩容","children":[]},{"level":3,"title":"5）并发问题","slug":"_5-并发问题","link":"#_5-并发问题","children":[]},{"level":3,"title":"6）key 的设计","slug":"_6-key-的设计","link":"#_6-key-的设计","children":[]}]},{"level":2,"title":"4.1. HashMap-快速查找","slug":"_4-1-hashmap-快速查找","link":"#_4-1-hashmap-快速查找","children":[]},{"level":2,"title":"4.2. HashMap-链表过长的解决方案","slug":"_4-2-hashmap-链表过长的解决方案","link":"#_4-2-hashmap-链表过长的解决方案","children":[{"level":3,"title":"4.2.1.扩容","slug":"_4-2-1-扩容","link":"#_4-2-1-扩容","children":[]},{"level":3,"title":"4.2.2. 树化","slug":"_4-2-2-树化","link":"#_4-2-2-树化","children":[]}]},{"level":2,"title":"5. 单例模式","slug":"_5-单例模式","link":"#_5-单例模式","children":[{"level":3,"title":"饿汉式","slug":"饿汉式","link":"#饿汉式","children":[]},{"level":3,"title":"枚举饿汉式","slug":"枚举饿汉式","link":"#枚举饿汉式","children":[]},{"level":3,"title":"懒汉式","slug":"懒汉式","link":"#懒汉式","children":[]},{"level":3,"title":"双检锁懒汉式","slug":"双检锁懒汉式","link":"#双检锁懒汉式","children":[]},{"level":3,"title":"内部类懒汉式","slug":"内部类懒汉式","link":"#内部类懒汉式","children":[]},{"level":3,"title":"JDK 中单例的体现","slug":"jdk-中单例的体现","link":"#jdk-中单例的体现","children":[]}]}],"relativePath":"pages/posts/Java Interview Topics - Basic.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Java Interview Topics - Basic.md","lastUpdated":null}'),g={name:"pages/posts/Java Interview Topics - Basic.md",data:()=>({data:u,frontmatter:u.frontmatter,$frontmatter:u.frontmatter}),setup(){const l=s();l.meta.frontmatter=Object.assign(l.meta.frontmatter,u.frontmatter),n("pageData",u)}},d={id:"基础篇",tabindex:"-1"},m={id:"_1-arraylist",tabindex:"-1"},h=c("p",null,[c("strong",null,"要求")],-1),F=c("ul",null,[c("li",null,"掌握 ArrayList 扩容规则")],-1),b=c("p",null,[c("strong",null,"扩容规则")],-1),f=c("ol",null,[c("li",null,[c("strong",null,"ArrayList()"),r(" 会使用"),c("strong",null,"长度为零"),r("的数组")])],-1),S=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418114304421.png",alt:"image-20230418114304421",loading:"lazy",decoding:"async"})],-1),A=c("ol",{start:"2"},[c("li",null,[c("strong",null,"ArrayList(int initialCapacity)"),r(" 会使用"),c("strong",null,"指定容量"),r("的数组")])],-1),C=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418114403174.png",alt:"image-20230418114403174",loading:"lazy",decoding:"async"})],-1),v=c("ol",{start:"3"},[c("li",null,"public ArrayList(Collection<? extends E> c) 会使用 c 的大小作为数组容量")],-1),D=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418114502997.png",alt:"image-20230418114502997",loading:"lazy",decoding:"async"})],-1),L=c("ol",{start:"4"},[c("li",null,"add(Object o) 首次扩容为 10，再次扩容为上次容量的 1.5 倍")],-1),j=c("ul",null,[c("li",null,"第一次添加数组，数组为0，发生第一次扩容"),c("li",null,"第一个元素放入新数组索引0，新数组替换旧数组(首次为0)")],-1),k=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418115017704.png",alt:"image-20230418115017704",loading:"lazy",decoding:"async"})],-1),_=c("ul",null,[c("li",null,"再次扩容为上次容量的 1.5 倍，完成扩容并添加元素，新数组替换旧数组，旧数组没人引用就会被垃圾回收")],-1),z=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418115545132.png",alt:"image-20230418115545132",loading:"lazy",decoding:"async"})],-1),B=c("ul",null,[c("li",null,"以后扩容按上次容量+上次容量右移1位")],-1),K=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418115811928.png",alt:"image-20230418115811928",loading:"lazy",decoding:"async"})],-1),N=c("ul",null,[c("li",null,"此方式为调用的add方法得到的扩容结果")],-1),M=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418120314176.png",alt:"image-20230418120314176",loading:"lazy",decoding:"async"})],-1),x=c("ol",{start:"5"},[c("li",null,"addAll(Collection c) 没有元素时，扩容为 Math.max(10, 实际元素个数)，有元素时为 Math.max(原容量 1.5 倍, 实际元素个数)")],-1),I=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418120611741.png",alt:"image-20230418120611741",loading:"lazy",decoding:"async"})],-1),T=c("ul",null,[c("li",null,"第一次空数组扩容(元素个数<10)")],-1),H=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418120727097.png",alt:"image-20230418120727097",loading:"lazy",decoding:"async"})],-1),w=c("ul",null,[c("li",null,"第一次空数组扩容(10<元素个数<15，此时会拿当前元素个数与当前容量下次扩容的容量二者之间的较大值作为当前容量)")],-1),O=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418121100137.png",alt:"image-20230418121100137",loading:"lazy",decoding:"async"})],-1),J=c("ul",null,[c("li",null,"第一次非空数组扩容(规则一样)")],-1),U=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418121501578.png",alt:"image-20230418121501578",loading:"lazy",decoding:"async"})],-1),V=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418121608015.png",alt:"image-20230418121608015",loading:"lazy",decoding:"async"})],-1),q=c("p",null,"其中第 4 点必须知道，其它几点视个人情况而定",-1),R=c("p",null,[c("strong",null,"提示")],-1),$=c("ul",null,[c("li",null,[r("测试代码见 "),c("code",null,"day01.list.TestArrayList"),r(" ，这里不再列出")]),c("li",null,[r("要"),c("strong",null,"注意"),r("的是，示例中用反射方式来更直观地反映 ArrayList 的扩容特征，但从 JDK 9 由于模块化的影响，对反射做了较多限制，需要在运行测试代码时添加 VM 参数 "),c("code",null,"--add-opens java.base/java.util=ALL-UNNAMED"),r(" 方能运行通过，后面的例子都有相同问题")])],-1),P=c("blockquote",null,[c("p",null,[c("em",null,[c("strong",null,"代码说明")])]),c("ul",null,[c("li",null,"day01.list.TestArrayList#arrayListGrowRule 演示了 add(Object) 方法的扩容规则，输入参数 n 代表打印多少次扩容后的数组长度")])],-1),G={id:"补充",tabindex:"-1"},W=c("blockquote",null,[c("p",null,[c("strong",null,"addAll扩容机制"),r("：添加元素后的元素个数与下一次扩容数作比较 0->10:3个->10,11->11;10->15:13->15,16->16")])],-1),Z={id:"_2-iterator",tabindex:"-1"},Q=c("p",null,[c("strong",null,"要求")],-1),X=c("ul",null,[c("li",null,"掌握什么是 Fail-Fast、什么是 Fail-Safe")],-1),Y=c("p",null,"Fail-Fast 与 Fail-Safe",-1),ll=c("ul",null,[c("li",null,"ArrayList 是 fail-fast 的典型代表，遍历的同时不能修改，尽快失败"),c("li",null,"fail-fast 一旦发现遍历的同时其它人来修改，则立刻抛异常")],-1),sl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418133457466.png",alt:"image-20230418133457466",loading:"lazy",decoding:"async"})],-1),nl=c("ul",null,[c("li",null,"fail-fast实现原理")],-1),ol=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418135557765.png",alt:"image-20230418135557765",loading:"lazy",decoding:"async"})],-1),al=c("ul",null,[c("li",null,"CopyOnWriteArrayList 是 fail-safe 的典型代表，遍历的同时可以修改，原理是读写分离"),c("li",null,"fail-safe 发现遍历的同时其它人来修改，应当能有应对策略，例如牺牲一致性来让整个遍历运行完成")],-1),el=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418133702722.png",alt:"image-20230418133702722",loading:"lazy",decoding:"async"})],-1),tl=c("ul",null,[c("li",null,"fail-safe实现原理")],-1),cl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418142258054.png",alt:"image-20230418142258054",loading:"lazy",decoding:"async"})],-1),rl=c("p",null,[c("strong",null,"提示")],-1),il=c("ul",null,[c("li",null,[c("p",null,[r("测试代码见 "),c("code",null,"day01.list.FailFastVsFailSafe"),r("，这里不再列出")])]),c("li",null,[c("p",null,"第一次笔记："),c("ul",null,[c("li",null,[c("p",null,[c("strong",null,"fail-fast:")]),c("ul",null,[c("li",null,[c("p",null,"​ 1.调用迭代器Iterator构造方法并初始化成员变量")]),c("li",null,[c("p",null,"​ 2.检查：expectedModCount(迭代一开始记录的修改次数)与modCount(外面list的修改次数)做对比，不等则抛异常")])])]),c("li",null,[c("p",null,[c("strong",null,"fail-safe:")]),c("ul",null,[c("li",null,"​ list.add中每次调用add方法时都会把旧的数组拷贝一份，并让长度加一，把新加的元素放到扩容数组(新数组)最后一个位置，即添加和遍历的数组不同，互不干扰")])])])]),c("li",null,[c("p",null,"第二次笔记："),c("ul",null,[c("li",null,[c("p",null,[c("strong",null,"failfast"),r("：")]),c("ul",null,[c("li",null,"增强for循环开始前的修改次数（crud）modCount"),c("li",null,"expectedModCount初始值=modCount"),c("li",null,"每次遍历元素前（迭代）都检查以上的值是否相等，在遍历期间并发修改了，等遍历下个元素时就会抛出异常")])]),c("li",null,[c("p",null,[c("strong",null,"failsafe"),r("：")]),c("ul",null,[c("li",null,"iterator遍历集合，list.add方法每次添加元素，都会拷贝一份原集合并让容量加一，在并发修改时迭代器是不知道，遍历的还是原集合，即添加是一个集合，遍历是另一个集合")])])])])],-1),pl={id:"_3-linkedlist-vs-arraylist",tabindex:"-1"},yl=c("strong",null,"ArrayList",-1),El=c("p",null,[c("strong",null,"要求")],-1),ul=c("ul",null,[c("li",null,"能够说清楚 LinkedList 对比 ArrayList 的区别，并重视纠正部分错误的认知")],-1),gl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418144031416.png",alt:"image-20230418144031416",loading:"lazy",decoding:"async"})],-1),dl=c("ul",null,[c("li",null,"两者查询元素内容的时间复杂度都是O(n)，都不太适合用来查询，查询可以选择更高效的数据结构，如HashMap、TreeMap等")],-1),ml=c("p",null,[c("strong",null,"LinkedList")],-1),hl=c("ol",null,[c("li",null,"基于双向链表，无需连续内存")],-1),Fl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418143629513.png",alt:"image-20230418143629513",loading:"lazy",decoding:"async"})],-1),bl=c("ol",null,[c("li",null,"随机访问慢（要沿着链表遍历）")],-1),fl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418143509162.png",alt:"image-20230418143509162",loading:"lazy",decoding:"async"})],-1),Sl=c("ol",null,[c("li",null,"头尾插入删除性能高"),c("li",null,"占用内存多")],-1),Al=c("p",null,[c("strong",null,"ArrayList")],-1),Cl=c("ol",null,[c("li",null,"基于数组，需要连续内存")],-1),vl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418143617488.png",alt:"image-20230418143617488",loading:"lazy",decoding:"async"})],-1),Dl=c("ol",null,[c("li",null,"随机访问快（指根据下标访问）")],-1),Ll=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418143527810.png",alt:"image-20230418143527810",loading:"lazy",decoding:"async"})],-1),jl=c("ol",null,[c("li",null,"尾部插入、删除性能可以，其它部分插入、删除都会移动数据，因此性能会低")],-1),kl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418144640481.png",alt:"image-20230418144640481",loading:"lazy",decoding:"async"})],-1),_l=c("ol",null,[c("li",null,"可以利用 cpu 缓存，局部性原理（将读取变量和其相邻的变量也一次读到CPU缓存中）")],-1),zl=c("blockquote",null,[c("p",null,[c("em",null,[c("strong",null,"代码说明")])]),c("ul",null,[c("li",null,"day01.list.ArrayListVsLinkedList#randomAccess 对比随机访问性能")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418143722912.png",alt:"image-20230418143722912",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"day01.list.ArrayListVsLinkedList#addMiddle 对比向中间插入性能"),c("li",null,"day01.list.ArrayListVsLinkedList#addFirst 对比头部插入性能"),c("li",null,"day01.list.ArrayListVsLinkedList#addLast 对比尾部插入性能")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418145338167.png",alt:"image-20230418145338167",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"day01.list.ArrayListVsLinkedList#linkedListSize 打印一个 LinkedList 占用内存"),c("li",null,"day01.list.ArrayListVsLinkedList#arrayListSize 打印一个 ArrayList 占用内存")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418153454935.png",alt:"image-20230418153454935",loading:"lazy",decoding:"async"})]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418150308326.png",alt:"image-20230418150308326",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,[c("p",null,"CPU进行计算的数据还是来自内存中的，比如进行加法运算，首先将内存中a的变量的读取到CPU的寄存器中，然后将b的值读到另一个寄存器中，数据都有了就进行接下来的加法运算，计算后的结果也会写到内存中的c变量，这样就完成了一次加法运算的计算过程，在这个计算过程里瓶颈在于内存变量的读和写上，因为内存的读写效率是非常低的，读一次、写一次大约需要花几百纳秒，对于CPU来讲这个时间是非常漫长的，CPU执行一次计算是少于纳秒级别的，也许花了不到1纳秒就完成了，但等待数据读进来写出去就要花费成百倍的时间，显然是不可接受的；")]),c("li",null,[c("p",null,"因此需要在CPU与内存之间加入CPU缓存，这个缓存的读写性能就比内存高很多了，CPU缓存又分为1级、2级、3级缓存，速度快的能达到10纳秒，速度慢的也能到达几十纳秒，对比内存的几百纳秒就快了很多")])]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418151824705.png",alt:"image-20230418151824705",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,[r("局部性原理 "),c("ul",null,[c("li",null,"往缓存中读数据时的一种规则，一种优化措施"),c("li",null,"将某个数据以及它相邻的数据都读取到缓存中，它会出于这样一种假设，当读取某个变量时，它相邻的变量也会有很大几率被访问到，即拿到某个元素后，有很大几率会遍历数组，即可以直接在缓存中遍历了，无需再到内存中遍历")])])]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418152143557.png",alt:"image-20230418152143557",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"链表的局部性原理就不可行，因为第一个元素与第二个元素相邻的有点远")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418152725657.png",alt:"image-20230418152725657",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"CPU缓存的空间也是有限的，如果将2和3也读到缓存，就会把之前的数据清空掉了，因此链表就不能很好的配合CPU缓存(局部性原理)来提升性能")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418152845212.png",alt:"image-20230418152845212",loading:"lazy",decoding:"async"})])],-1),Bl={id:"_4-hashmap",tabindex:"-1"},Kl=c("p",null,[c("strong",null,"要求")],-1),Nl=c("ul",null,[c("li",null,"掌握 HashMap 的基本数据结构"),c("li",null,"掌握树化"),c("li",null,"理解索引计算方法、二次 hash 的意义、容量对索引计算的影响"),c("li",null,"掌握 put 流程、扩容、扩容因子"),c("li",null,"理解并发使用 HashMap 可能导致的问题"),c("li",null,"理解 key 的设计")],-1),Ml={id:"_1-基本数据结构",tabindex:"-1"},xl=c("ul",null,[c("li",null,"1.7 数组 + 链表"),c("li",null,"1.8 数组 + （链表 | 红黑树）")],-1),Il=c("blockquote",null,[c("p",null,"更形象的演示，见资料中的 hash-demo.jar，运行需要 jdk14 以上环境，进入 jar 包目录，执行下面命令"),c("div",{class:"language-"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"}),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#e1e4e8"}},"java -jar --add-exports java.base/jdk.internal.misc=ALL-UNNAMED hash-demo.jar")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#24292e"}},"java -jar --add-exports java.base/jdk.internal.misc=ALL-UNNAMED hash-demo.jar")])])])])],-1),Tl={id:"_2-树化与退化",tabindex:"-1"},Hl=c("p",null,[c("strong",null,"树化意义")],-1),wl=c("ul",null,[c("li",null,"红黑树用来避免 DoS 攻击，防止链表超长时性能下降，树化应当是偶然情况，是保底策略"),c("li",null,[r("hash 表的查找，更新的时间复杂度是 O(1)"),c("em",null,"O"),r("(1)，而红黑树的查找，更新的时间复杂度是 O(log_2⁡n )"),c("em",null,"O"),r("("),c("em",null,[r("l"),c("strong",null,"o"),r("g")]),r("2⁡"),c("em",null,"n"),r(")，TreeNode 占用空间也比普通 Node 的大，如非必要，尽量还是使用链表")]),c("li",null,"hash 值如果足够随机，则在 hash 表内按泊松分布，在负载因子 0.75 的情况下，长度超过 8 的链表出现概率是 0.00000006，树化阈值选择 8 就是为了让树化几率足够小")],-1),Ol=c("p",null,[c("strong",null,"树化规则")],-1),Jl=c("ul",null,[c("li",null,"当链表长度超过树化阈值 8 时，先尝试扩容来减少链表长度，如果数组容量已经 >=64，才会进行树化")],-1),Ul=c("p",null,[c("strong",null,"退化规则")],-1),Vl=c("ul",null,[c("li",null,"情况1：在扩容时如果拆分树时，树元素个数 <= 6 则会退化链表"),c("li",null,"情况2：remove 树节点时，若 root、root.left、root.right、root.left.left 有一个为 null ，也会退化为链表")],-1),ql={id:"_3-索引计算",tabindex:"-1"},Rl=c("ul",null,[c("li",null,[c("p",null,"前置知识")]),c("li",null,[c("p",null,"1.与运算（&）"),c("p",null,"参加运算的两个数据，按二进制位进行“与”运算。"),c("p",null,"运算规则：0&0=0; 0&1=0; 1&0=0; 1&1=1;"),c("p",null,"即：两位同时为“1”，结果才为“1”，否则为0"),c("p",null,"例如：3&5 即 0000 0011 & 0000 0101 = 0000 0001 因此，3&5的值得1。"),c("p",null,"例如：9&5 即 0000 1001 (9的二进制补码)&00000101 (5的二进制补码) =00000001 (1的二进制补码)可见9&5=1。")]),c("li",null,[c("p",null,"2.或运算（|）"),c("p",null,"参加运算的两个对象，按二进制位进行“或”运算。"),c("p",null,"运算规则：0|0=0； 0|1=1； 1|0=1； 1|1=1；"),c("p",null,"即 ：参加运算的两个对象只要有一个为1，其值为1。"),c("p",null,"例如:3|5　即 0000 0011 | 0000 0101 = 0000 0111 因此，3|5的值得7。"),c("p",null,"例如：9|5可写算式如下： 00001001|00000101 =00001101 (十进制为13)可见9|5=13")]),c("li",null,[c("p",null,"3.异或运算（^）"),c("p",null,"参加运算的两个数据，按二进制位进行“异或”运算。"),c("p",null,"运算规则：0^0=0； 0^1=1； 1^0=1； 1^1=0；"),c("p",null,"即：参加运算的两个对象，如果两个相应位为“异”（值不同），则该位结果为1，否则为0。"),c("p",null,"例如：9^5可写成算式如下： 00001001^00000101=00001100 (十进制为12)可见9^5=12"),c("p",null,"8421码指的是四位二进制数，从0000~1001，分别代表十进制0~9，其每位的权分别为2的三次方（8）、2的二次方（4）、2的一次方（2）、2的0次方（1）。除了8421码外，类似的还有5421码。"),c("p",null,"01010(10) 10000(16) 11010(26) ----------(10&16) 00000->0 ----------(16&16) 10000->16(2的四次方（16）)")]),c("li",null,[c("p",null,"索引如何计算？hashCode都有了，为何还要提供hash()方法？数组容量为何是2的n次幂？")])],-1),$l=c("p",null,[c("strong",null,"索引计算方法"),r("（"),c("strong",null,"为了配合容量是 2 的 n 次幂的优化手段"),r(" ）")],-1),Pl=c("ul",null,[c("li",null,[c("p",null,"首先，计算对象的 hashCode()")]),c("li",null,[c("p",null,"再进行调用 HashMap 的 hash() 方法进行二次哈希"),c("ul",null,[c("li",null,[c("p",null,[r("二次 hash() 是为了综合高位数据，让哈希分布更为均匀；"),c("strong",null,"计算索hashCode的值更均匀，hashCode分布得越均匀，链表就越不会有过长的情况")]),c("ul",null,[c("li",null,"HashMap1.8二次hash")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418201334955.png",alt:"image-20230418201334955",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"HashMap1.7二次hash")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418201418625.png",alt:"image-20230418201418625",loading:"lazy",decoding:"async"})])]),c("li",null,[c("p",null,"hashCode足够均匀")])]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418202517544.png",alt:"image-20230418202517544",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"hashCode选取不够好，不够随机")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418202727603.png",alt:"image-20230418202727603",loading:"lazy",decoding:"async"})]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418202829734.png",alt:"image-20230418202829734",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"进行二次hash扰动函数，使得hashCode分布更均匀，防止超长链表的产生")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418203040744.png",alt:"image-20230418203040744",loading:"lazy",decoding:"async"})]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418203513964.png",alt:"image-20230418203513964",loading:"lazy",decoding:"async"})])]),c("li",null,[c("p",null,"最后 & (capacity – 1) 得到索引（容量capacity必须为2的n次幂）")])],-1),Gl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418195049973.png",alt:"image-20230418195049973",loading:"lazy",decoding:"async"})],-1),Wl=c("p",null,[c("strong",null,"数组容量为何是 2 的 n 次幂")],-1),Zl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418195337120.png",alt:"image-20230418195337120",loading:"lazy",decoding:"async"})],-1),Ql=c("ol",null,[c("li",null,"计算索引时效率更高：如果是 2 的 n 次幂可以使用位与运算代替取模"),c("li",null,"扩容时重新计算索引效率更高： hash & oldCap == 0 的元素留在原来位置 ，否则新位置 = 旧位置 + oldCap = 10 + 16")],-1),Xl=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418204559461.png",alt:"image-20230418204559461",loading:"lazy",decoding:"async"})],-1),Yl=c("p",null,[c("strong",null,"注意")],-1),ls=c("ul",null,[c("li",null,[r("二次 hash 是为了配合 "),c("strong",null,"容量是 2 的 n 次幂"),r(" 这一设计前提，如果 hash 表的容量不是 2 的 n 次幂，则不必二次 hash，即想要更好的hash分布性，容量值就选择质数")])],-1),ss=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418210235261.png",alt:"image-20230418210235261",loading:"lazy",decoding:"async"})],-1),ns=c("ul",null,[c("li",null,[c("strong",null,"容量是 2 的 n 次幂"),r(" 这一设计计算索引效率更好（追求性能），但 hash 的分散性就不好，需要二次 hash 来作为补偿，没有采用这一设计的典型例子是 Hashtable，以下为Hashtable的扩容规律")])],-1),os=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418210834027.png",alt:"image-20230418210834027",loading:"lazy",decoding:"async"})],-1),as={id:"_4-put-与扩容",tabindex:"-1"},es=c("p",null,[c("strong",null,"put 流程")],-1),ts=c("ul",null,[c("li",null,"1.8put流程")],-1),cs=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419110228837.png",alt:"image-20230419110228837",loading:"lazy",decoding:"async"})],-1),rs=c("ol",null,[c("li",null,"HashMap 是懒惰创建数组的，首次使用才创建数组"),c("li",null,"计算索引（桶下标）"),c("li",null,"如果桶下标还没人占用，创建 Node 占位返回"),c("li",null,[r("如果桶下标已经有人占用 "),c("ol",null,[c("li",null,"已经是 TreeNode 走红黑树的添加或更新逻辑"),c("li",null,"是普通 Node，走链表的添加或更新逻辑，如果链表长度超过树化阈值，走树化逻辑")])]),c("li",null,"返回前检查容量是否超过阈值，一旦超过进行扩容")],-1),is=c("p",null,[c("strong",null,"1.7 与 1.8 的区别")],-1),ps=c("ol",null,[c("li",null,[c("p",null,"链表插入节点时"),c("ol",null,[c("li",null,"1.7 是头插法")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419110745737.png",alt:"image-20230419110745737",loading:"lazy",decoding:"async"})]),c("ol",{start:"2"},[c("li",null,"1.8 是尾插法")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419110538952.png",alt:"image-20230419110538952",loading:"lazy",decoding:"async"})])]),c("li",null,[c("p",null,"1.7 是大于等于阈值且没有空位时才扩容"),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419112014919.png",alt:"image-20230419112014919",loading:"lazy",decoding:"async"})])]),c("li",null,[c("p",null,"而 1.8 是大于阈值就扩容")]),c("li",null,[c("p",null,"1.8 在扩容计算 Node 索引时，会优化"),c("ul",null,[c("li",null,"hash & oldCap == 0 的元素留在原来位置 ，否则新位置 = 旧位置 + oldCap = 10 + 16")])])],-1),ys=c("p",null,[c("strong",null,"扩容（加载）因子为何默认是 0.75f")],-1),Es=c("ol",null,[c("li",null,[c("p",null,"在空间占用与查询时间之间取得较好的权衡")]),c("li",null,[c("p",null,"大于这个值，空间节省了，但链表就会比较长影响性能"),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419112518996.png",alt:"image-20230419112518996",loading:"lazy",decoding:"async"})])]),c("li",null,[c("p",null,"小于这个值，冲突减少了，但扩容就会更频繁，空间占用也更多")])],-1),us=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419112817313.png",alt:"image-20230419112817313",loading:"lazy",decoding:"async"})],-1),gs=c("blockquote",null,[c("p",null,"计算桶下标：hash()->(hashcode >>> 16 ^ hashcode )&(capacity-1) capacity为2的n次幂，计算索引效率更高，但哈希分布不均匀；capacity为质数时哈希分布均匀（hashtable）。 hashmap1.8:超过容量扩容阈值（＞¾），先创建扩容新数组再将数据迁移到新数组；链表插入方式为尾插法 1.7:链表插入方式为头插法；")],-1),ds={id:"_5-并发问题",tabindex:"-1"},ms=c("p",null,"1.7链表迁移过程(a和b迁移前后都是同一个对象，只是改变了它们的一些引用地址，并没有发生对象的创建)",-1),hs=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419121302636.png",alt:"image-20230419121302636",loading:"lazy",decoding:"async"})],-1),Fs=c("p",null,[c("strong",null,"扩容死链（1.7 会存在）")],-1),bs=c("p",null,"1.7 源码如下：",-1),fs=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"transfer"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#F97583"}},"Entry"),c("span",{style:{color:"#E1E4E8"}},"[] newTable, "),c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," rehash) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," newCapacity "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," newTable.length;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"for"),c("span",{style:{color:"#E1E4E8"}}," (Entry<"),c("span",{style:{color:"#F97583"}},"K"),c("span",{style:{color:"#E1E4E8"}},","),c("span",{style:{color:"#F97583"}},"V"),c("span",{style:{color:"#E1E4E8"}},"> e "),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," table) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"while"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"!="),c("span",{style:{color:"#E1E4E8"}}," e) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            Entry<"),c("span",{style:{color:"#F97583"}},"K"),c("span",{style:{color:"#E1E4E8"}},","),c("span",{style:{color:"#F97583"}},"V"),c("span",{style:{color:"#E1E4E8"}},"> next "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," e.next;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (rehash) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                e.hash "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," e.key "),c("span",{style:{color:"#F97583"}},"?"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"0"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"hash"),c("span",{style:{color:"#E1E4E8"}},"(e.key);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," i "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"indexFor"),c("span",{style:{color:"#E1E4E8"}},"(e.hash, newCapacity);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            e.next "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," newTable[i];")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            newTable[i] "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," e;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            e "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," next;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"transfer"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#D73A49"}},"Entry"),c("span",{style:{color:"#24292E"}},"[] newTable, "),c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," rehash) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," newCapacity "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," newTable.length;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"for"),c("span",{style:{color:"#24292E"}}," (Entry<"),c("span",{style:{color:"#D73A49"}},"K"),c("span",{style:{color:"#24292E"}},","),c("span",{style:{color:"#D73A49"}},"V"),c("span",{style:{color:"#24292E"}},"> e "),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," table) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"while"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"!="),c("span",{style:{color:"#24292E"}}," e) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            Entry<"),c("span",{style:{color:"#D73A49"}},"K"),c("span",{style:{color:"#24292E"}},","),c("span",{style:{color:"#D73A49"}},"V"),c("span",{style:{color:"#24292E"}},"> next "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," e.next;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (rehash) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                e.hash "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," e.key "),c("span",{style:{color:"#D73A49"}},"?"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"0"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"hash"),c("span",{style:{color:"#24292E"}},"(e.key);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," i "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"indexFor"),c("span",{style:{color:"#24292E"}},"(e.hash, newCapacity);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            e.next "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," newTable[i];")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            newTable[i] "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," e;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            e "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," next;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),Ss=c("ul",null,[c("li",null,"e 和 next 都是局部变量，用来指向当前节点和下一个节点"),c("li",null,"线程1（绿色）的临时变量 e 和 next 刚引用了这俩节点，还未来得及移动节点，发生了线程切换，由线程2（蓝色）完成扩容和迁移")],-1),As=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20210831084325075.png",alt:"image-20210831084325075",loading:"lazy",decoding:"async"})],-1),Cs=c("ul",null,[c("li",null,"线程2 扩容完成，由于头插法，链表顺序颠倒。但线程1 的临时变量 e 和 next 还引用了这俩节点，还要再来一遍迁移")],-1),vs=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20210831084723383.png",alt:"image-20210831084723383",loading:"lazy",decoding:"async"})],-1),Ds=c("ul",null,[c("li",null,[c("p",null,"第一次循环"),c("ul",null,[c("li",null,"循环接着线程切换前运行，注意此时 e 指向的是节点 a，next 指向的是节点 b"),c("li",null,"e 头插 a 节点，注意图中画了两份 a 节点，但事实上只有一个（为了不让箭头特别乱画了两份）")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20210831084855348.png",alt:"image-20210831084855348",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"当循环结束是 e 会指向 next 也就是 b 节点")])])],-1),Ls=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419121935915.png",alt:"image-20230419121935915",loading:"lazy",decoding:"async"})],-1),js=c("ul",null,[c("li",null,[c("p",null,"第二次循环"),c("ul",null,[c("li",null,"第二轮开始，next 指向了节点 a"),c("li",null,"e 头插节点 b")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20210831085329449.png",alt:"image-20210831085329449",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"当循环结束时，e 指向 next 也就是节点 a")])])],-1),ks=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419122220312.png",alt:"image-20230419122220312",loading:"lazy",decoding:"async"})],-1),_s=c("ul",null,[c("li",null,[c("p",null,"第三次循环"),c("ul",null,[c("li",null,"next 指向了 null")]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419133332478.png",alt:"image-20230419133332478",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,[r("e 头插节点 a，"),c("strong",null,"a 的 next 指向了 b"),r("（之前 a.next 一直是 null），b 的 next 指向 a，死链已成")])]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20210831085543224.png",alt:"image-20210831085543224",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"当循环结束时，e 指向 next 也就是 null，因此第四次循环时会正常退出")])])],-1),zs=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419133643654.png",alt:"image-20230419133643654",loading:"lazy",decoding:"async"})],-1),Bs=c("p",null,[c("strong",null,"数据错乱（1.7，1.8 都会存在）")],-1),Ks=c("ul",null,[c("li",null,[r("代码参考 "),c("code",null,"day01.map.HashMapMissData"),r("，具体调试步骤参考视频")])],-1),Ns=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419115103985.png",alt:"image-20230419115103985",loading:"lazy",decoding:"async"})],-1),Ms=c("blockquote",null,[c("p",null,[c("em",null,[c("strong",null,"补充代码说明")])]),c("ul",null,[c("li",null,"day01.map.HashMapDistribution 演示 map 中链表长度符合泊松分布"),c("li",null,[r("day01.map.DistributionAffectedByCapacity 演示容量及 hashCode 取值对分布的影响 "),c("ul",null,[c("li",null,"day01.map.DistributionAffectedByCapacity#hashtableGrowRule 演示了 Hashtable 的扩容规律"),c("li",null,"day01.sort.Utils#randomArray 如果 hashCode 足够随机，容量是否是 2 的 n 次幂影响不大"),c("li",null,"day01.sort.Utils#lowSameArray 如果 hashCode 低位一样的多，容量是 2 的 n 次幂会导致分布不均匀"),c("li",null,"day01.sort.Utils#evenArray 如果 hashCode 偶数的多，容量是 2 的 n 次幂会导致分布不均匀"),c("li",null,"由此得出对于容量是 2 的 n 次幂的设计来讲，二次 hash 非常重要")])]),c("li",null,"day01.map.HashMapVsHashtable 演示了对于同样数量的单词字符串放入 HashMap 和 Hashtable 分布上的区别")])],-1),xs={id:"_6-key-的设计",tabindex:"-1"},Is=c("p",null,[c("strong",null,"key 的设计要求")],-1),Ts=c("ol",null,[c("li",null,[c("p",null,"HashMap 的 key 可以为 null，但 Map 的其他实现则不然")]),c("li",null,[c("p",null,[r("作为 key 的对象，必须实现 hashCode 和 equals，并且 "),c("strong",null,"key 的内容不能修改（不可变）")]),c("ul",null,[c("li",null,"重写hashCode方法是为了让我们的key在整个HashMap中有更好的分布性，提高查询性能"),c("li",null,"重写equals方法是为了将来如果计算两个对象的key的索引都一样，进一步需要用equals进行比较，看看是不是两个相同的对象"),c("li",null,"两个对象的hashCode相等，equals不一定相等；两个对象的equals相等，hashCode一定相等")])]),c("li",null,[c("p",null,"key 的 hashCode 应该有良好的散列性")])],-1),Hs=c("p",null,"如果 key 可变，例如修改了 age 会导致再次查询时查询不到，因此平时用整数、字符串等作为key，这些类的内容不可变",-1),ws=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419134838699.png",alt:"image-20230419134838699",loading:"lazy",decoding:"async"})],-1),Os=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"HashMapMutableKey"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"main"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#F97583"}},"String"),c("span",{style:{color:"#E1E4E8"}},"[] "),c("span",{style:{color:"#FFAB70"}},"args"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        HashMap<"),c("span",{style:{color:"#F97583"}},"Student"),c("span",{style:{color:"#E1E4E8"}},", "),c("span",{style:{color:"#F97583"}},"Object"),c("span",{style:{color:"#E1E4E8"}},"> map "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," HashMap<>();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        Student stu "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Student"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"张三"'),c("span",{style:{color:"#E1E4E8"}},", "),c("span",{style:{color:"#79B8FF"}},"18"),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        map."),c("span",{style:{color:"#B392F0"}},"put"),c("span",{style:{color:"#E1E4E8"}},"(stu, "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Object"),c("span",{style:{color:"#E1E4E8"}},"());")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"(map."),c("span",{style:{color:"#B392F0"}},"get"),c("span",{style:{color:"#E1E4E8"}},"(stu));")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        stu.age "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"19"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"(map."),c("span",{style:{color:"#B392F0"}},"get"),c("span",{style:{color:"#E1E4E8"}},"(stu));")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Student"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        String name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," age;")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Student"),c("span",{style:{color:"#E1E4E8"}},"(String "),c("span",{style:{color:"#FFAB70"}},"name"),c("span",{style:{color:"#E1E4E8"}},", "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#FFAB70"}},"age"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#79B8FF"}},"this"),c("span",{style:{color:"#E1E4E8"}},".name "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#79B8FF"}},"this"),c("span",{style:{color:"#E1E4E8"}},".age "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," age;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," String "),c("span",{style:{color:"#B392F0"}},"getName"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"setName"),c("span",{style:{color:"#E1E4E8"}},"(String "),c("span",{style:{color:"#FFAB70"}},"name"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#79B8FF"}},"this"),c("span",{style:{color:"#E1E4E8"}},".name "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"getAge"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," age;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"setAge"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#FFAB70"}},"age"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#79B8FF"}},"this"),c("span",{style:{color:"#E1E4E8"}},".age "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," age;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        @"),c("span",{style:{color:"#F97583"}},"Override")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"equals"),c("span",{style:{color:"#E1E4E8"}},"(Object "),c("span",{style:{color:"#FFAB70"}},"o"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," ("),c("span",{style:{color:"#79B8FF"}},"this"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," o) "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (o "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"||"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"getClass"),c("span",{style:{color:"#E1E4E8"}},"() "),c("span",{style:{color:"#F97583"}},"!="),c("span",{style:{color:"#E1E4E8"}}," o."),c("span",{style:{color:"#B392F0"}},"getClass"),c("span",{style:{color:"#E1E4E8"}},"()) "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"false"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            Student student "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," (Student) o;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," age "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," student.age "),c("span",{style:{color:"#F97583"}},"&&"),c("span",{style:{color:"#E1E4E8"}}," Objects."),c("span",{style:{color:"#B392F0"}},"equals"),c("span",{style:{color:"#E1E4E8"}},"(name, student.name);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        @"),c("span",{style:{color:"#F97583"}},"Override")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"hashCode"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," Objects."),c("span",{style:{color:"#B392F0"}},"hash"),c("span",{style:{color:"#E1E4E8"}},"(name, age);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"HashMapMutableKey"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"main"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#D73A49"}},"String"),c("span",{style:{color:"#24292E"}},"[] "),c("span",{style:{color:"#E36209"}},"args"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        HashMap<"),c("span",{style:{color:"#D73A49"}},"Student"),c("span",{style:{color:"#24292E"}},", "),c("span",{style:{color:"#D73A49"}},"Object"),c("span",{style:{color:"#24292E"}},"> map "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," HashMap<>();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        Student stu "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Student"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"张三"'),c("span",{style:{color:"#24292E"}},", "),c("span",{style:{color:"#005CC5"}},"18"),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        map."),c("span",{style:{color:"#6F42C1"}},"put"),c("span",{style:{color:"#24292E"}},"(stu, "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Object"),c("span",{style:{color:"#24292E"}},"());")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"(map."),c("span",{style:{color:"#6F42C1"}},"get"),c("span",{style:{color:"#24292E"}},"(stu));")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        stu.age "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"19"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"(map."),c("span",{style:{color:"#6F42C1"}},"get"),c("span",{style:{color:"#24292E"}},"(stu));")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Student"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        String name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," age;")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Student"),c("span",{style:{color:"#24292E"}},"(String "),c("span",{style:{color:"#E36209"}},"name"),c("span",{style:{color:"#24292E"}},", "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#E36209"}},"age"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#005CC5"}},"this"),c("span",{style:{color:"#24292E"}},".name "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#005CC5"}},"this"),c("span",{style:{color:"#24292E"}},".age "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," age;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," String "),c("span",{style:{color:"#6F42C1"}},"getName"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"setName"),c("span",{style:{color:"#24292E"}},"(String "),c("span",{style:{color:"#E36209"}},"name"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#005CC5"}},"this"),c("span",{style:{color:"#24292E"}},".name "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," name;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"getAge"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," age;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"setAge"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#E36209"}},"age"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#005CC5"}},"this"),c("span",{style:{color:"#24292E"}},".age "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," age;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        @"),c("span",{style:{color:"#D73A49"}},"Override")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"equals"),c("span",{style:{color:"#24292E"}},"(Object "),c("span",{style:{color:"#E36209"}},"o"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," ("),c("span",{style:{color:"#005CC5"}},"this"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," o) "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (o "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"||"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"getClass"),c("span",{style:{color:"#24292E"}},"() "),c("span",{style:{color:"#D73A49"}},"!="),c("span",{style:{color:"#24292E"}}," o."),c("span",{style:{color:"#6F42C1"}},"getClass"),c("span",{style:{color:"#24292E"}},"()) "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"false"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            Student student "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," (Student) o;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," age "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," student.age "),c("span",{style:{color:"#D73A49"}},"&&"),c("span",{style:{color:"#24292E"}}," Objects."),c("span",{style:{color:"#6F42C1"}},"equals"),c("span",{style:{color:"#24292E"}},"(name, student.name);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        @"),c("span",{style:{color:"#D73A49"}},"Override")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"hashCode"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," Objects."),c("span",{style:{color:"#6F42C1"}},"hash"),c("span",{style:{color:"#24292E"}},"(name, age);")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),Js=c("p",null,[c("strong",null,"String 对象的 hashCode() 设计")],-1),Us=c("ul",null,[c("li",null,"目标是达到较为均匀的散列效果，每个字符串的 hashCode 足够独特"),c("li",null,[r("字符串中的每个字符都可以表现为一个数字，称为 S_i"),c("em",null,"S**i"),r("，其中 i 的范围是 0 ~ n - 1")]),c("li",null,[r("散列公式为： S_0∗31^{(n-1)}+ S_1∗31^{(n-2)}+ … S_i ∗ 31^{(n-1-i)}+ …S_{(n-1)}∗31^0"),c("em",null,"S"),r("0∗31("),c("em",null,"n"),r("−1)+"),c("em",null,"S"),r("1∗31("),c("em",null,"n"),r("−2)+…"),c("em",null,"S**i"),r("∗31("),c("em",null,"n"),r("−1−"),c("em",null,"i"),r(")+…"),c("em",null,"S"),r("("),c("em",null,"n"),r("−1)∗310")]),c("li",null,[r("31 代入公式有较好的散列特性，并且 31 * h 可以被优化为 "),c("ul",null,[c("li",null,[r("即 32 ∗h -h32∗"),c("em",null,"h"),r("−"),c("em",null,"h")]),c("li",null,[r("即 2^5 ∗h -h25∗"),c("em",null,"h"),r("−"),c("em",null,"h")]),c("li",null,[r("即 h≪5 -h"),c("em",null,"h"),r("≪5−"),c("em",null,"h")])])])],-1),Vs=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419135639704.png",alt:"image-20230419135639704",loading:"lazy",decoding:"async"})],-1),qs={id:"_4-1-hashmap-快速查找",tabindex:"-1"},Rs=c("ul",null,[c("li",null,"ArrayList查找效率较低")],-1),$s=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418161635803.png",alt:"image-20230418161635803",loading:"lazy",decoding:"async"})],-1),Ps=c("ul",null,[c("li",null,"HashMap通过索引计算直接找到元素(hash运算)，无链表情况查找时间复杂度为O(1)，有链表情况就看链表长度了，时间复杂度为O(n)")],-1),Gs=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418161857746.png",alt:"image-20230418161857746",loading:"lazy",decoding:"async"})],-1),Ws={id:"_4-2-hashmap-链表过长的解决方案",tabindex:"-1"},Zs=c("ul",null,[c("li",null,"形成链表：keys相同的固定hash；keys的hash%容量相同")],-1),Qs={id:"_4-2-1-扩容",tabindex:"-1"},Xs=c("ul",null,[c("li",null,"正常情况")],-1),Ys=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418162855531.png",alt:"image-20230418162855531",loading:"lazy",decoding:"async"})],-1),ln=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418162904156.png",alt:"image-20230418162904156",loading:"lazy",decoding:"async"})],-1),sn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418162909932.png",alt:"image-20230418162909932",loading:"lazy",decoding:"async"})],-1),nn=c("ul",null,[c("li",null,"极端情况，只能树化为红黑树了")],-1),on=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418162935840.png",alt:"image-20230418162935840",loading:"lazy",decoding:"async"})],-1),an={id:"_4-2-2-树化",tabindex:"-1"},en=c("ul",null,[c("li",null,"链表->红黑树：当容量为16，在某个桶下标形成链表的8个元素添加元素，仅进行扩容为32，再添加扩容到64才会树化")],-1),tn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418164530243.png",alt:"image-20230418164530243",loading:"lazy",decoding:"async"})],-1),cn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418165555721.png",alt:"image-20230418165555721",loading:"lazy",decoding:"async"})],-1),rn=c("ul",null,[c("li",null,"满足树化条件(容量>=64且链表长度>8)，红黑树父节点左侧都是比它小的元素，右侧都是比它大的元素，子节点同理，hash码相同时才比较，按照key的字符串值比较，查找的时间复杂度为O(log2(n))")],-1),pn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418165707584.png",alt:"image-20230418165707584",loading:"lazy",decoding:"async"})],-1),yn=c("ul",null,[c("li",null,"链表长度是可能出现超过8的情况")],-1),En=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418170758857.png",alt:"image-20230418170758857",loading:"lazy",decoding:"async"})],-1),un={id:"红黑树的意义-树化阈值",tabindex:"-1"},gn=c("ul",null,[c("li",null,[c("p",null,"为何要用红黑树，为何一上来不树化，树化阈值为何是8，何时会树化，何时会退化为链表？"),c("ul",null,[c("li",null,[c("p",null,"因为链表较长时会影响整个HashMap的性能，1.8之后引入红黑树，即使链表较长也不会对性能有太大的影响")]),c("li",null,[c("p",null,"链表->红黑树：当容量为16，在某个桶下标形成链表的8个元素添加元素，仅进行扩容为32，再添加扩容到64才会树化")]),c("li",null,[c("p",null,"链表短的时候，链表性能大于红黑树，链表长时性能才远远不如红黑树，且红黑树占用内存比链表大得多，非必要不树化")]),c("li",null,[c("p",null,"红黑树是一种非正常情况，下图为23W多个正常单词的hash分布情况，若没有刻意构造hash码，在负载因子0.75的情况下，链表出现8的概率非常低，为0.00000006")])]),c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418181214309.png",alt:"image-20230418181214309",loading:"lazy",decoding:"async"})]),c("ul",null,[c("li",null,"红黑树用来避免 DoS 攻击，防止链表超长时性能下降，树化应当是偶然情况，是保底策略")])])],-1),dn={id:"树退化链表-情况1",tabindex:"-1"},mn=c("ul",null,[c("li",null,"在扩容时如果拆分树时，树元素个数 <= 6 则会退化链表")],-1),hn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418183806555.png",alt:"image-20230418183806555",loading:"lazy",decoding:"async"})],-1),Fn=c("ul",null,[c("li",null,"在扩容时如果拆分树时，树元素个数 > 6 则不会退化链表")],-1),bn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418184454141.png",alt:"image-20230418184454141",loading:"lazy",decoding:"async"})],-1),fn={id:"树退化链表-情况2",tabindex:"-1"},Sn=c("ul",null,[c("li",null,"remove 树节点时，若 root(爷)、root.left(左孩子)、root.right(右孩子)、root.left.left(左孙子) 有一个为 null ，也会退化为链表")],-1),An=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418192832140.png",alt:"image-20230418192832140",loading:"lazy",decoding:"async"})],-1),Cn=c("ul",null,[c("li",null,"例子2")],-1),vn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230418193518600.png",alt:"image-20230418193518600",loading:"lazy",decoding:"async"})],-1),Dn={id:"_5-单例模式",tabindex:"-1"},Ln=c("p",null,[c("strong",null,"要求")],-1),jn=c("ul",null,[c("li",null,"掌握五种单例模式的实现方式"),c("li",null,"理解为何 DCL 实现时要使用 volatile 修饰静态变量"),c("li",null,"了解 jdk 中用到单例的场景")],-1),kn={id:"饿汉式",tabindex:"-1"},_n=c("strong",null,"饿汉式",-1),zn=c("ul",null,[c("li",null,"提前创建单例对象")],-1),Bn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419141144975.png",alt:"image-20230419141144975",loading:"lazy",decoding:"async"})],-1),Kn=c("ul",null,[c("li",null,"实现Serializable接口利用反射破坏单例")],-1),Nn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419141539054.png",alt:"image-20230419141539054",loading:"lazy",decoding:"async"})],-1),Mn=c("ul",null,[c("li",null,"反序列化破坏单例")],-1),xn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419142100218.png",alt:"image-20230419142100218",loading:"lazy",decoding:"async"})],-1),In=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton1"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"implements"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Serializable"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton1"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (INSTANCE "),c("span",{style:{color:"#F97583"}},"!="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"throw"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"RuntimeException"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"单例对象不能重复创建"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"private Singleton1()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"final"),c("span",{style:{color:"#E1E4E8"}}," Singleton1 INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton1"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton1 "),c("span",{style:{color:"#B392F0"}},"getInstance"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"otherMethod"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"otherMethod()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," Object "),c("span",{style:{color:"#B392F0"}},"readResolve"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton1"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"implements"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Serializable"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton1"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (INSTANCE "),c("span",{style:{color:"#D73A49"}},"!="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"throw"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"RuntimeException"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"单例对象不能重复创建"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"private Singleton1()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"final"),c("span",{style:{color:"#24292E"}}," Singleton1 INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton1"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton1 "),c("span",{style:{color:"#6F42C1"}},"getInstance"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"otherMethod"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"otherMethod()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," Object "),c("span",{style:{color:"#6F42C1"}},"readResolve"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),Tn=c("ul",null,[c("li",null,"构造方法抛出异常是防止反射破坏单例")],-1),Hn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419141740516.png",alt:"image-20230419141740516",loading:"lazy",decoding:"async"})],-1),wn=c("ul",null,[c("li",null,[c("code",null,"readResolve()"),r(" 是防止反序列化破坏单例")])],-1),On=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419142253512.png",alt:"image-20230419142253512",loading:"lazy",decoding:"async"})],-1),Jn=c("ul",null,[c("li",null,"unsafe破坏单例")],-1),Un=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419142613493.png",alt:"image-20230419142613493",loading:"lazy",decoding:"async"})],-1),Vn={id:"枚举饿汉式",tabindex:"-1"},qn=c("strong",null,"枚举饿汉式",-1),Rn=c("ul",null,[c("li",null,"枚举类一加载并初始化，就会把枚举对象创建出来")],-1),$n=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419143438750.png",alt:"image-20230419143438750",loading:"lazy",decoding:"async"})],-1),Pn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419143148474.png",alt:"image-20230419143148474",loading:"lazy",decoding:"async"})],-1),Gn=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"enum"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton2"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#79B8FF"}},"INSTANCE"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton2"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"private Singleton2()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    @"),c("span",{style:{color:"#F97583"}},"Override")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," String "),c("span",{style:{color:"#B392F0"}},"toString"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"getClass"),c("span",{style:{color:"#E1E4E8"}},"()."),c("span",{style:{color:"#B392F0"}},"getName"),c("span",{style:{color:"#E1E4E8"}},"() "),c("span",{style:{color:"#F97583"}},"+"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#9ECBFF"}},'"@"'),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"+"),c("span",{style:{color:"#E1E4E8"}}," Integer."),c("span",{style:{color:"#B392F0"}},"toHexString"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#B392F0"}},"hashCode"),c("span",{style:{color:"#E1E4E8"}},"());")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton2 "),c("span",{style:{color:"#B392F0"}},"getInstance"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"otherMethod"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"otherMethod()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"enum"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton2"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#005CC5"}},"INSTANCE"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton2"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"private Singleton2()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    @"),c("span",{style:{color:"#D73A49"}},"Override")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," String "),c("span",{style:{color:"#6F42C1"}},"toString"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"getClass"),c("span",{style:{color:"#24292E"}},"()."),c("span",{style:{color:"#6F42C1"}},"getName"),c("span",{style:{color:"#24292E"}},"() "),c("span",{style:{color:"#D73A49"}},"+"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#032F62"}},'"@"'),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"+"),c("span",{style:{color:"#24292E"}}," Integer."),c("span",{style:{color:"#6F42C1"}},"toHexString"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#6F42C1"}},"hashCode"),c("span",{style:{color:"#24292E"}},"());")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton2 "),c("span",{style:{color:"#6F42C1"}},"getInstance"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"otherMethod"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"otherMethod()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),Wn=c("ul",null,[c("li",null,"枚举饿汉式能天然防止反射、反序列化破坏单例")],-1),Zn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419144121454.png",alt:"image-20230419144121454",loading:"lazy",decoding:"async"})],-1),Qn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419143856798.png",alt:"image-20230419143856798",loading:"lazy",decoding:"async"})],-1),Xn=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419143639529.png",alt:"image-20230419143639529",loading:"lazy",decoding:"async"})],-1),Yn=c("ul",null,[c("li",null,"unsafe依旧可以破坏枚举单例")],-1),lo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419144327173.png",alt:"image-20230419144327173",loading:"lazy",decoding:"async"})],-1),so=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419144146527.png",alt:"image-20230419144146527",loading:"lazy",decoding:"async"})],-1),no={id:"懒汉式",tabindex:"-1"},oo=c("strong",null,"懒汉式",-1),ao=c("ul",null,[c("li",null,"第一次调用getInstance方法时才创建单例对象(非线程安全)")],-1),eo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419144620623.png",alt:"image-20230419144620623",loading:"lazy",decoding:"async"})],-1),to=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton3"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"implements"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Serializable"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton3"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"private Singleton3()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton3 INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// Singleton3.class  synchronized加在方法上，性能不是特别好，因为单例对象创建好以后，其他线程来访问该同步方法时无需再加锁了，后续的操作不用再进行同步和互斥保护了，不然就影响性能了，只有首次创建单例是才进行线程安全的保护")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"synchronized"),c("span",{style:{color:"#E1E4E8"}}," Singleton3 "),c("span",{style:{color:"#B392F0"}},"getInstance"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (INSTANCE "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton3"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"otherMethod"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"otherMethod()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton3"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"implements"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Serializable"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton3"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"private Singleton3()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton3 INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// Singleton3.class  synchronized加在方法上，性能不是特别好，因为单例对象创建好以后，其他线程来访问该同步方法时无需再加锁了，后续的操作不用再进行同步和互斥保护了，不然就影响性能了，只有首次创建单例是才进行线程安全的保护")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"synchronized"),c("span",{style:{color:"#24292E"}}," Singleton3 "),c("span",{style:{color:"#6F42C1"}},"getInstance"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (INSTANCE "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton3"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"otherMethod"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"otherMethod()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),co=c("ul",null,[c("li",null,"其实只有首次创建单例对象时才需要同步，但该代码实际上每次调用都会同步"),c("li",null,"因此有了下面的双检锁改进")],-1),ro={id:"双检锁懒汉式",tabindex:"-1"},io=c("strong",null,"双检锁懒汉式",-1),po=c("ul",null,[c("li",null,"少了内层判断还是会重复创建对象")],-1),yo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419145814990.png",alt:"image-20230419145814990",loading:"lazy",decoding:"async"})],-1),Eo=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton4"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"implements"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Serializable"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton4"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"private Singleton4()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"volatile"),c("span",{style:{color:"#E1E4E8"}}," Singleton4 INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},"; "),c("span",{style:{color:"#6A737D"}},"// 可见性，有序性")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton4 "),c("span",{style:{color:"#B392F0"}},"getInstance"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (INSTANCE "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"synchronized"),c("span",{style:{color:"#E1E4E8"}}," (Singleton4.class) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (INSTANCE "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                    INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton4"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"otherMethod"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"otherMethod()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton4"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"implements"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Serializable"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton4"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"private Singleton4()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"volatile"),c("span",{style:{color:"#24292E"}}," Singleton4 INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},"; "),c("span",{style:{color:"#6A737D"}},"// 可见性，有序性")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton4 "),c("span",{style:{color:"#6F42C1"}},"getInstance"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (INSTANCE "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"synchronized"),c("span",{style:{color:"#24292E"}}," (Singleton4.class) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (INSTANCE "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                    INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton4"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"otherMethod"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"otherMethod()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),uo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419145942353.png",alt:"image-20230419145942353",loading:"lazy",decoding:"async"})],-1),go=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419151419398.png",alt:"image-20230419151419398",loading:"lazy",decoding:"async"})],-1),mo=c("p",null,"为何必须加 volatile：",-1),ho=c("ul",null,[c("li",null,[c("code",null,"INSTANCE = new Singleton4()"),r(" 不是原子的，分成 3 步：创建对象、调用构造、给静态变量赋值，其中后两步可能被指令重排序优化，变成先赋值、再调用构造")]),c("li",null,[r("如果线程1 先执行了赋值，线程2 执行到第一个 "),c("code",null,"INSTANCE == null"),r(" 时发现 INSTANCE 已经不为 null，此时就会返回一个未完全构造的对象")])],-1),Fo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419153459527.png",alt:"image-20230419153459527",loading:"lazy",decoding:"async"})],-1),bo={id:"内部类懒汉式",tabindex:"-1"},fo=c("strong",null,"内部类懒汉式",-1),So=c("div",{class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton5"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"implements"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Serializable"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton5"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"private Singleton5()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Holder"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton5 INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton5"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton5 "),c("span",{style:{color:"#B392F0"}},"getInstance"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," Holder.INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"otherMethod"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"otherMethod()"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton5"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"implements"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Serializable"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton5"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"private Singleton5()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Holder"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton5 INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton5"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton5 "),c("span",{style:{color:"#6F42C1"}},"getInstance"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," Holder.INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"otherMethod"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"otherMethod()"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])])],-1),Ao=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419154215932.png",alt:"image-20230419154215932",loading:"lazy",decoding:"async"})],-1),Co=c("ul",null,[c("li",null,"避免了双检锁的缺点")],-1),vo=c("blockquote",null,[c("p",null,"volatile修饰共享变量可以解决指令重排序(懒汉单例-DCL(双检索)) 给静态变量赋值肯定会放到静态代码块里执行，静态代码块里的代码由JVM来保证，则饿汉式不用考虑线程安全问题，枚举饿汉式同理")],-1),Do={id:"jdk-中单例的体现",tabindex:"-1"},Lo=c("strong",null,"JDK 中单例的体现",-1),jo=c("ul",null,[c("li",null,"Runtime 体现了饿汉式单例")],-1),ko=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419154748392.png",alt:"image-20230419154748392",loading:"lazy",decoding:"async"})],-1),_o=c("ul",null,[c("li",null,"Console 体现了双检锁懒汉式单例")],-1),zo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419154859774.png",alt:"image-20230419154859774",loading:"lazy",decoding:"async"})],-1),Bo=c("ul",null,[c("li",null,"Collections 中的 EmptyNavigableSet 内部类懒汉式单例")],-1),Ko=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419155254327.png",alt:"image-20230419155254327",loading:"lazy",decoding:"async"})],-1),No=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419155346324.png",alt:"image-20230419155346324",loading:"lazy",decoding:"async"})],-1),Mo=c("ul",null,[c("li",null,"其他内部类懒汉式例子")],-1),xo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419155525101.png",alt:"image-20230419155525101",loading:"lazy",decoding:"async"})],-1),Io=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419155558145.png",alt:"image-20230419155558145",loading:"lazy",decoding:"async"})],-1),To=c("ul",null,[c("li",null,"ReverseComparator.REVERSE_ORDER 内部类懒汉式单例")],-1),Ho=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419155823830.png",alt:"image-20230419155823830",loading:"lazy",decoding:"async"})],-1),wo=c("ul",null,[c("li",null,"Comparators.NaturalOrderComparator.INSTANCE 枚举饿汉式单例")],-1),Oo=c("figure",null,[c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230419160119770.png",alt:"image-20230419160119770",loading:"lazy",decoding:"async"})],-1);const Jo=l(g,[["render",function(l,s,n,E,u,g){const Jo=y,Uo=e;return t(),o(Uo,{frontmatter:u.frontmatter,data:u.data},{"main-content-md":a((()=>[c("h1",d,[r("基础篇 "),i(Jo,{class:"header-anchor",href:"#基础篇","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),c("h2",m,[r("1. ArrayList "),i(Jo,{class:"header-anchor",href:"#_1-arraylist","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),h,F,b,f,S,A,C,v,D,L,j,k,_,z,B,K,N,M,x,I,T,H,w,O,J,U,V,q,R,$,P,c("h3",G,[r("补充 "),i(Jo,{class:"header-anchor",href:"#补充","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),W,c("h2",Z,[r("2. Iterator "),i(Jo,{class:"header-anchor",href:"#_2-iterator","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Q,X,Y,ll,sl,nl,ol,al,el,tl,cl,rl,il,c("h2",pl,[r("3. LinkedList VS "),yl,r(),i(Jo,{class:"header-anchor",href:"#_3-linkedlist-vs-arraylist","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),El,ul,gl,dl,ml,hl,Fl,bl,fl,Sl,Al,Cl,vl,Dl,Ll,jl,kl,_l,zl,c("h2",Bl,[r("4. HashMap "),i(Jo,{class:"header-anchor",href:"#_4-hashmap","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Kl,Nl,c("h3",Ml,[r("1）基本数据结构 "),i(Jo,{class:"header-anchor",href:"#_1-基本数据结构","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),xl,Il,c("h3",Tl,[r("2）树化与退化 "),i(Jo,{class:"header-anchor",href:"#_2-树化与退化","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Hl,wl,Ol,Jl,Ul,Vl,c("h3",ql,[r("3）索引计算 "),i(Jo,{class:"header-anchor",href:"#_3-索引计算","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Rl,$l,Pl,Gl,Wl,Zl,Ql,Xl,Yl,ls,ss,ns,os,c("h3",as,[r("4）put 与扩容 "),i(Jo,{class:"header-anchor",href:"#_4-put-与扩容","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),es,ts,cs,rs,is,ps,ys,Es,us,gs,c("h3",ds,[r("5）并发问题 "),i(Jo,{class:"header-anchor",href:"#_5-并发问题","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),ms,hs,Fs,bs,fs,Ss,As,Cs,vs,Ds,Ls,js,ks,_s,zs,Bs,Ks,Ns,Ms,c("h3",xs,[r("6）key 的设计 "),i(Jo,{class:"header-anchor",href:"#_6-key-的设计","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Is,Ts,Hs,ws,Os,Js,Us,Vs,c("h2",qs,[r("4.1. HashMap-快速查找 "),i(Jo,{class:"header-anchor",href:"#_4-1-hashmap-快速查找","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Rs,$s,Ps,Gs,c("h2",Ws,[r("4.2. HashMap-链表过长的解决方案 "),i(Jo,{class:"header-anchor",href:"#_4-2-hashmap-链表过长的解决方案","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Zs,c("h3",Qs,[r("4.2.1.扩容 "),i(Jo,{class:"header-anchor",href:"#_4-2-1-扩容","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Xs,Ys,ln,sn,nn,on,c("h3",an,[r("4.2.2. 树化 "),i(Jo,{class:"header-anchor",href:"#_4-2-2-树化","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),en,tn,cn,rn,pn,yn,En,c("h4",un,[r("红黑树的意义-树化阈值 "),i(Jo,{class:"header-anchor",href:"#红黑树的意义-树化阈值","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),gn,c("h4",dn,[r("树退化链表-情况1 "),i(Jo,{class:"header-anchor",href:"#树退化链表-情况1","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),mn,hn,Fn,bn,c("h4",fn,[r("树退化链表-情况2 "),i(Jo,{class:"header-anchor",href:"#树退化链表-情况2","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Sn,An,Cn,vn,c("h2",Dn,[r("5. 单例模式 "),i(Jo,{class:"header-anchor",href:"#_5-单例模式","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Ln,jn,c("h3",kn,[_n,r(),i(Jo,{class:"header-anchor",href:"#饿汉式","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),zn,Bn,Kn,Nn,Mn,xn,In,Tn,Hn,wn,On,Jn,Un,c("h3",Vn,[qn,r(),i(Jo,{class:"header-anchor",href:"#枚举饿汉式","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),Rn,$n,Pn,Gn,Wn,Zn,Qn,Xn,Yn,lo,so,c("h3",no,[oo,r(),i(Jo,{class:"header-anchor",href:"#懒汉式","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),ao,eo,to,co,c("h3",ro,[io,r(),i(Jo,{class:"header-anchor",href:"#双检锁懒汉式","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),po,yo,Eo,uo,go,mo,ho,Fo,c("h3",bo,[fo,r(),i(Jo,{class:"header-anchor",href:"#内部类懒汉式","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),So,Ao,Co,vo,c("h3",Do,[Lo,r(),i(Jo,{class:"header-anchor",href:"#jdk-中单例的体现","aria-hidden":"true"},{default:a((()=>[r("#")])),_:1})]),jo,ko,_o,zo,Bo,Ko,No,Mo,xo,Io,To,Ho,wo,Oo])),"main-header":a((()=>[p(l.$slots,"main-header")])),"main-header-after":a((()=>[p(l.$slots,"main-header-after")])),"main-nav":a((()=>[p(l.$slots,"main-nav")])),"main-content":a((()=>[p(l.$slots,"main-content")])),"main-content-after":a((()=>[p(l.$slots,"main-content-after")])),"main-nav-before":a((()=>[p(l.$slots,"main-nav-before")])),"main-nav-after":a((()=>[p(l.$slots,"main-nav-after")])),comment:a((()=>[p(l.$slots,"comment")])),footer:a((()=>[p(l.$slots,"footer")])),aside:a((()=>[p(l.$slots,"aside")])),"aside-custom":a((()=>[p(l.$slots,"aside-custom")])),default:a((()=>[p(l.$slots,"default")])),_:3},8,["frontmatter","data"])}]]);export{E as __pageData,Jo as default};
