import{_ as s,h as l,p as o,j as n,k as a,l as e,m as c,s as t,t as p,v as r,q as E,x as y}from"../../assets/app-eda06591.js";import"../@vueuse/@vueuse.592447f3.js";import"../animejs/animejs.82133372.js";const i=JSON.parse('{"title":"并发编程整理版-线程池","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-o352om_1920x1080.png","title":"并发编程整理版-线程池","top":302,"author":"imklaus","tags":["线程池","BlockingQueue","ThreadPoolExecutor","Executors","ScheduledThreadPoolExecutor","ForkJoin","享元模式"],"categories":"Java","date":"2023-08-24T19:03:22.000Z","outline":"deep"},"headers":[{"level":2,"title":"线程池","slug":"线程池","link":"#线程池","children":[{"level":3,"title":"基本概述","slug":"基本概述","link":"#基本概述","children":[]},{"level":3,"title":"阻塞队列","slug":"阻塞队列","link":"#阻塞队列","children":[]},{"level":3,"title":"操作Pool","slug":"操作pool","link":"#操作pool","children":[]},{"level":3,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":3,"title":"任务调度","slug":"任务调度","link":"#任务调度","children":[]},{"level":3,"title":"ForkJoin","slug":"forkjoin","link":"#forkjoin","children":[]},{"level":3,"title":"享元模式","slug":"享元模式","link":"#享元模式","children":[]}]}],"relativePath":"pages/posts/Concurrent Programming Compilation Edition - Thread Pool.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Concurrent Programming Compilation Edition - Thread Pool.md","lastUpdated":null}'),u=JSON.parse('{"title":"并发编程整理版-线程池","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-o352om_1920x1080.png","title":"并发编程整理版-线程池","top":302,"author":"imklaus","tags":["线程池","BlockingQueue","ThreadPoolExecutor","Executors","ScheduledThreadPoolExecutor","ForkJoin","享元模式"],"categories":"Java","date":"2023-08-24T19:03:22.000Z","outline":"deep"},"headers":[{"level":2,"title":"线程池","slug":"线程池","link":"#线程池","children":[{"level":3,"title":"基本概述","slug":"基本概述","link":"#基本概述","children":[]},{"level":3,"title":"阻塞队列","slug":"阻塞队列","link":"#阻塞队列","children":[]},{"level":3,"title":"操作Pool","slug":"操作pool","link":"#操作pool","children":[]},{"level":3,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":3,"title":"任务调度","slug":"任务调度","link":"#任务调度","children":[]},{"level":3,"title":"ForkJoin","slug":"forkjoin","link":"#forkjoin","children":[]},{"level":3,"title":"享元模式","slug":"享元模式","link":"#享元模式","children":[]}]}],"relativePath":"pages/posts/Concurrent Programming Compilation Edition - Thread Pool.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Concurrent Programming Compilation Edition - Thread Pool.md","lastUpdated":null}'),F={name:"pages/posts/Concurrent Programming Compilation Edition - Thread Pool.md",data:()=>({data:u,frontmatter:u.frontmatter,$frontmatter:u.frontmatter}),setup(){const s=l();s.meta.frontmatter=Object.assign(s.meta.frontmatter,u.frontmatter),o("pageData",u)}},A={id:"并发编程整理版",tabindex:"-1"},d=t("p",null,"笔记的整体结构依据视频编写，并随着学习的深入补充了很多知识",-1),D={id:"线程池",tabindex:"-1"},h={id:"基本概述",tabindex:"-1"},C=t("p",null,"线程池：一个容纳多个线程的容器，容器中的线程可以重复使用，省去了频繁创建和销毁线程对象的操作",-1),k=t("p",null,"线程池作用：",-1),g=t("ol",null,[t("li",null,"降低资源消耗，减少了创建和销毁线程的次数，每个工作线程都可以被重复利用，可执行多个任务"),t("li",null,"提高响应速度，当任务到达时，如果有线程可以直接用，不会出现系统僵死"),t("li",null,"提高线程的可管理性，如果无限制的创建线程，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控")],-1),f=t("p",null,[p("线程池的核心思想："),t("strong",null,"线程复用"),p("，同一个线程可以被重复使用，来处理多个任务")],-1),m=t("p",null,"池化技术 (Pool) ：一种编程技巧，核心思想是资源复用，在请求量大时能优化应用性能，降低系统频繁建连的资源开销",-1),v=t("hr",null,null,-1),b={id:"阻塞队列",tabindex:"-1"},B={id:"基本介绍",tabindex:"-1"},T=t("p",null,"有界队列和无界队列：",-1),S=t("ul",null,[t("li",null,[t("p",null,"有界队列：有固定大小的队列，比如设定了固定大小的 LinkedBlockingQueue，又或者大小为 0")]),t("li",null,[t("p",null,"无界队列：没有设置固定大小的队列，这些队列可以直接入队，直到溢出（超过 Integer.MAX_VALUE），所以相当于无界")])],-1),w=t("p",null,[p("java.util.concurrent.BlockingQueue 接口有以下阻塞队列的实现："),t("strong",null,"FIFO 队列")],-1),x=t("ul",null,[t("li",null,"ArrayBlockQueue：由数组结构组成的有界阻塞队列"),t("li",null,"LinkedBlockingQueue：由链表结构组成的无界（默认大小 Integer.MAX_VALUE）的阻塞队列"),t("li",null,"PriorityBlockQueue：支持优先级排序的无界阻塞队列"),t("li",null,"DelayedWorkQueue：使用优先级队列实现的延迟无界阻塞队列"),t("li",null,"SynchronousQueue：不存储元素的阻塞队列，每一个生产线程会阻塞到有一个 put 的线程放入元素为止"),t("li",null,"LinkedTransferQueue：由链表结构组成的无界阻塞队列"),t("li",null,[p("LinkedBlockingDeque：由链表结构组成的"),t("strong",null,"双向"),p("阻塞队列")])],-1),N=t("p",null,"与普通队列（LinkedList、ArrayList等）的不同点在于阻塞队列中阻塞添加和阻塞删除方法，以及线程安全：",-1),I=t("ul",null,[t("li",null,"阻塞添加 put()：当阻塞队列元素已满时，添加队列元素的线程会被阻塞，直到队列元素不满时才重新唤醒线程执行"),t("li",null,"阻塞删除 take()：在队列元素为空时，删除队列元素的线程将被阻塞，直到队列不为空再执行删除操作（一般会返回被删除的元素)")],-1),O=t("hr",null,null,-1),R={id:"核心方法",tabindex:"-1"},L=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"方法类型"),t("th",null,"抛出异常"),t("th",null,"特殊值"),t("th",null,"阻塞"),t("th",null,"超时")])]),t("tbody",null,[t("tr",null,[t("td",null,"插入（尾）"),t("td",null,"add(e)"),t("td",null,"offer(e)"),t("td",null,"put(e)"),t("td",null,[t("code",null,"offer(e,time,unit)")])]),t("tr",null,[t("td",null,"移除（头）"),t("td",null,"remove()"),t("td",null,"poll()"),t("td",null,"take()"),t("td",null,[t("code",null,"poll(time,unit)")])]),t("tr",null,[t("td",null,"检查（队首元素）"),t("td",null,"element()"),t("td",null,"peek()"),t("td",null,"不可用"),t("td",null,"不可用")])])],-1),j=t("ul",null,[t("li",null,[p("抛出异常组： "),t("ul",null,[t("li",null,"当阻塞队列满时：在往队列中 add 插入元素会抛出 IIIegalStateException: Queue full"),t("li",null,"当阻塞队列空时：再往队列中 remove 移除元素，会抛出 NoSuchException")])]),t("li",null,[p("特殊值组： "),t("ul",null,[t("li",null,"插入方法：成功 true，失败 false"),t("li",null,"移除方法：成功返回出队列元素，队列没有就返回 null")])]),t("li",null,[p("阻塞组： "),t("ul",null,[t("li",null,"当阻塞队列满时，生产者继续往队列里 put 元素，队列会一直阻塞生产线程直到队列有空间 put 数据或响应中断退出"),t("li",null,"当阻塞队列空时，消费者线程试图从队列里 take 元素，队列会一直阻塞消费者线程直到队列中有可用元素")])]),t("li",null,"超时退出：当阻塞队列满时，队里会阻塞生产者线程一定时间，超过限时后生产者线程会退出")],-1),P=t("hr",null,null,-1),U={id:"链表队列",tabindex:"-1"},W={id:"入队出队",tabindex:"-1"},Q=t("p",null,"LinkedBlockingQueue 源码：",-1),q=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"LinkedBlockingQueue"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> "),t("span",{style:{color:"#F97583"}},"extends"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AbstractQueue"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},">")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#F97583"}},"implements"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"BlockingQueue"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},">, java.io."),t("span",{style:{color:"#B392F0"}},"Serializable"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Node"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        E item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        /**")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * 下列三种情况之一")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * - 真正的后继节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * - 自己, 发生在出队时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * - null, 表示是没有后继节点, 是尾节点了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        */")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Node<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> next;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"Node"),t("span",{style:{color:"#E1E4E8"}},"(E "),t("span",{style:{color:"#FFAB70"}},"x"),t("span",{style:{color:"#E1E4E8"}},") { item "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," x; }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"LinkedBlockingQueue"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> "),t("span",{style:{color:"#D73A49"}},"extends"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AbstractQueue"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},">")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#D73A49"}},"implements"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"BlockingQueue"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},">, java.io."),t("span",{style:{color:"#6F42C1"}},"Serializable"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Node"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        E item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        /**")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * 下列三种情况之一")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * - 真正的后继节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * - 自己, 发生在出队时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        * - null, 表示是没有后继节点, 是尾节点了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"        */")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Node<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> next;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"Node"),t("span",{style:{color:"#24292E"}},"(E "),t("span",{style:{color:"#E36209"}},"x"),t("span",{style:{color:"#24292E"}},") { item "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," x; }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),z=t("p",null,[p("入队："),t("strong",null,"尾插法")],-1),_=t("ul",null,[t("li",null,[t("p",null,[p("初始化链表 "),t("code",null,"last = head = new Node<E>(null)"),p("，"),t("strong",null,"Dummy 节点用来占位"),p("，item 为 null")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"LinkedBlockingQueue"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," capacity) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 默认是 Integer.MAX_VALUE")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (capacity "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"IllegalArgumentException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".capacity "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," capacity;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    last "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," Node<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},">("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"LinkedBlockingQueue"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," capacity) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 默认是 Integer.MAX_VALUE")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (capacity "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"IllegalArgumentException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".capacity "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," capacity;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    last "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," Node<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},">("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"当一个节点入队："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"enqueue"),t("span",{style:{color:"#E1E4E8"}},"(Node"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"E"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," node) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 从右向左计算")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    last "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," last.next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," node;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"enqueue"),t("span",{style:{color:"#24292E"}},"(Node"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"E"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," node) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 从右向左计算")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    last "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," last.next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," node;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230720202045345.png",alt:"image-20230720202045345",style:{zoom:"80%"}})]),t("li",null,[t("p",null,[p("再来一个节点入队 "),t("code",null,"last = last.next = node")])])],-1),M=t("p",null,[p("出队："),t("strong",null,"出队头节点"),p("，FIFO")],-1),H=t("ul",null,[t("li",null,[t("p",null,"出队源码："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," E "),t("span",{style:{color:"#B392F0"}},"dequeue"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Node<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> h "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取临头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Node<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> first "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," h.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自己指向自己，help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    h.next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," h;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    head "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," first;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 出队的元素")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    E x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," first.item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【当前节点置为 Dummy 节点】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    first.item "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," E "),t("span",{style:{color:"#6F42C1"}},"dequeue"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Node<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> h "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取临头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Node<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> first "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," h.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自己指向自己，help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    h.next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," h;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    head "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," first;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 出队的元素")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    E x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," first.item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【当前节点置为 Dummy 节点】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    first.item "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"h = head"),p(" → "),t("code",null,"first = h.next")]),t("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230720202208218.png",alt:"image-20230720202208218",style:{zoom:"80%"}})]),t("li",null,[t("p",null,[t("code",null,"h.next = h"),p(" → "),t("code",null,"head = first")]),t("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230720202231300.png",alt:"image-20230720202231300",style:{zoom:"80%"}}),t("ul",null,[t("li",null,[t("code",null,"first.item = null"),p("：当前节点置为 Dummy 节点")])])])],-1),G=t("hr",null,null,-1),V={id:"加锁分析",tabindex:"-1"},Y=t("p",null,"用了两把锁和 dummy 节点：",-1),X=t("ul",null,[t("li",null,"用一把锁，同一时刻，最多只允许有一个线程（生产者或消费者，二选一）执行"),t("li",null,[p("用两把锁，同一时刻，可以允许两个线程同时（一个生产者与一个消费者）执行 "),t("ul",null,[t("li",null,"消费者与消费者线程仍然串行"),t("li",null,"生产者与生产者线程仍然串行")])])],-1),J=t("p",null,"线程安全分析：",-1),$=t("ul",null,[t("li",null,[t("p",null,[p("当节点总数大于 2 时（包括 dummy 节点），"),t("strong",null,"putLock 保证的是 last 节点的线程安全，takeLock 保证的是 head 节点的线程安全"),p("，两把锁保证了入队和出队没有竞争")])]),t("li",null,[t("p",null,"当节点总数等于 2 时（即一个 dummy 节点，一个正常节点）这时候，仍然是两把锁锁两个对象，不会竞争")]),t("li",null,[t("p",null,"当节点总数等于 1 时（就一个 dummy 节点）这时 take 线程会被 notEmpty 条件阻塞，有竞争，会阻塞"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 用于 put(阻塞) offer(非阻塞)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock putLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ReentrantLock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Condition notFull "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," putLock."),t("span",{style:{color:"#B392F0"}},"newCondition"),t("span",{style:{color:"#E1E4E8"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 阻塞等待不满，说明已经满了")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 用于 take(阻塞) poll(非阻塞)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock takeLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ReentrantLock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Condition notEmpty "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," takeLock."),t("span",{style:{color:"#B392F0"}},"newCondition"),t("span",{style:{color:"#E1E4E8"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 阻塞等待不空，说明已经是空的")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 用于 put(阻塞) offer(非阻塞)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock putLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ReentrantLock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Condition notFull "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," putLock."),t("span",{style:{color:"#6F42C1"}},"newCondition"),t("span",{style:{color:"#24292E"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 阻塞等待不满，说明已经满了")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 用于 take(阻塞) poll(非阻塞)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock takeLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ReentrantLock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Condition notEmpty "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," takeLock."),t("span",{style:{color:"#6F42C1"}},"newCondition"),t("span",{style:{color:"#24292E"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 阻塞等待不空，说明已经是空的")])])])])])],-1),K=t("p",null,"入队出队：",-1),Z=t("ul",null,[t("li",null,[t("p",null,"put 操作："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"put"),t("span",{style:{color:"#E1E4E8"}},"(E e) throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 空指针异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (e "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 把待添加的元素封装为 node 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Node<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> node "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," Node<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},">(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取全局生产锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock putLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".putLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// count 用来维护元素计数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," AtomicInteger count "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".count;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取可打断锁，会抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    putLock."),t("span",{style:{color:"#B392F0"}},"lockInterruptibly"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    \t"),t("span",{style:{color:"#6A737D"}},"// 队列满了等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," (count."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," capacity) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【等待队列不满时，就可以生产数据】，线程处于 Waiting")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            notFull."),t("span",{style:{color:"#B392F0"}},"await"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 有空位, 入队且计数加一，尾插法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"enqueue"),t("span",{style:{color:"#E1E4E8"}},"(node);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回自增前的数字")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," count."),t("span",{style:{color:"#B392F0"}},"getAndIncrement"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// put 完队列还有空位, 唤醒其他生产 put 线程，唤醒一个减少竞争")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (c "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," capacity)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            notFull."),t("span",{style:{color:"#B392F0"}},"signal"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 解锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        putLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// c自增前是0，说明生产了一个元素，唤醒一个 take 线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (c "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"signalNotEmpty"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"put"),t("span",{style:{color:"#24292E"}},"(E e) throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 空指针异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (e "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 把待添加的元素封装为 node 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Node<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> node "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," Node<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},">(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取全局生产锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock putLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".putLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// count 用来维护元素计数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," AtomicInteger count "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".count;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取可打断锁，会抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    putLock."),t("span",{style:{color:"#6F42C1"}},"lockInterruptibly"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    \t"),t("span",{style:{color:"#6A737D"}},"// 队列满了等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," (count."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," capacity) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【等待队列不满时，就可以生产数据】，线程处于 Waiting")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            notFull."),t("span",{style:{color:"#6F42C1"}},"await"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 有空位, 入队且计数加一，尾插法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"enqueue"),t("span",{style:{color:"#24292E"}},"(node);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回自增前的数字")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," count."),t("span",{style:{color:"#6F42C1"}},"getAndIncrement"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// put 完队列还有空位, 唤醒其他生产 put 线程，唤醒一个减少竞争")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (c "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," capacity)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            notFull."),t("span",{style:{color:"#6F42C1"}},"signal"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 解锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        putLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// c自增前是0，说明生产了一个元素，唤醒一个 take 线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (c "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"signalNotEmpty"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"signalNotEmpty"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock takeLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".takeLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    takeLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 调用 notEmpty.signal()，而不是 notEmpty.signalAll() 是为了减少竞争，因为只剩下一个元素")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        notEmpty."),t("span",{style:{color:"#B392F0"}},"signal"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        takeLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"signalNotEmpty"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock takeLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".takeLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    takeLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 调用 notEmpty.signal()，而不是 notEmpty.signalAll() 是为了减少竞争，因为只剩下一个元素")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        notEmpty."),t("span",{style:{color:"#6F42C1"}},"signal"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        takeLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"take 操作："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," E "),t("span",{style:{color:"#B392F0"}},"take"),t("span",{style:{color:"#E1E4E8"}},"() throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    E x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 元素个数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," AtomicInteger count "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".count;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取全局消费锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock takeLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".takeLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 可打断锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    takeLock."),t("span",{style:{color:"#B392F0"}},"lockInterruptibly"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有元素可以出队")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," (count."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【阻塞等待队列不空，就可以消费数据】，线程处于 Waiting")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            notEmpty."),t("span",{style:{color:"#B392F0"}},"await"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 出队，计数减一，FIFO，出队头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"dequeue"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回自减前的数字")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," count."),t("span",{style:{color:"#B392F0"}},"getAndDecrement"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 队列还有元素")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (c "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 唤醒一个消费take线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            notEmpty."),t("span",{style:{color:"#B392F0"}},"signal"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        takeLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// c 是消费前的数据，消费前满了，消费一个后还剩一个空位，唤醒生产线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (c "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," capacity)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 调用的是 notFull.signal() 而不是 notFull.signalAll() 是为了减少竞争")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"signalNotFull"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," E "),t("span",{style:{color:"#6F42C1"}},"take"),t("span",{style:{color:"#24292E"}},"() throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    E x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 元素个数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," AtomicInteger count "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".count;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取全局消费锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock takeLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".takeLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 可打断锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    takeLock."),t("span",{style:{color:"#6F42C1"}},"lockInterruptibly"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有元素可以出队")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," (count."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【阻塞等待队列不空，就可以消费数据】，线程处于 Waiting")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            notEmpty."),t("span",{style:{color:"#6F42C1"}},"await"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 出队，计数减一，FIFO，出队头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"dequeue"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回自减前的数字")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," count."),t("span",{style:{color:"#6F42C1"}},"getAndDecrement"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 队列还有元素")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (c "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 唤醒一个消费take线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            notEmpty."),t("span",{style:{color:"#6F42C1"}},"signal"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        takeLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// c 是消费前的数据，消费前满了，消费一个后还剩一个空位，唤醒生产线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (c "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," capacity)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 调用的是 notFull.signal() 而不是 notFull.signalAll() 是为了减少竞争")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"signalNotFull"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),ss=t("hr",null,null,-1),ls={id:"性能比较",tabindex:"-1"},os=t("p",null,"主要列举 LinkedBlockingQueue 与 ArrayBlockingQueue 的性能比较：",-1),ns=t("ul",null,[t("li",null,"Linked 支持有界，Array 强制有界"),t("li",null,"Linked 实现是链表，Array 实现是数组"),t("li",null,"Linked 是懒惰的，而 Array 需要提前初始化 Node 数组"),t("li",null,"Linked 每次入队会生成新 Node，而 Array 的 Node 是提前创建好的"),t("li",null,"Linked 两把锁，Array 一把锁")],-1),as=t("hr",null,null,-1),es={id:"同步队列",tabindex:"-1"},cs={id:"成员属性",tabindex:"-1"},ts=t("p",null,[p("SynchronousQueue 是一个不存储元素的 BlockingQueue，"),t("strong",null,"每一个生产者必须阻塞匹配到一个消费者")],-1),ps=t("p",null,"成员变量：",-1),rs=t("ul",null,[t("li",null,[t("p",null,"运行当前程序的平台拥有 CPU 的数量："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," NCPUS "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Runtime."),t("span",{style:{color:"#B392F0"}},"getRuntime"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"availableProcessors"),t("span",{style:{color:"#E1E4E8"}},"()")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," NCPUS "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Runtime."),t("span",{style:{color:"#6F42C1"}},"getRuntime"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"availableProcessors"),t("span",{style:{color:"#24292E"}},"()")])])])])]),t("li",null,[t("p",null,"指定超时时间后，当前线程最大自旋次数："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 只有一个 CPU 时自旋次数为 0，所有程序都是串行执行，多核 CPU 时自旋 32 次是一个经验值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," maxTimedSpins "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (NCPUS "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"32"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 只有一个 CPU 时自旋次数为 0，所有程序都是串行执行，多核 CPU 时自旋 32 次是一个经验值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," maxTimedSpins "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (NCPUS "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"32"),t("span",{style:{color:"#24292E"}},";")])])])]),t("p",null,"自旋的原因：线程挂起唤醒需要进行上下文切换，涉及到用户态和内核态的转变，是非常消耗资源的。自旋期间线程会一直检查自己的状态是否被匹配到，如果自旋期间被匹配到，那么直接就返回了，如果自旋次数达到某个指标后，还是会将当前线程挂起")]),t("li",null,[t("p",null,"未指定超时时间，当前线程最大自旋次数："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," maxUntimedSpins "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," maxTimedSpins "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"16"),t("span",{style:{color:"#E1E4E8"}},";\t"),t("span",{style:{color:"#6A737D"}},"// maxTimedSpins 的 16 倍")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," maxUntimedSpins "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," maxTimedSpins "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"16"),t("span",{style:{color:"#24292E"}},";\t"),t("span",{style:{color:"#6A737D"}},"// maxTimedSpins 的 16 倍")])])])])]),t("li",null,[t("p",null,"指定超时限制的阈值，小于该值的线程不会被挂起："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," spinForTimeoutThreshold "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1000L"),t("span",{style:{color:"#E1E4E8"}},";\t"),t("span",{style:{color:"#6A737D"}},"// 纳秒")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," spinForTimeoutThreshold "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1000L"),t("span",{style:{color:"#24292E"}},";\t"),t("span",{style:{color:"#6A737D"}},"// 纳秒")])])])]),t("p",null,"超时时间设置的小于该值，就会被禁止挂起，阻塞再唤醒的成本太高，不如选择自旋空转")]),t("li",null,[t("p",null,"转换器："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"transient"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," Transferer<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> transferer;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"abstract"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Transferer"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    /**")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 参数一：可以为 null，null 时表示这个请求是一个 REQUEST 类型的请求，反之是一个 DATA 类型的请求")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 参数二：如果为 true 表示指定了超时时间，如果为 false 表示不支持超时，会一直阻塞到匹配或者被打断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 参数三：超时时间限制，单位是纳秒")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 返回值：返回值如果不为 null 表示匹配成功，DATA 类型的请求返回当前线程 put 的数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * \t     如果返回 null，表示请求超时或被中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    */")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"abstract"),t("span",{style:{color:"#E1E4E8"}}," E "),t("span",{style:{color:"#B392F0"}},"transfer"),t("span",{style:{color:"#E1E4E8"}},"(E "),t("span",{style:{color:"#FFAB70"}},"e"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"timed"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"nanos"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"transient"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," Transferer<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> transferer;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"abstract"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Transferer"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    /**")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 参数一：可以为 null，null 时表示这个请求是一个 REQUEST 类型的请求，反之是一个 DATA 类型的请求")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 参数二：如果为 true 表示指定了超时时间，如果为 false 表示不支持超时，会一直阻塞到匹配或者被打断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 参数三：超时时间限制，单位是纳秒")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * 返回值：返回值如果不为 null 表示匹配成功，DATA 类型的请求返回当前线程 put 的数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    * \t     如果返回 null，表示请求超时或被中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"    */")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"abstract"),t("span",{style:{color:"#24292E"}}," E "),t("span",{style:{color:"#6F42C1"}},"transfer"),t("span",{style:{color:"#24292E"}},"(E "),t("span",{style:{color:"#E36209"}},"e"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"timed"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"nanos"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"构造方法："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"SynchronousQueue"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," fair) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// fair 默认 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 非公平模式实现的数据结构是栈，公平模式的数据结构是队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    transferer "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," fair "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," TransferQueue<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},">() "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," TransferStack<"),t("span",{style:{color:"#F97583"}},"E"),t("span",{style:{color:"#E1E4E8"}},">();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"SynchronousQueue"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," fair) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// fair 默认 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 非公平模式实现的数据结构是栈，公平模式的数据结构是队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    transferer "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," fair "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," TransferQueue<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},">() "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," TransferStack<"),t("span",{style:{color:"#D73A49"}},"E"),t("span",{style:{color:"#24292E"}},">();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"成员方法："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"offer"),t("span",{style:{color:"#E1E4E8"}},"(E e) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (e "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," transferer."),t("span",{style:{color:"#B392F0"}},"transfer"),t("span",{style:{color:"#E1E4E8"}},"(e, "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," E "),t("span",{style:{color:"#B392F0"}},"poll"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," transferer."),t("span",{style:{color:"#B392F0"}},"transfer"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"offer"),t("span",{style:{color:"#24292E"}},"(E e) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (e "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," transferer."),t("span",{style:{color:"#6F42C1"}},"transfer"),t("span",{style:{color:"#24292E"}},"(e, "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," E "),t("span",{style:{color:"#6F42C1"}},"poll"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," transferer."),t("span",{style:{color:"#6F42C1"}},"transfer"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Es=t("hr",null,null,-1),ys={id:"非公实现",tabindex:"-1"},is=t("p",null,"TransferStack 是非公平的同步队列，因为所有的请求都被压入栈中，栈顶的元素会最先得到匹配，造成栈底的等待线程饥饿",-1),us=t("p",null,"TransferStack 类成员变量：",-1),Fs=t("ul",null,[t("li",null,[t("p",null,"请求类型："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示 Node 类型为请求类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," REQUEST    "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示 Node类 型为数据类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," DATA       "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示 Node 类型为匹配中类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 假设栈顶元素为 REQUEST-NODE，当前请求类型为 DATA，入栈会修改类型为 FULFILLING 【栈顶 & 栈顶之下的一个node】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 假设栈顶元素为 DATA-NODE，当前请求类型为 REQUEST，入栈会修改类型为 FULFILLING 【栈顶 & 栈顶之下的一个node】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," FULFILLING "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示 Node 类型为请求类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," REQUEST    "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示 Node类 型为数据类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," DATA       "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示 Node 类型为匹配中类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 假设栈顶元素为 REQUEST-NODE，当前请求类型为 DATA，入栈会修改类型为 FULFILLING 【栈顶 & 栈顶之下的一个node】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 假设栈顶元素为 DATA-NODE，当前请求类型为 REQUEST，入栈会修改类型为 FULFILLING 【栈顶 & 栈顶之下的一个node】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," FULFILLING "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}},";")])])])])]),t("li",null,[t("p",null,"栈顶元素："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," SNode head;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," SNode head;")])])])])])],-1),As=t("p",null,"内部类 SNode：",-1),ds=t("ul",null,[t("li",null,[t("p",null,"成员变量："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"SNode"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 指向下一个栈帧")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," SNode next; ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 与当前 node 匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," SNode match;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 假设当前node对应的线程自旋期间未被匹配成功，那么node对应的线程需要挂起，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 挂起前 waiter 保存对应的线程引用，方便匹配成功后，被唤醒。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," Thread waiter;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 数据域，不为空表示当前 Node 对应的请求类型为 DATA 类型，反之则表示 Node 为 REQUEST 类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Object item; ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示当前Node的模式 【DATA/REQUEST/FULFILLING】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," mode;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"SNode"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 指向下一个栈帧")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," SNode next; ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 与当前 node 匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," SNode match;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 假设当前node对应的线程自旋期间未被匹配成功，那么node对应的线程需要挂起，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 挂起前 waiter 保存对应的线程引用，方便匹配成功后，被唤醒。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," Thread waiter;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 数据域，不为空表示当前 Node 对应的请求类型为 DATA 类型，反之则表示 Node 为 REQUEST 类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Object item; ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示当前Node的模式 【DATA/REQUEST/FULFILLING】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," mode;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"构造方法："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#B392F0"}},"SNode"),t("span",{style:{color:"#E1E4E8"}},"(Object item) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".item "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6F42C1"}},"SNode"),t("span",{style:{color:"#24292E"}},"(Object item) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".item "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[p("设置方法：设置 Node 对象的 next 字段，此处"),t("strong",null,"对 CAS 进行了优化"),p("，提升了 CAS 的效率")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"casNext"),t("span",{style:{color:"#E1E4E8"}},"(SNode cmp, SNode val) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//【优化：cmp == next】，可以提升一部分性能。 cmp == next 不相等，就没必要走 cas指令。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," cmp "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," next "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", nextOffset, cmp, val);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"casNext"),t("span",{style:{color:"#24292E"}},"(SNode cmp, SNode val) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//【优化：cmp == next】，可以提升一部分性能。 cmp == next 不相等，就没必要走 cas指令。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," cmp "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," next "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", nextOffset, cmp, val);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"匹配方法："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"tryMatch"),t("span",{style:{color:"#E1E4E8"}},"(SNode s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前 node 尚未与任何节点发生过匹配，CAS 设置 match 字段为 s 节点，表示当前 node 已经被匹配")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (match "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", matchOffset, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", s)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前 node 如果自旋结束，会 park 阻塞，阻塞前将 node 对应的 Thread 保留到 waiter 字段")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取当前 node 对应的阻塞线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Thread w "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," waiter;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明 node 对应的 Thread 正在阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (w "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            waiter "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 使用 unpark 方式唤醒线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"unpark"),t("span",{style:{color:"#E1E4E8"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 匹配成功返回 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," match "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"tryMatch"),t("span",{style:{color:"#24292E"}},"(SNode s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前 node 尚未与任何节点发生过匹配，CAS 设置 match 字段为 s 节点，表示当前 node 已经被匹配")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (match "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", matchOffset, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", s)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前 node 如果自旋结束，会 park 阻塞，阻塞前将 node 对应的 Thread 保留到 waiter 字段")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取当前 node 对应的阻塞线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Thread w "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," waiter;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明 node 对应的 Thread 正在阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (w "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            waiter "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 使用 unpark 方式唤醒线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"unpark"),t("span",{style:{color:"#24292E"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 匹配成功返回 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," match "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"取消方法："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 取消节点的方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"tryCancel"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// match 字段指向自己，表示这个 node 是取消状态，取消状态的 node，最终会被强制移除出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", matchOffset, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," match "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 取消节点的方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"tryCancel"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// match 字段指向自己，表示这个 node 是取消状态，取消状态的 node，最终会被强制移除出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", matchOffset, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," match "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Ds=t("p",null,"TransferStack 类成员方法：",-1),hs=t("ul",null,[t("li",null,[t("p",null,"snode()：填充节点方法"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," SNode "),t("span",{style:{color:"#B392F0"}},"snode"),t("span",{style:{color:"#E1E4E8"}},"(SNode s, Object e, SNode next, "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," mode) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 引用指向空时，snode 方法会创建一个 SNode 对象 ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"SNode"),t("span",{style:{color:"#E1E4E8"}},"(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 填充数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    s.mode "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," mode;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    s.next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," SNode "),t("span",{style:{color:"#6F42C1"}},"snode"),t("span",{style:{color:"#24292E"}},"(SNode s, Object e, SNode next, "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," mode) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 引用指向空时，snode 方法会创建一个 SNode 对象 ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"SNode"),t("span",{style:{color:"#24292E"}},"(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 填充数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    s.mode "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," mode;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    s.next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"transfer()：核心方法，请求匹配出栈，不匹配阻塞"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"E "),t("span",{style:{color:"#B392F0"}},"transfer"),t("span",{style:{color:"#E1E4E8"}},"(E e, "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timed, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 包装当前线程的 node")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    SNode s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 根据元素判断当前的请求类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," mode "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (e "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," REQUEST "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," DATA;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取栈顶指针")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        SNode h "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"       "),t("span",{style:{color:"#6A737D"}},"// 【CASE1】：当前栈为空或者栈顶 node 模式与当前请求模式一致无法匹配，做入栈操作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (h "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," h.mode "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," mode) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前请求是支持超时的，但是 nanos <= 0 说明这个请求不支持 “阻塞等待”")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (timed "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," nanos "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") { ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 栈顶元素是取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (h "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," h."),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 栈顶出栈，设置新的栈顶")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, h.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 表示【匹配失败】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 入栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"snode"),t("span",{style:{color:"#E1E4E8"}},"(s, e, h, mode))) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 等待被匹配的逻辑，正常情况返回匹配的节点；取消情况返回当前节点，就是 s")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                SNode m "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"awaitFulfill"),t("span",{style:{color:"#E1E4E8"}},"(s, timed, nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 说明当前 node 是【取消状态】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (m "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," s) { ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 将取消节点出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#B392F0"}},"clean"),t("span",{style:{color:"#E1E4E8"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 执行到这说明【匹配成功】了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 栈顶有节点并且 匹配节点还未出栈，需要协助出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ((h "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head) "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," h.next "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," s)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, s.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前 node 模式为 REQUEST 类型，返回匹配节点的 m.item 数据域")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前 node 模式为 DATA 类型：返回 node.item 数据域，当前请求提交的数据 e")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (E) ((mode "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," REQUEST) "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," m.item "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," s.item);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【CASE2】：逻辑到这说明请求模式不一致，如果栈顶不是 FULFILLING 说明没被其他节点匹配，【当前可以匹配】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        } "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"isFulfilling"),t("span",{style:{color:"#E1E4E8"}},"(h.mode)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 头节点是取消节点，match 指向自己，协助出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (h."),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, h.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 入栈当前请求的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, s"),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#B392F0"}},"snode"),t("span",{style:{color:"#E1E4E8"}},"(s, e, h, FULFILLING"),t("span",{style:{color:"#F97583"}},"|"),t("span",{style:{color:"#E1E4E8"}},"mode))) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) { ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// m 是 s 的匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    SNode m "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," s.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// m 节点在 awaitFulfill 方法中被中断，clean 了自己")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (m "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 清空栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(s, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 返回到外层自旋中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 获取匹配节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    SNode mn "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," m.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 尝试匹配，【匹配成功】，则将 fulfilling 和 m 一起出栈，并且唤醒被匹配的节点的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (m."),t("span",{style:{color:"#B392F0"}},"tryMatch"),t("span",{style:{color:"#E1E4E8"}},"(s)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(s, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (E) ((mode "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," REQUEST) "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," m.item "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," s.item);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    } "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 匹配失败，出栈 m")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        s."),t("span",{style:{color:"#B392F0"}},"casNext"),t("span",{style:{color:"#E1E4E8"}},"(m, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【CASE3】：栈顶模式为 FULFILLING 模式，表示【栈顶和栈顶下面的节点正在发生匹配】，当前请求需要做协助工作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        } "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// h 表示的是 fulfilling 节点，m 表示 fulfilling 匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            SNode m "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," h.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (m "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 清空栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                SNode mn "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," m.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// m 和 h 匹配，唤醒 m 中的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (m."),t("span",{style:{color:"#B392F0"}},"tryMatch"),t("span",{style:{color:"#E1E4E8"}},"(h))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(h, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    h."),t("span",{style:{color:"#B392F0"}},"casNext"),t("span",{style:{color:"#E1E4E8"}},"(m, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"E "),t("span",{style:{color:"#6F42C1"}},"transfer"),t("span",{style:{color:"#24292E"}},"(E e, "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timed, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 包装当前线程的 node")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    SNode s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 根据元素判断当前的请求类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," mode "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (e "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," REQUEST "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," DATA;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取栈顶指针")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        SNode h "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"       "),t("span",{style:{color:"#6A737D"}},"// 【CASE1】：当前栈为空或者栈顶 node 模式与当前请求模式一致无法匹配，做入栈操作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (h "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," h.mode "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," mode) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前请求是支持超时的，但是 nanos <= 0 说明这个请求不支持 “阻塞等待”")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (timed "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," nanos "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") { ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 栈顶元素是取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (h "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," h."),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 栈顶出栈，设置新的栈顶")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, h.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 表示【匹配失败】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 入栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"snode"),t("span",{style:{color:"#24292E"}},"(s, e, h, mode))) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 等待被匹配的逻辑，正常情况返回匹配的节点；取消情况返回当前节点，就是 s")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                SNode m "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"awaitFulfill"),t("span",{style:{color:"#24292E"}},"(s, timed, nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 说明当前 node 是【取消状态】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (m "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," s) { ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 将取消节点出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6F42C1"}},"clean"),t("span",{style:{color:"#24292E"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 执行到这说明【匹配成功】了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 栈顶有节点并且 匹配节点还未出栈，需要协助出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ((h "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head) "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," h.next "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," s)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, s.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前 node 模式为 REQUEST 类型，返回匹配节点的 m.item 数据域")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前 node 模式为 DATA 类型：返回 node.item 数据域，当前请求提交的数据 e")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (E) ((mode "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," REQUEST) "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," m.item "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," s.item);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【CASE2】：逻辑到这说明请求模式不一致，如果栈顶不是 FULFILLING 说明没被其他节点匹配，【当前可以匹配】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        } "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"isFulfilling"),t("span",{style:{color:"#24292E"}},"(h.mode)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 头节点是取消节点，match 指向自己，协助出栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (h."),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, h.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 入栈当前请求的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, s"),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#6F42C1"}},"snode"),t("span",{style:{color:"#24292E"}},"(s, e, h, FULFILLING"),t("span",{style:{color:"#D73A49"}},"|"),t("span",{style:{color:"#24292E"}},"mode))) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) { ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// m 是 s 的匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    SNode m "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," s.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// m 节点在 awaitFulfill 方法中被中断，clean 了自己")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (m "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 清空栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(s, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 返回到外层自旋中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 获取匹配节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    SNode mn "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," m.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 尝试匹配，【匹配成功】，则将 fulfilling 和 m 一起出栈，并且唤醒被匹配的节点的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (m."),t("span",{style:{color:"#6F42C1"}},"tryMatch"),t("span",{style:{color:"#24292E"}},"(s)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(s, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (E) ((mode "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," REQUEST) "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," m.item "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," s.item);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    } "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 匹配失败，出栈 m")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        s."),t("span",{style:{color:"#6F42C1"}},"casNext"),t("span",{style:{color:"#24292E"}},"(m, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【CASE3】：栈顶模式为 FULFILLING 模式，表示【栈顶和栈顶下面的节点正在发生匹配】，当前请求需要做协助工作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        } "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// h 表示的是 fulfilling 节点，m 表示 fulfilling 匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            SNode m "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," h.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (m "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 清空栈")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                SNode mn "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," m.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// m 和 h 匹配，唤醒 m 中的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (m."),t("span",{style:{color:"#6F42C1"}},"tryMatch"),t("span",{style:{color:"#24292E"}},"(h))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(h, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    h."),t("span",{style:{color:"#6F42C1"}},"casNext"),t("span",{style:{color:"#24292E"}},"(m, mn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"awaitFulfill()：阻塞当前线程等待被匹配，返回匹配的节点，或者被取消的节点"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"SNode "),t("span",{style:{color:"#B392F0"}},"awaitFulfill"),t("span",{style:{color:"#E1E4E8"}},"(SNode s, "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timed, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 等待的截止时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," deadline "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," timed "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," System."),t("span",{style:{color:"#B392F0"}},"nanoTime"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," nanos "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Thread w "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示当前请求线程在下面的 for(;;) 自旋检查的次数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," spins "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"shouldSpin"),t("span",{style:{color:"#E1E4E8"}},"(s) "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," (timed "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," maxTimedSpins "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," maxUntimedSpins) "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自旋检查逻辑：是否匹配、是否超时、是否被中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前线程收到中断信号，需要设置 node 状态为取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (w."),t("span",{style:{color:"#B392F0"}},"isInterrupted"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            s."),t("span",{style:{color:"#B392F0"}},"tryCancel"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取与当前 s 匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        SNode m "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," s.match;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (m "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 可能是正常的匹配的，也可能是取消的")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," m;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行了超时限制就判断是否超时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (timed) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            nanos "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," deadline "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," System."),t("span",{style:{color:"#B392F0"}},"nanoTime"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【超时了，取消节点】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (nanos "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                s."),t("span",{style:{color:"#B392F0"}},"tryCancel"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 说明当前线程还可以进行自旋检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (spins "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 自旋一次 递减 1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            spins "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"shouldSpin"),t("span",{style:{color:"#E1E4E8"}},"(s) "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," (spins "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 说明没有自旋次数了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s.waiter "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"//【把当前 node 对应的 Thread 保存到 node.waiter 字段中，要阻塞了】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            s.waiter "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," w;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有超时限制直接阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"timed)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"park"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// nanos > 1000 纳秒的情况下，才允许挂起当前线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (nanos "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," spinForTimeoutThreshold)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"parkNanos"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"SNode "),t("span",{style:{color:"#6F42C1"}},"awaitFulfill"),t("span",{style:{color:"#24292E"}},"(SNode s, "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timed, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 等待的截止时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," deadline "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," timed "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," System."),t("span",{style:{color:"#6F42C1"}},"nanoTime"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," nanos "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Thread w "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示当前请求线程在下面的 for(;;) 自旋检查的次数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," spins "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"shouldSpin"),t("span",{style:{color:"#24292E"}},"(s) "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," (timed "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," maxTimedSpins "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," maxUntimedSpins) "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自旋检查逻辑：是否匹配、是否超时、是否被中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前线程收到中断信号，需要设置 node 状态为取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (w."),t("span",{style:{color:"#6F42C1"}},"isInterrupted"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            s."),t("span",{style:{color:"#6F42C1"}},"tryCancel"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取与当前 s 匹配的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        SNode m "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," s.match;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (m "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 可能是正常的匹配的，也可能是取消的")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," m;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行了超时限制就判断是否超时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (timed) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            nanos "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," deadline "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," System."),t("span",{style:{color:"#6F42C1"}},"nanoTime"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【超时了，取消节点】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (nanos "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                s."),t("span",{style:{color:"#6F42C1"}},"tryCancel"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 说明当前线程还可以进行自旋检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (spins "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 自旋一次 递减 1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            spins "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"shouldSpin"),t("span",{style:{color:"#24292E"}},"(s) "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," (spins "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 说明没有自旋次数了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s.waiter "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"//【把当前 node 对应的 Thread 保存到 node.waiter 字段中，要阻塞了】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            s.waiter "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," w;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有超时限制直接阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"timed)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"park"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// nanos > 1000 纳秒的情况下，才允许挂起当前线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (nanos "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," spinForTimeoutThreshold)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"parkNanos"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"shouldSpin"),t("span",{style:{color:"#E1E4E8"}},"(SNode s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取栈顶")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    SNode h "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件一成立说明当前 s 就是栈顶，允许自旋检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件二成立说明当前 s 节点自旋检查期间，又来了一个与当前 s 节点匹配的请求，双双出栈后条件会成立")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件三成立前提当前 s 不是栈顶元素，并且当前栈顶正在匹配中，这种状态栈顶下面的元素，都允许自旋检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (h "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," h "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isFulfilling"),t("span",{style:{color:"#E1E4E8"}},"(h.mode));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"shouldSpin"),t("span",{style:{color:"#24292E"}},"(SNode s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取栈顶")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    SNode h "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件一成立说明当前 s 就是栈顶，允许自旋检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件二成立说明当前 s 节点自旋检查期间，又来了一个与当前 s 节点匹配的请求，双双出栈后条件会成立")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件三成立前提当前 s 不是栈顶元素，并且当前栈顶正在匹配中，这种状态栈顶下面的元素，都允许自旋检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (h "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," h "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isFulfilling"),t("span",{style:{color:"#24292E"}},"(h.mode));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"clear()：指定节点出栈"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"clean"),t("span",{style:{color:"#E1E4E8"}},"(SNode s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 清空数据域和关联线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    s.item "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    s.waiter "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 获取取消节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    SNode past "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," s.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判断后继节点是不是取消节点，是就更新 past")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (past "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," past."),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        past "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," past.next;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    SNode p;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 从栈顶开始向下检查，【将栈顶开始向下的 取消状态 的节点全部清理出去】，直到碰到 past 或者不是取消状态为止")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," ((p "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head) "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," p "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," past "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," p."),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 修改的是内存地址对应的值，p 指向该内存地址所以数据一直在变化")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"casHead"),t("span",{style:{color:"#E1E4E8"}},"(p, p.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 说明中间遇到了不是取消状态的节点，继续迭代下去")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," (p "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," p "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," past) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        SNode n "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," p.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (n "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," n."),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            p."),t("span",{style:{color:"#B392F0"}},"casNext"),t("span",{style:{color:"#E1E4E8"}},"(n, n.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            p "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"clean"),t("span",{style:{color:"#24292E"}},"(SNode s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 清空数据域和关联线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    s.item "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    s.waiter "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 获取取消节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    SNode past "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," s.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判断后继节点是不是取消节点，是就更新 past")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (past "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," past."),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        past "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," past.next;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    SNode p;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 从栈顶开始向下检查，【将栈顶开始向下的 取消状态 的节点全部清理出去】，直到碰到 past 或者不是取消状态为止")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," ((p "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head) "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," p "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," past "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," p."),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 修改的是内存地址对应的值，p 指向该内存地址所以数据一直在变化")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"casHead"),t("span",{style:{color:"#24292E"}},"(p, p.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 说明中间遇到了不是取消状态的节点，继续迭代下去")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," (p "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," p "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," past) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        SNode n "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," p.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (n "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," n."),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            p."),t("span",{style:{color:"#6F42C1"}},"casNext"),t("span",{style:{color:"#24292E"}},"(n, n.next);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            p "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Cs=t("hr",null,null,-1),ks={id:"公平实现",tabindex:"-1"},gs=t("p",null,"TransferQueue 是公平的同步队列，采用 FIFO 的队列实现，请求节点与队尾模式不同，需要与队头发生匹配",-1),fs=t("p",null,"TransferQueue 类成员变量：",-1),ms=t("ul",null,[t("li",null,[t("p",null,"指向队列的 dummy 节点："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"transient"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," QNode head;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"transient"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," QNode head;")])])])])]),t("li",null,[t("p",null,"指向队列的尾节点："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"transient"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," QNode tail;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"transient"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," QNode tail;")])])])])]),t("li",null,[t("p",null,"被清理节点的前驱节点："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"transient"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," QNode cleanMe;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"transient"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," QNode cleanMe;")])])])]),t("p",null,[p("入队操作是两步完成的，第一步是 "),t("code",null,"t.next = newNode"),p("，第二步是 "),t("code",null,"tail = newNode"),p("，所以队尾节点出队，是一种非常特殊的情况")])])],-1),vs=t("p",null,"TransferQueue 内部类：",-1),bs=t("ul",null,[t("li",null,[t("p",null,"QNode："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"QNode"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 指向当前节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," QNode next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 数据域，Node 代表的是 DATA 类型 item 表示数据，否则 Node 代表的 REQUEST 类型，item == null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," Object item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 假设当前 node 对应的线程自旋期间未被匹配成功，那么 node 对应的线程需要挂起，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 挂起前 waiter 保存对应的线程引用，方便匹配成功后被唤醒。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," Thread waiter;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// true 当前 Node 是一个 DATA 类型，false 表示当前 Node 是一个 REQUEST 类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," isData;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 构建方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"QNode"),t("span",{style:{color:"#E1E4E8"}},"(Object "),t("span",{style:{color:"#FFAB70"}},"item"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"isData"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".item "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".isData "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," isData;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 尝试取消当前 node，取消状态的 node 的 item 域指向自己")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"tryCancel"),t("span",{style:{color:"#E1E4E8"}},"(Object "),t("span",{style:{color:"#FFAB70"}},"cmp"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", itemOffset, cmp, "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判断当前 node 是否为取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," item "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判断当前节点是否 “不在” 队列内，当 next 指向自己时，说明节点已经出队。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isOffList"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," next "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"QNode"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 指向当前节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," QNode next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 数据域，Node 代表的是 DATA 类型 item 表示数据，否则 Node 代表的 REQUEST 类型，item == null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," Object item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 假设当前 node 对应的线程自旋期间未被匹配成功，那么 node 对应的线程需要挂起，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 挂起前 waiter 保存对应的线程引用，方便匹配成功后被唤醒。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," Thread waiter;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// true 当前 Node 是一个 DATA 类型，false 表示当前 Node 是一个 REQUEST 类型")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," isData;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 构建方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"QNode"),t("span",{style:{color:"#24292E"}},"(Object "),t("span",{style:{color:"#E36209"}},"item"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"isData"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".item "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".isData "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," isData;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 尝试取消当前 node，取消状态的 node 的 item 域指向自己")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"tryCancel"),t("span",{style:{color:"#24292E"}},"(Object "),t("span",{style:{color:"#E36209"}},"cmp"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", itemOffset, cmp, "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判断当前 node 是否为取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," item "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判断当前节点是否 “不在” 队列内，当 next 指向自己时，说明节点已经出队。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isOffList"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," next "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Bs=t("p",null,"TransferQueue 类成员方法：",-1),Ts=t("ul",null,[t("li",null,[t("p",null,"设置头尾节点："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"advanceHead"),t("span",{style:{color:"#E1E4E8"}},"(QNode h, QNode nh) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 设置头指针指向新的节点，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (h "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," head "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", headOffset, h, nh))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 老的头节点出队")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        h.next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," h;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"advanceTail"),t("span",{style:{color:"#E1E4E8"}},"(QNode t, QNode nt) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (tail "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," t)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 更新队尾节点为新的队尾")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", tailOffset, t, nt);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"advanceHead"),t("span",{style:{color:"#24292E"}},"(QNode h, QNode nh) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 设置头指针指向新的节点，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (h "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," head "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", headOffset, h, nh))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 老的头节点出队")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        h.next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," h;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"advanceTail"),t("span",{style:{color:"#24292E"}},"(QNode t, QNode nt) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (tail "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," t)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 更新队尾节点为新的队尾")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", tailOffset, t, nt);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"transfer()：核心方法"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"E "),t("span",{style:{color:"#B392F0"}},"transfer"),t("span",{style:{color:"#E1E4E8"}},"(E e, "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timed, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// s 指向当前请求对应的 node")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    QNode s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 是否是 DATA 类型的请求")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," isData "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (e "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        QNode t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," tail;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        QNode h "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," h "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// head 和 tail 同时指向 dummy 节点，说明是空队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 队尾节点与当前请求类型是一致的情况，说明阻塞队列中都无法匹配，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (h "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," t "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," t.isData "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," isData) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取队尾 t 的 next 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            QNode tn "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," t.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 多线程环境中其他线程可能修改尾节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," tail)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 已经有线程入队了，更新 tail")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (tn "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"advanceTail"),t("span",{style:{color:"#E1E4E8"}},"(t, tn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 允许超时，超时时间小于 0，这种方法不支持阻塞等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (timed "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," nanos "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 创建 node 的逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"QNode"),t("span",{style:{color:"#E1E4E8"}},"(e, isData);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 将 node 添加到队尾")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"t."),t("span",{style:{color:"#B392F0"}},"casNext"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", s))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 更新队尾指针")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"advanceTail"),t("span",{style:{color:"#E1E4E8"}},"(t, s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前节点 等待匹配....")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Object x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"awaitFulfill"),t("span",{style:{color:"#E1E4E8"}},"(s, e, timed, nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 说明【当前 node 状态为 取消状态】，需要做出队逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"clean"),t("span",{style:{color:"#E1E4E8"}},"(t, s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 说明当前 node 仍然在队列内，匹配成功，需要做出队逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"s."),t("span",{style:{color:"#B392F0"}},"isOffList"),t("span",{style:{color:"#E1E4E8"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// t 是当前 s 节点的前驱节点，判断 t 是不是头节点，是就更新 dummy 节点为 s 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"advanceHead"),t("span",{style:{color:"#E1E4E8"}},"(t, s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// s 节点已经出队，所以需要把它的 item 域设置为它自己，表示它是个取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    s.item "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                s.waiter "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," (E)x "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 队尾节点与当前请求节点【互补匹配】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        } "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// h.next 节点，【请求节点与队尾模式不同，需要与队头发生匹配】，TransferQueue 是一个【公平模式】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            QNode m "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," h.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 并发导致其他线程修改了队尾节点，或者已经把 head.next 匹配走了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," tail "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," m "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," h "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," head)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 获取匹配节点的数据域保存到 x")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Object x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," m.item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 判断是否匹配成功")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (isData "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                x "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," m "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"m."),t("span",{style:{color:"#B392F0"}},"casItem"),t("span",{style:{color:"#E1E4E8"}},"(x, e)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"advanceHead"),t("span",{style:{color:"#E1E4E8"}},"(h, m);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 【匹配完成】，将头节点出队，让这个新的头结点成为 dummy 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"advanceHead"),t("span",{style:{color:"#E1E4E8"}},"(h, m);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 唤醒该匹配节点的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"unpark"),t("span",{style:{color:"#E1E4E8"}},"(m.waiter);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," (E)x "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"E "),t("span",{style:{color:"#6F42C1"}},"transfer"),t("span",{style:{color:"#24292E"}},"(E e, "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timed, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// s 指向当前请求对应的 node")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    QNode s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 是否是 DATA 类型的请求")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," isData "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (e "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        QNode t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," tail;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        QNode h "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," h "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// head 和 tail 同时指向 dummy 节点，说明是空队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 队尾节点与当前请求类型是一致的情况，说明阻塞队列中都无法匹配，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (h "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," t "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," t.isData "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," isData) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取队尾 t 的 next 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            QNode tn "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," t.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 多线程环境中其他线程可能修改尾节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," tail)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 已经有线程入队了，更新 tail")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (tn "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"advanceTail"),t("span",{style:{color:"#24292E"}},"(t, tn);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 允许超时，超时时间小于 0，这种方法不支持阻塞等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (timed "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," nanos "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 创建 node 的逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"QNode"),t("span",{style:{color:"#24292E"}},"(e, isData);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 将 node 添加到队尾")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"t."),t("span",{style:{color:"#6F42C1"}},"casNext"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", s))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 更新队尾指针")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"advanceTail"),t("span",{style:{color:"#24292E"}},"(t, s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前节点 等待匹配....")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Object x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"awaitFulfill"),t("span",{style:{color:"#24292E"}},"(s, e, timed, nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 说明【当前 node 状态为 取消状态】，需要做出队逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"clean"),t("span",{style:{color:"#24292E"}},"(t, s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 说明当前 node 仍然在队列内，匹配成功，需要做出队逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"s."),t("span",{style:{color:"#6F42C1"}},"isOffList"),t("span",{style:{color:"#24292E"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// t 是当前 s 节点的前驱节点，判断 t 是不是头节点，是就更新 dummy 节点为 s 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"advanceHead"),t("span",{style:{color:"#24292E"}},"(t, s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// s 节点已经出队，所以需要把它的 item 域设置为它自己，表示它是个取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    s.item "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                s.waiter "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," (E)x "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 队尾节点与当前请求节点【互补匹配】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        } "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// h.next 节点，【请求节点与队尾模式不同，需要与队头发生匹配】，TransferQueue 是一个【公平模式】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            QNode m "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," h.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 并发导致其他线程修改了队尾节点，或者已经把 head.next 匹配走了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," tail "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," m "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," h "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," head)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 获取匹配节点的数据域保存到 x")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Object x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," m.item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 判断是否匹配成功")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (isData "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                x "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," m "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"m."),t("span",{style:{color:"#6F42C1"}},"casItem"),t("span",{style:{color:"#24292E"}},"(x, e)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"advanceHead"),t("span",{style:{color:"#24292E"}},"(h, m);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 【匹配完成】，将头节点出队，让这个新的头结点成为 dummy 节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"advanceHead"),t("span",{style:{color:"#24292E"}},"(h, m);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 唤醒该匹配节点的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"unpark"),t("span",{style:{color:"#24292E"}},"(m.waiter);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," (E)x "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"awaitFulfill()"),p("：阻塞当前线程等待被匹配")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"Object "),t("span",{style:{color:"#B392F0"}},"awaitFulfill"),t("span",{style:{color:"#E1E4E8"}},"(QNode s, E e, "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timed, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示等待截止时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," deadline "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," timed "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," System."),t("span",{style:{color:"#B392F0"}},"nanoTime"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," nanos "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Thread w "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自选检查的次数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," spins "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ((head.next "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," s) "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," (timed "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," maxTimedSpins "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," maxUntimedSpins) "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 被打断就取消节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (w."),t("span",{style:{color:"#B392F0"}},"isInterrupted"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            s."),t("span",{style:{color:"#B392F0"}},"tryCancel"),t("span",{style:{color:"#E1E4E8"}},"(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取当前 Node 数据域")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Object x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," s.item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前请求为 DATA 模式时：e 请求带来的数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item 修改为 this，说明当前 QNode 对应的线程 取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item 修改为 null 表示已经有匹配节点了，并且匹配节点拿走了 item 数据")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前请求为 REQUEST 模式时：e == null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item 修改为 this，说明当前 QNode 对应的线程 取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item != null 且 item != this  表示当前 REQUEST 类型的 Node 已经匹配到 DATA 了 ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," e)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 超时检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (timed) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            nanos "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," deadline "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," System."),t("span",{style:{color:"#B392F0"}},"nanoTime"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (nanos "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                s."),t("span",{style:{color:"#B392F0"}},"tryCancel"),t("span",{style:{color:"#E1E4E8"}},"(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 自旋次数减一")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (spins "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"--"),t("span",{style:{color:"#E1E4E8"}},"spins;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有自旋次数了，把当前线程封装进去 waiter")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s.waiter "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            s.waiter "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," w;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"timed)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"park"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (nanos "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," spinForTimeoutThreshold)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"parkNanos"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"Object "),t("span",{style:{color:"#6F42C1"}},"awaitFulfill"),t("span",{style:{color:"#24292E"}},"(QNode s, E e, "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timed, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," nanos) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示等待截止时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," deadline "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," timed "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," System."),t("span",{style:{color:"#6F42C1"}},"nanoTime"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," nanos "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Thread w "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自选检查的次数")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," spins "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ((head.next "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," s) "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," (timed "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," maxTimedSpins "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," maxUntimedSpins) "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 被打断就取消节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (w."),t("span",{style:{color:"#6F42C1"}},"isInterrupted"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            s."),t("span",{style:{color:"#6F42C1"}},"tryCancel"),t("span",{style:{color:"#24292E"}},"(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取当前 Node 数据域")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Object x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," s.item;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前请求为 DATA 模式时：e 请求带来的数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item 修改为 this，说明当前 QNode 对应的线程 取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item 修改为 null 表示已经有匹配节点了，并且匹配节点拿走了 item 数据")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前请求为 REQUEST 模式时：e == null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item 修改为 this，说明当前 QNode 对应的线程 取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// s.item != null 且 item != this  表示当前 REQUEST 类型的 Node 已经匹配到 DATA 了 ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," e)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 超时检查")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (timed) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            nanos "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," deadline "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," System."),t("span",{style:{color:"#6F42C1"}},"nanoTime"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (nanos "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                s."),t("span",{style:{color:"#6F42C1"}},"tryCancel"),t("span",{style:{color:"#24292E"}},"(e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 自旋次数减一")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (spins "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"--"),t("span",{style:{color:"#24292E"}},"spins;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有自旋次数了，把当前线程封装进去 waiter")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s.waiter "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            s.waiter "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," w;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"timed)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"park"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (nanos "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," spinForTimeoutThreshold)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"parkNanos"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Ss=t("hr",null,null,-1),ws={id:"操作pool",tabindex:"-1"},xs={id:"创建方式",tabindex:"-1"},Ns={id:"executor",tabindex:"-1"},Is=t("p",null,"存放线程的容器：",-1),Os=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," HashSet<"),t("span",{style:{color:"#F97583"}},"Worker"),t("span",{style:{color:"#E1E4E8"}},"> workers "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," HashSet<"),t("span",{style:{color:"#F97583"}},"Worker"),t("span",{style:{color:"#E1E4E8"}},">();")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," HashSet<"),t("span",{style:{color:"#D73A49"}},"Worker"),t("span",{style:{color:"#24292E"}},"> workers "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," HashSet<"),t("span",{style:{color:"#D73A49"}},"Worker"),t("span",{style:{color:"#24292E"}},">();")])])])],-1),Rs=t("p",null,"构造方法：",-1),Ls=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ThreadPoolExecutor"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                          "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," maximumPoolSize,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                          "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," keepAliveTime,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                          TimeUnit unit,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                          BlockingQueue"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"Runnable"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," workQueue,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                          ThreadFactory threadFactory,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                          RejectedExecutionHandler handler)")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ThreadPoolExecutor"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," corePoolSize,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                          "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," maximumPoolSize,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                          "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," keepAliveTime,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                          TimeUnit unit,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                          BlockingQueue"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"Runnable"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," workQueue,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                          ThreadFactory threadFactory,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                          RejectedExecutionHandler handler)")])])])],-1),js=t("p",null,"参数介绍：",-1),Ps=t("ul",null,[t("li",null,[t("p",null,"corePoolSize：核心线程数，定义了最小可以同时运行的线程数量")]),t("li",null,[t("p",null,"maximumPoolSize：最大线程数，当队列中存放的任务达到队列容量时，当前可以同时运行的数量变为最大线程数，创建线程并立即执行最新的任务，与核心线程数之间的差值又叫救急线程数")]),t("li",null,[t("p",null,[p("keepAliveTime：救急线程最大存活时间，当线程池中的线程数量大于 "),t("code",null,"corePoolSize"),p(" 的时候，如果这时没有新的任务提交，核心线程外的线程不会立即销毁，而是会等到 "),t("code",null,"keepAliveTime"),p(" 时间超过销毁")])]),t("li",null,[t("p",null,[p("unit："),t("code",null,"keepAliveTime"),p(" 参数的时间单位")])]),t("li",null,[t("p",null,"workQueue：阻塞队列，存放被提交但尚未被执行的任务")]),t("li",null,[t("p",null,"threadFactory：线程工厂，创建新线程时用到，可以为线程创建时起名字")]),t("li",null,[t("p",null,"handler：拒绝策略，线程到达最大线程数仍有新任务时会执行拒绝策略"),t("p",null,"RejectedExecutionHandler 下有 4 个实现类："),t("ul",null,[t("li",null,[p("AbortPolicy：让调用者抛出 RejectedExecutionException 异常，"),t("strong",null,"默认策略")]),t("li",null,"CallerRunsPolicy：让调用者运行的调节机制，将某些任务回退到调用者，从而降低新任务的流量"),t("li",null,"DiscardPolicy：直接丢弃任务，不予任何处理也不抛出异常"),t("li",null,"DiscardOldestPolicy：放弃队列中最早的任务，把当前任务加入队列中尝试再次提交当前任务")]),t("p",null,"补充：其他框架拒绝策略"),t("ul",null,[t("li",null,"Dubbo：在抛出 RejectedExecutionException 异常前记录日志，并 dump 线程栈信息，方便定位问题"),t("li",null,"Netty：创建一个新线程来执行任务"),t("li",null,"ActiveMQ：带超时等待（60s）尝试放入队列"),t("li",null,"PinPoint：它使用了一个拒绝策略链，会逐一尝试策略链中每种拒绝策略")])])],-1),Us=t("p",null,"工作原理：",-1),Ws=t("img",{src:"https://jsd.cdn.zzko.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824172606265.png",alt:"image-20230824172606265",style:{zoom:"80%"}},null,-1),Qs=t("ol",null,[t("li",null,[t("p",null,[p("创建线程池，这时没有创建线程（"),t("strong",null,"懒惰"),p("），等待提交过来的任务请求，调用 execute 方法才会创建线程")])]),t("li",null,[t("p",null,"当调用 execute() 方法添加一个请求任务时，线程池会做如下判断："),t("ul",null,[t("li",null,"如果正在运行的线程数量小于 corePoolSize，那么马上创建线程运行这个任务"),t("li",null,"如果正在运行的线程数量大于或等于 corePoolSize，那么将这个任务放入队列"),t("li",null,[p("如果这时队列满了且正在运行的线程数量还小于 maximumPoolSize，那么会创建非核心线程"),t("strong",null,"立刻运行这个任务"),p("，对于阻塞队列中的任务不公平。这是因为创建每个 Worker（线程）对象会绑定一个初始任务，启动 Worker 时会优先执行")]),t("li",null,[p("如果队列满了且正在运行的线程数量大于或等于 maximumPoolSize，那么线程池会启动饱和"),t("strong",null,"拒绝策略"),p("来执行")])])]),t("li",null,[t("p",null,"当一个线程完成任务时，会从队列中取下一个任务来执行")]),t("li",null,[t("p",null,"当一个线程空闲超过一定的时间（keepAliveTime）时，线程池会判断：如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉，所以线程池的所有任务完成后最终会收缩到 corePoolSize 大小")])],-1),qs=t("hr",null,null,-1),zs={id:"executors",tabindex:"-1"},_s=t("p",null,"Executors 提供了四种线程池的创建：newCachedThreadPool、newFixedThreadPool、newSingleThreadExecutor、newScheduledThreadPool",-1),Ms=t("ul",null,[t("li",null,[t("p",null,"newFixedThreadPool：创建一个拥有 n 个线程的线程池"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," ExecutorService "),t("span",{style:{color:"#B392F0"}},"newFixedThreadPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," nThreads) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ThreadPoolExecutor"),t("span",{style:{color:"#E1E4E8"}},"(nThreads, nThreads, "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.MILLISECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                  "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," LinkedBlockingQueue<"),t("span",{style:{color:"#F97583"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}},">());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," ExecutorService "),t("span",{style:{color:"#6F42C1"}},"newFixedThreadPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," nThreads) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ThreadPoolExecutor"),t("span",{style:{color:"#24292E"}},"(nThreads, nThreads, "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},", TimeUnit.MILLISECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                  "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," LinkedBlockingQueue<"),t("span",{style:{color:"#D73A49"}},"Runnable"),t("span",{style:{color:"#24292E"}},">());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("ul",null,[t("li",null,"核心线程数 == 最大线程数（没有救急线程被创建），因此也无需超时时间"),t("li",null,[p("LinkedBlockingQueue 是一个单向链表实现的阻塞队列，默认大小为 "),t("code",null,"Integer.MAX_VALUE"),p("，也就是无界队列，可以放任意数量的任务，在任务比较多的时候会导致 OOM（内存溢出）")]),t("li",null,"适用于任务量已知，相对耗时的长期任务")])]),t("li",null,[t("p",null,"newCachedThreadPool：创建一个可扩容的线程池"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," ExecutorService "),t("span",{style:{color:"#B392F0"}},"newCachedThreadPool"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ThreadPoolExecutor"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},", Integer.MAX_VALUE, "),t("span",{style:{color:"#79B8FF"}},"60L"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.SECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                  "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," SynchronousQueue<"),t("span",{style:{color:"#F97583"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}},">());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," ExecutorService "),t("span",{style:{color:"#6F42C1"}},"newCachedThreadPool"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ThreadPoolExecutor"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},", Integer.MAX_VALUE, "),t("span",{style:{color:"#005CC5"}},"60L"),t("span",{style:{color:"#24292E"}},", TimeUnit.SECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                  "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," SynchronousQueue<"),t("span",{style:{color:"#D73A49"}},"Runnable"),t("span",{style:{color:"#24292E"}},">());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("ul",null,[t("li",null,[t("p",null,[p("核心线程数是 0， 最大线程数是 29 个 1，全部都是救急线程（60s 后可以回收），可能会创建大量线程，从而导致 "),t("strong",null,"OOM")])]),t("li",null,[t("p",null,"SynchronousQueue 作为阻塞队列，没有容量，对于每一个 take 的线程会阻塞直到有一个 put 的线程放入元素为止（类似一手交钱、一手交货）")]),t("li",null,[t("p",null,"适合任务数比较密集，但每个任务执行时间较短的情况")])])]),t("li",null,[t("p",null,"newSingleThreadExecutor：创建一个只有 1 个线程的单线程池"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," ExecutorService "),t("span",{style:{color:"#B392F0"}},"newSingleThreadExecutor"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," FinalizableDelegatedExecutorService")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ("),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ThreadPoolExecutor"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},","),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.MILLISECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," LinkedBlockingQueue<"),t("span",{style:{color:"#F97583"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}},">()));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," ExecutorService "),t("span",{style:{color:"#6F42C1"}},"newSingleThreadExecutor"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," FinalizableDelegatedExecutorService")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ("),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ThreadPoolExecutor"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},","),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},", TimeUnit.MILLISECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," LinkedBlockingQueue<"),t("span",{style:{color:"#D73A49"}},"Runnable"),t("span",{style:{color:"#24292E"}},">()));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("ul",null,[t("li",null,[p("保证所有任务按照"),t("strong",null,"指定顺序执行"),p("，线程数固定为 1，任务数多于 1 时会放入无界队列排队，任务执行完毕，这唯一的线程也不会被释放")])])])],-1),Hs=t("p",null,"对比：",-1),Gs=t("ul",null,[t("li",null,[t("p",null,"创建一个单线程串行执行任务，如果任务执行失败而终止那么没有任何补救措施，线程池会新建一个线程，保证池的正常工作")]),t("li",null,[t("p",null,[t("code",null,"Executors.newSingleThreadExecutor()"),p(" 线程个数始终为 1，不能修改。"),t("code",null,"FinalizableDelegatedExecutorService"),p(" 应用的是装饰器模式，只对外暴露了 ExecutorService 接口，因此不能调用 ThreadPoolExecutor 中特有的方法")]),t("p",null,"原因：父类不能直接调用子类中的方法，需要反射或者创建对象的方式，可以调用子类静态方法")]),t("li",null,[t("p",null,[t("code",null,"Executors.newFixedThreadPool(1)"),p(" 初始时为 1，可以修改。对外暴露的是 ThreadPoolExecutor 对象，可以强转后调用 setCorePoolSize 等方法进行修改")])])],-1),Vs=t("figure",null,[t("img",{src:"https://jsd.cdn.zzko.cn/gh/imLKlauS/blog-picture@main/blogs/JUC-newSingleThreadExecutor.png",alt:"",loading:"lazy",decoding:"async"})],-1),Ys=t("hr",null,null,-1),Xs={id:"开发要求",tabindex:"-1"},Js=t("p",null,[p("阿里巴巴 "),t("code",null,"Java"),p(" 开发手册要求：")],-1),$s=t("ul",null,[t("li",null,[t("p",null,[t("strong",null,"线程资源必须通过线程池提供，不允许在应用中自行显式创建线程")]),t("ul",null,[t("li",null,[t("p",null,"使用线程池的好处是减少在创建和销毁线程上所消耗的时间以及系统资源的开销，解决资源不足的问题")]),t("li",null,[t("p",null,"如果不使用线程池，有可能造成系统创建大量同类线程而导致消耗完内存或者过度切换的问题")]),t("li",null,[t("p",null,"线程池不允许使用 Executors 去创建，而是通过 ThreadPoolExecutor 的方式，这样的处理方式更加明确线程池的运行规则，规避资源耗尽的风险")])])]),t("li",null,[t("p",null,"Executors 返回的线程池对象弊端如下："),t("ul",null,[t("li",null,[t("p",null,[p("FixedThreadPool 和 SingleThreadPool：请求队列长度为 "),t("code",null,"Integer.MAX_VALUE"),p("，可能会堆积大量的请求，从而导致 OOM")])]),t("li",null,[t("p",null,[p("CacheThreadPool 和 ScheduledThreadPool：允许创建线程数量为 "),t("code",null,"Integer.MAX_VALUE"),p("，可能会创建大量的线程，导致 OOM")])])])])],-1),Ks=t("p",null,"创建多大容量的线程池合适？",-1),Zs=t("ul",null,[t("li",null,[t("p",null,[p("一般来说池中"),t("strong",null,"总线程数是核心池线程数量两倍"),p("，确保当核心池有线程停止时，核心池外有线程进入核心池")])]),t("li",null,[t("p",null,"过小会导致程序不能充分地利用系统资源、容易导致饥饿")]),t("li",null,[t("p",null,"过大会导致更多的线程上下文切换，占用更多内存")])],-1),sl=t("p",null,"上下文切换：当前任务在执行完 CPU 时间片切换到另一个任务之前会先保存自己的状态，以便下次再切换回这个任务时，可以再加载这个任务的状态，任务从保存到再加载的过程就是一次上下文切换",-1),ll=t("p",null,"核心线程数常用公式：",-1),ol=t("ul",null,[t("li",null,[t("p",null,[t("strong",null,"CPU 密集型任务 (N+1)："),p(" 这种任务消耗的是 CPU 资源，可以将核心线程数设置为 N (CPU 核心数) + 1，比 CPU 核心数多出来的一个线程是为了防止线程发生缺页中断，或者其它原因导致的任务暂停而带来的影响。一旦任务暂停，CPU 某个核心就会处于空闲状态，而在这种情况下多出来的一个线程就可以充分利用 CPU 的空闲时间")])]),t("li",null,[t("p",null,"CPU 密集型简单理解就是利用 CPU 计算能力的任务比如在内存中对大量数据进行分析")]),t("li",null,[t("p",null,[t("strong",null,[t("code",null,"I/O"),p(" 密集型任务：")]),p(" 这种系统 CPU 处于阻塞状态，用大部分的时间来处理 "),t("code",null,"I/O"),p(" 交互，而线程在处理 "),t("code",null,"I/O"),p(" 的时间段内不会占用 CPU 来处理，这时就可以将 CPU 交出给其它线程使用，因此在 "),t("code",null,"I/O"),p(" 密集型任务的应用中，我们可以多配置一些线程，具体的计算方法是 2N 或 "),t("code",null,"CPU 核数/ (1-阻塞系数)"),p("，阻塞系数在 0.8~0.9 之间")])])],-1),nl=t("p",null,"IO 密集型就是涉及到网络读取，文件读取此类任务 ，特点是 CPU 计算耗费时间相比于等待 IO 操作完成的时间来说很少，大部分时间都花在了等待 IO 操作完成上",-1),al=t("hr",null,null,-1),el={id:"提交方法",tabindex:"-1"},cl=t("p",null,"ExecutorService 类 API：",-1),tl=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"方法"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,[t("code",null,"void execute(Runnable command)")]),t("td",null,"执行任务（Executor 类 API）")]),t("tr",null,[t("td",null,[t("code",null,"Future<?> submit(Runnable task)")]),t("td",null,"提交任务 task()")]),t("tr",null,[t("td",null,[t("code",null,"Future submit(Callable<T> task)")]),t("td",null,"提交任务 task，用返回值 Future 获得任务执行结果")]),t("tr",null,[t("td",null,[t("code",null,"List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks)")]),t("td",null,"提交 tasks 中所有任务")]),t("tr",null,[t("td",null,[t("code",null,"List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit)")]),t("td",null,"提交 tasks 中所有任务，超时时间针对所有task，超时会取消没有执行完的任务，并抛出超时异常")]),t("tr",null,[t("td",null,[t("code",null,"T invokeAny(Collection<? extends Callable<T>> tasks)")]),t("td",null,"提交 tasks 中所有任务，哪个任务先成功执行完毕，返回此任务执行结果，其它任务取消")])])],-1),pl=t("p",null,"execute 和 submit 都属于线程池的方法，对比：",-1),rl=t("ul",null,[t("li",null,[t("p",null,[p("execute 只能执行 Runnable 类型的任务，没有返回值； submit 既能提交 Runnable 类型任务也能提交 Callable 类型任务，底层是"),t("strong",null,"封装成 FutureTask，然后调用 execute 执行")])]),t("li",null,[t("p",null,"execute 会直接抛出任务执行时的异常，submit 会吞掉异常，可通过 Future 的 get 方法将任务执行时的异常重新抛出")])],-1),El=t("hr",null,null,-1),yl={id:"关闭方法",tabindex:"-1"},il=t("p",null,"ExecutorService 类 API：",-1),ul=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"方法"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,[t("code",null,"void shutdown()")]),t("td",null,"线程池状态变为 SHUTDOWN，等待任务执行完后关闭线程池，不会接收新任务，但已提交任务会执行完，而且也可以添加线程（不绑定任务）")]),t("tr",null,[t("td",null,[t("code",null,"List<Runnable> shutdownNow()")]),t("td",null,"线程池状态变为 STOP，用 interrupt 中断正在执行的任务，直接关闭线程池，不会接收新任务，会将队列中的任务返回")]),t("tr",null,[t("td",null,[t("code",null,"boolean isShutdown()")]),t("td",null,"不在 RUNNING 状态的线程池，此执行者已被关闭，方法返回 true")]),t("tr",null,[t("td",null,[t("code",null,"boolean isTerminated()")]),t("td",null,"线程池状态是否是 TERMINATED，如果所有任务在关闭后完成，返回 true")]),t("tr",null,[t("td",null,[t("code",null,"boolean awaitTermination(long timeout, TimeUnit unit)")]),t("td",null,"调用 shutdown 后，由于调用线程不会等待所有任务运行结束，如果它想在线程池 TERMINATED 后做些事情，可以利用此方法等待")])])],-1),Fl=t("hr",null,null,-1),Al={id:"处理异常",tabindex:"-1"},dl=t("p",null,"execute 会直接抛出任务执行时的异常，submit 会吞掉异常，有两种处理方法",-1),Dl=t("p",null,"方法 1：主动捉异常",-1),hl=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"ExecutorService executorService "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Executors."),t("span",{style:{color:"#B392F0"}},"newFixedThreadPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"pool."),t("span",{style:{color:"#B392F0"}},"submit"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"task1"'),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"/"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (Exception "),t("span",{style:{color:"#FFAB70"}},"e"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        e."),t("span",{style:{color:"#B392F0"}},"printStackTrace"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"});")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"ExecutorService executorService "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Executors."),t("span",{style:{color:"#6F42C1"}},"newFixedThreadPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"pool."),t("span",{style:{color:"#6F42C1"}},"submit"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"task1"'),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"/"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (Exception "),t("span",{style:{color:"#E36209"}},"e"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        e."),t("span",{style:{color:"#6F42C1"}},"printStackTrace"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"});")])])])],-1),Cl=t("p",null,"方法 2：使用 Future 对象",-1),kl=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"ExecutorService executorService "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Executors."),t("span",{style:{color:"#B392F0"}},"newFixedThreadPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"Future<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> future "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," pool."),t("span",{style:{color:"#B392F0"}},"submit"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"task1"'),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"/"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"});")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"(future."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"());")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"ExecutorService executorService "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Executors."),t("span",{style:{color:"#6F42C1"}},"newFixedThreadPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"Future<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> future "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," pool."),t("span",{style:{color:"#6F42C1"}},"submit"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"task1"'),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"/"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"});")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"(future."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"());")])])])],-1),gl=t("hr",null,null,-1),fl={id:"工作原理",tabindex:"-1"},ml={id:"状态信息",tabindex:"-1"},vl=t("p",null,[p("ThreadPoolExecutor 使用 int 的"),t("strong",null,"高 3 位来表示线程池状态，低 29 位表示线程数量"),p("。这些信息存储在一个原子变量 ctl 中，目的是将线程池状态与线程个数合二为一，这样就可以用一次 CAS 原子操作进行赋值")],-1),bl=t("ul",null,[t("li",null,[t("p",null,"状态表示："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 高3位：表示当前线程池运行状态，除去高3位之后的低位：表示当前线程池中所拥有的线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," AtomicInteger ctl "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AtomicInteger"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#B392F0"}},"ctlOf"),t("span",{style:{color:"#E1E4E8"}},"(RUNNING, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示在 ctl 中，低 COUNT_BITS 位，是用于存放当前线程数量的位")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Integer.SIZE "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"3"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 低 COUNT_BITS 位所能表达的最大数值，000 11111111111111111111 => 5亿多")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," CAPACITY   "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<<"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS) "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 高3位：表示当前线程池运行状态，除去高3位之后的低位：表示当前线程池中所拥有的线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," AtomicInteger ctl "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AtomicInteger"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#6F42C1"}},"ctlOf"),t("span",{style:{color:"#24292E"}},"(RUNNING, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示在 ctl 中，低 COUNT_BITS 位，是用于存放当前线程数量的位")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," COUNT_BITS "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Integer.SIZE "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"3"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 低 COUNT_BITS 位所能表达的最大数值，000 11111111111111111111 => 5亿多")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," CAPACITY   "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<<"),t("span",{style:{color:"#24292E"}}," COUNT_BITS) "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")])])])]),t("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824172854832.png",alt:"image-20230824172854832",style:{zoom:"80%"}})]),t("li",null,[t("p",null,"四种状态："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000，转换成整数后其实就是一个【负数】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," RUNNING    "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<<"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 000 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN   "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}},"  "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<<"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 001 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," STOP       "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}},"  "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<<"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 010 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," TIDYING    "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}},"  "),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<<"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 011 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," TERMINATED "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}},"  "),t("span",{style:{color:"#79B8FF"}},"3"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<<"),t("span",{style:{color:"#E1E4E8"}}," COUNT_BITS;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000，转换成整数后其实就是一个【负数】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," RUNNING    "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<<"),t("span",{style:{color:"#24292E"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 000 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," SHUTDOWN   "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}},"  "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<<"),t("span",{style:{color:"#24292E"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 001 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," STOP       "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}},"  "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<<"),t("span",{style:{color:"#24292E"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 010 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," TIDYING    "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}},"  "),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<<"),t("span",{style:{color:"#24292E"}}," COUNT_BITS;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 011 000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," TERMINATED "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}},"  "),t("span",{style:{color:"#005CC5"}},"3"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<<"),t("span",{style:{color:"#24292E"}}," COUNT_BITS;")])])])]),t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"状态"),t("th",null,"高3位"),t("th",null,"接收新任务"),t("th",null,"处理阻塞任务队列"),t("th",null,"说明")])]),t("tbody",null,[t("tr",null,[t("td",null,"RUNNING"),t("td",null,"111"),t("td",null,"Y"),t("td",null,"Y"),t("td")]),t("tr",null,[t("td",null,"SHUTDOWN"),t("td",null,"000"),t("td",null,"N"),t("td",null,"Y"),t("td",null,"不接收新任务，但处理阻塞队列剩余任务")]),t("tr",null,[t("td",null,"STOP"),t("td",null,"001"),t("td",null,"N"),t("td",null,"N"),t("td",null,"中断正在执行的任务，并抛弃阻塞队列任务")]),t("tr",null,[t("td",null,"TIDYING"),t("td",null,"010"),t("td",null,"-"),t("td",null,"-"),t("td",null,"任务全执行完毕，活动线程为 0 即将进入终结")]),t("tr",null,[t("td",null,"TERMINATED"),t("td",null,"011"),t("td",null,"-"),t("td",null,"-"),t("td",null,"终止状态")])])])]),t("li",null,[t("p",null,"获取当前线程池运行状态："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// ~CAPACITY = ~000 11111111111111111111 = 111 000000000000000000000（取反）")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// c == ctl = 111 000000000000000000111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000000\t获取到了运行状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateOf"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c)     { "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"~"),t("span",{style:{color:"#E1E4E8"}},"CAPACITY; }")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// ~CAPACITY = ~000 11111111111111111111 = 111 000000000000000000000（取反）")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// c == ctl = 111 000000000000000000111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000000")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 111 000000000000000000000\t获取到了运行状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateOf"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c)     { "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"~"),t("span",{style:{color:"#24292E"}},"CAPACITY; }")])])])])]),t("li",null,[t("p",null,"获取当前线程池线程数量："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"//        c = 111 000000000000000000111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// CAPACITY = 000 111111111111111111111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"//            000 000000000000000000111 => 7")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c)  { "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"&"),t("span",{style:{color:"#E1E4E8"}}," CAPACITY; }")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"//        c = 111 000000000000000000111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// CAPACITY = 000 111111111111111111111")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"//            000 000000000000000000111 => 7")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c)  { "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"&"),t("span",{style:{color:"#24292E"}}," CAPACITY; }")])])])])]),t("li",null,[t("p",null,"重置当前线程池状态 ctl："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// rs 表示线程池状态，wc 表示当前线程池中 worker（线程）数量，相与以后就是合并后的状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ctlOf"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," rs, "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," wc) { "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," rs "),t("span",{style:{color:"#F97583"}},"|"),t("span",{style:{color:"#E1E4E8"}}," wc; }")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// rs 表示线程池状态，wc 表示当前线程池中 worker（线程）数量，相与以后就是合并后的状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ctlOf"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," rs, "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," wc) { "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," rs "),t("span",{style:{color:"#D73A49"}},"|"),t("span",{style:{color:"#24292E"}}," wc; }")])])])])]),t("li",null,[t("p",null,"比较当前线程池 ctl 所表示的状态："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 比较当前线程池 ctl 所表示的状态，是否小于某个状态 s")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 状态对比：RUNNING < SHUTDOWN < STOP < TIDYING < TERMINATED")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateLessThan"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c, "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s) { "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," s; }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 比较当前线程池 ctl 所表示的状态，是否大于等于某个状态s")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateAtLeast"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c, "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s) { "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," s; }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 小于 SHUTDOWN 的一定是 RUNNING，SHUTDOWN == 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isRunning"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c) { "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN; }")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 比较当前线程池 ctl 所表示的状态，是否小于某个状态 s")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 状态对比：RUNNING < SHUTDOWN < STOP < TIDYING < TERMINATED")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateLessThan"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c, "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s) { "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," s; }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 比较当前线程池 ctl 所表示的状态，是否大于等于某个状态s")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateAtLeast"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c, "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s) { "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," s; }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 小于 SHUTDOWN 的一定是 RUNNING，SHUTDOWN == 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isRunning"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c) { "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," SHUTDOWN; }")])])])])]),t("li",null,[t("p",null,"设置线程池 ctl："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 使用 CAS 方式 让 ctl 值 +1 ，成功返回 true, 失败返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"compareAndIncrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," expect) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"compareAndSet"),t("span",{style:{color:"#E1E4E8"}},"(expect, expect "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 使用 CAS 方式 让 ctl 值 -1 ，成功返回 true, 失败返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"compareAndDecrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," expect) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"compareAndSet"),t("span",{style:{color:"#E1E4E8"}},"(expect, expect "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 将 ctl 值减一，do while 循环会一直重试，直到成功为止")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"decrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"do"),t("span",{style:{color:"#E1E4E8"}}," {} "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"compareAndDecrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"(ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"()));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 使用 CAS 方式 让 ctl 值 +1 ，成功返回 true, 失败返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"compareAndIncrementWorkerCount"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," expect) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"compareAndSet"),t("span",{style:{color:"#24292E"}},"(expect, expect "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 使用 CAS 方式 让 ctl 值 -1 ，成功返回 true, 失败返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"compareAndDecrementWorkerCount"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," expect) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"compareAndSet"),t("span",{style:{color:"#24292E"}},"(expect, expect "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 将 ctl 值减一，do while 循环会一直重试，直到成功为止")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"decrementWorkerCount"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"do"),t("span",{style:{color:"#24292E"}}," {} "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"compareAndDecrementWorkerCount"),t("span",{style:{color:"#24292E"}},"(ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"()));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Bl=t("hr",null,null,-1),Tl={id:"成员属性-1",tabindex:"-1"},Sl=t("p",null,"成员变量",-1),wl=t("ul",null,[t("li",null,[t("p",null,[t("strong",null,"线程池中存放 Worker 的容器"),p("：线程池没有初始化，直接往池中加线程即可")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," HashSet<"),t("span",{style:{color:"#F97583"}},"Worker"),t("span",{style:{color:"#E1E4E8"}},"> workers "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," HashSet<"),t("span",{style:{color:"#F97583"}},"Worker"),t("span",{style:{color:"#E1E4E8"}},">();")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," HashSet<"),t("span",{style:{color:"#D73A49"}},"Worker"),t("span",{style:{color:"#24292E"}},"> workers "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," HashSet<"),t("span",{style:{color:"#D73A49"}},"Worker"),t("span",{style:{color:"#24292E"}},">();")])])])])]),t("li",null,[t("p",null,"线程全局锁："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 增加减少 worker 或者时修改线程池运行状态需要持有 mainLock")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ReentrantLock"),t("span",{style:{color:"#E1E4E8"}},"();")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 增加减少 worker 或者时修改线程池运行状态需要持有 mainLock")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ReentrantLock"),t("span",{style:{color:"#24292E"}},"();")])])])])]),t("li",null,[t("p",null,"可重入锁的条件变量："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当外部线程调用 awaitTermination() 方法时，会等待当前线程池状态为 Termination 为止")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Condition termination "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," mainLock."),t("span",{style:{color:"#B392F0"}},"newCondition"),t("span",{style:{color:"#E1E4E8"}},"()")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当外部线程调用 awaitTermination() 方法时，会等待当前线程池状态为 Termination 为止")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Condition termination "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," mainLock."),t("span",{style:{color:"#6F42C1"}},"newCondition"),t("span",{style:{color:"#24292E"}},"()")])])])])]),t("li",null,[t("p",null,"线程池相关参数："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize;\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 核心线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," maximumPoolSize;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 线程池最大线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," keepAliveTime;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 空闲线程存活时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," ThreadFactory threadFactory;\t"),t("span",{style:{color:"#6A737D"}},"// 创建线程时使用的线程工厂，默认是 DefaultThreadFactory")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," BlockingQueue<"),t("span",{style:{color:"#F97583"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}},"> workQueue;"),t("span",{style:{color:"#6A737D"}},"// 【超过核心线程提交任务就放入 阻塞队列】")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," corePoolSize;\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 核心线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," maximumPoolSize;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 线程池最大线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," keepAliveTime;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 空闲线程存活时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," ThreadFactory threadFactory;\t"),t("span",{style:{color:"#6A737D"}},"// 创建线程时使用的线程工厂，默认是 DefaultThreadFactory")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," BlockingQueue<"),t("span",{style:{color:"#D73A49"}},"Runnable"),t("span",{style:{color:"#24292E"}},"> workQueue;"),t("span",{style:{color:"#6A737D"}},"// 【超过核心线程提交任务就放入 阻塞队列】")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," RejectedExecutionHandler handler;\t"),t("span",{style:{color:"#6A737D"}},"// 拒绝策略，juc包提供了4中方式")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," RejectedExecutionHandler defaultHandler "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AbortPolicy"),t("span",{style:{color:"#E1E4E8"}},"();"),t("span",{style:{color:"#6A737D"}},"// 默认策略")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," RejectedExecutionHandler handler;\t"),t("span",{style:{color:"#6A737D"}},"// 拒绝策略，juc包提供了4中方式")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," RejectedExecutionHandler defaultHandler "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AbortPolicy"),t("span",{style:{color:"#24292E"}},"();"),t("span",{style:{color:"#6A737D"}},"// 默认策略")])])])])]),t("li",null,[t("p",null,"记录线程池相关属性的数值："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," largestPoolSize;\t\t"),t("span",{style:{color:"#6A737D"}},"// 记录线程池生命周期内线程数最大值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," completedTaskCount;\t"),t("span",{style:{color:"#6A737D"}},"// 记录线程池所完成任务总数，当某个 worker 退出时将完成的任务累加到该属性")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," largestPoolSize;\t\t"),t("span",{style:{color:"#6A737D"}},"// 记录线程池生命周期内线程数最大值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," completedTaskCount;\t"),t("span",{style:{color:"#6A737D"}},"// 记录线程池所完成任务总数，当某个 worker 退出时将完成的任务累加到该属性")])])])])]),t("li",null,[t("p",null,[p("控制"),t("strong",null,"核心线程数量内的线程是否可以被回收"),p("：")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// false（默认）代表不可以，为 true 时核心线程空闲超过 keepAliveTime 也会被回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// allowCoreThreadTimeOut(boolean value) 方法可以设置该值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," allowCoreThreadTimeOut;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// false（默认）代表不可以，为 true 时核心线程空闲超过 keepAliveTime 也会被回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// allowCoreThreadTimeOut(boolean value) 方法可以设置该值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," allowCoreThreadTimeOut;")])])])])])],-1),xl=t("p",null,"内部类：",-1),Nl=t("ul",null,[t("li",null,[t("p",null,[p("Worker 类："),t("strong",null,"每个 Worker 对象会绑定一个初始任务"),p("，启动 Worker 时优先执行，这也是造成线程池不公平的原因。Worker 继承自 AQS，本身具有锁的特性，采用独占锁模式，"),t("code",null,"state = 0"),p(" 表示未被占用，"),t("code",null,"> 0"),p(" 表示被占用，"),t("code",null,"< 0"),p(" 表示初始状态不能被抢锁")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Worker"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"extends"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AbstractQueuedSynchronizer"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"implements"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Thread thread;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// worker 内部封装的工作线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Runnable firstTask;\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// worker 第一个执行的任务，普通的 Runnable 实现类或者是 FutureTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," completedTasks;\t"),t("span",{style:{color:"#6A737D"}},"// 记录当前 worker 所完成任务数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 构造方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"Worker"),t("span",{style:{color:"#E1E4E8"}},"(Runnable "),t("span",{style:{color:"#FFAB70"}},"firstTask"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置AQS独占模式为初始化中状态，这个状态不能被抢占锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"       \t"),t("span",{style:{color:"#B392F0"}},"setState"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// firstTask不为空时，当worker启动后，内部线程会优先执行firstTask，执行完后会到queue中去获取下个任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".firstTask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," firstTask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 使用线程工厂创建一个线程，并且【将当前worker指定为Runnable】，所以thread启动时会调用 worker.run()")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".thread "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"getThreadFactory"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"newThread"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【不可重入锁】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"tryAcquire"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"unused"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"compareAndSetState"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"setExclusiveOwnerThread"),t("span",{style:{color:"#E1E4E8"}},"(Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Worker"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"extends"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AbstractQueuedSynchronizer"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"implements"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Runnable"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Thread thread;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// worker 内部封装的工作线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Runnable firstTask;\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// worker 第一个执行的任务，普通的 Runnable 实现类或者是 FutureTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," completedTasks;\t"),t("span",{style:{color:"#6A737D"}},"// 记录当前 worker 所完成任务数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 构造方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"Worker"),t("span",{style:{color:"#24292E"}},"(Runnable "),t("span",{style:{color:"#E36209"}},"firstTask"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置AQS独占模式为初始化中状态，这个状态不能被抢占锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"       \t"),t("span",{style:{color:"#6F42C1"}},"setState"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// firstTask不为空时，当worker启动后，内部线程会优先执行firstTask，执行完后会到queue中去获取下个任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".firstTask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," firstTask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 使用线程工厂创建一个线程，并且【将当前worker指定为Runnable】，所以thread启动时会调用 worker.run()")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".thread "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"getThreadFactory"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"newThread"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【不可重入锁】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"tryAcquire"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"unused"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"compareAndSetState"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"setExclusiveOwnerThread"),t("span",{style:{color:"#24292E"}},"(Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," Thread "),t("span",{style:{color:"#B392F0"}},"newThread"),t("span",{style:{color:"#E1E4E8"}},"(Runnable r) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 将当前 worker 指定为 thread 的执行方法，线程调用 start 会调用 r.run()")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Thread t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Thread"),t("span",{style:{color:"#E1E4E8"}},"(group, r, namePrefix "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," threadNumber."),t("span",{style:{color:"#B392F0"}},"getAndIncrement"),t("span",{style:{color:"#E1E4E8"}},"(), "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t."),t("span",{style:{color:"#B392F0"}},"isDaemon"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        t."),t("span",{style:{color:"#B392F0"}},"setDaemon"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t."),t("span",{style:{color:"#B392F0"}},"getPriority"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," Thread.NORM_PRIORITY)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        t."),t("span",{style:{color:"#B392F0"}},"setPriority"),t("span",{style:{color:"#E1E4E8"}},"(Thread.NORM_PRIORITY);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," Thread "),t("span",{style:{color:"#6F42C1"}},"newThread"),t("span",{style:{color:"#24292E"}},"(Runnable r) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 将当前 worker 指定为 thread 的执行方法，线程调用 start 会调用 r.run()")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Thread t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Thread"),t("span",{style:{color:"#24292E"}},"(group, r, namePrefix "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," threadNumber."),t("span",{style:{color:"#6F42C1"}},"getAndIncrement"),t("span",{style:{color:"#24292E"}},"(), "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t."),t("span",{style:{color:"#6F42C1"}},"isDaemon"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        t."),t("span",{style:{color:"#6F42C1"}},"setDaemon"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t."),t("span",{style:{color:"#6F42C1"}},"getPriority"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," Thread.NORM_PRIORITY)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        t."),t("span",{style:{color:"#6F42C1"}},"setPriority"),t("span",{style:{color:"#24292E"}},"(Thread.NORM_PRIORITY);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,"拒绝策略相关的内部类")])],-1),Il=t("hr",null,null,-1),Ol={id:"成员方法",tabindex:"-1"},Rl={id:"提交方法-1",tabindex:"-1"},Ll=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"AbstractExecutorService#submit()"),p("：提交任务，"),t("strong",null,"把 Runnable 或 Callable 任务封装成 FutureTask 执行"),p("，可以通过方法返回的任务对象，调用 get 阻塞获取任务执行的结果或者异常，源码分析在笔记的 Future 部分")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," Future"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"submit"),t("span",{style:{color:"#E1E4E8"}},"(Runnable task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 空指针异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (task "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 把 Runnable 封装成未来任务对象，执行结果就是 null，也可以通过参数指定 FutureTask#get 返回数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableFuture<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},"> ftask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"newTaskFor"),t("span",{style:{color:"#E1E4E8"}},"(task, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 执行方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"execute"),t("span",{style:{color:"#E1E4E8"}},"(ftask);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," ftask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," Future"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"submit"),t("span",{style:{color:"#E1E4E8"}},"(Callable"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (task "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 把 Callable 封装成未来任务对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableFuture<"),t("span",{style:{color:"#F97583"}},"T"),t("span",{style:{color:"#E1E4E8"}},"> ftask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"newTaskFor"),t("span",{style:{color:"#E1E4E8"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 执行方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"execute"),t("span",{style:{color:"#E1E4E8"}},"(ftask);\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回未来任务对象，用来获取返回值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," ftask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," Future"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"submit"),t("span",{style:{color:"#24292E"}},"(Runnable task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 空指针异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (task "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 把 Runnable 封装成未来任务对象，执行结果就是 null，也可以通过参数指定 FutureTask#get 返回数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableFuture<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},"> ftask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"newTaskFor"),t("span",{style:{color:"#24292E"}},"(task, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 执行方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"execute"),t("span",{style:{color:"#24292E"}},"(ftask);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," ftask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," Future"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"submit"),t("span",{style:{color:"#24292E"}},"(Callable"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (task "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 把 Callable 封装成未来任务对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableFuture<"),t("span",{style:{color:"#D73A49"}},"T"),t("span",{style:{color:"#24292E"}},"> ftask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"newTaskFor"),t("span",{style:{color:"#24292E"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 执行方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"execute"),t("span",{style:{color:"#24292E"}},"(ftask);\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回未来任务对象，用来获取返回值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," ftask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," RunnableFuture"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"newTaskFor"),t("span",{style:{color:"#E1E4E8"}},"(Runnable runnable, T value) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// Runnable 封装成 FutureTask，【指定返回值】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," FutureTask<"),t("span",{style:{color:"#F97583"}},"T"),t("span",{style:{color:"#E1E4E8"}},">(runnable, value);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," RunnableFuture"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"newTaskFor"),t("span",{style:{color:"#E1E4E8"}},"(Callable"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," callable) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// Callable 直接封装成 FutureTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," FutureTask<"),t("span",{style:{color:"#F97583"}},"T"),t("span",{style:{color:"#E1E4E8"}},">(callable);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," RunnableFuture"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"newTaskFor"),t("span",{style:{color:"#24292E"}},"(Runnable runnable, T value) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// Runnable 封装成 FutureTask，【指定返回值】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," FutureTask<"),t("span",{style:{color:"#D73A49"}},"T"),t("span",{style:{color:"#24292E"}},">(runnable, value);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," RunnableFuture"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"newTaskFor"),t("span",{style:{color:"#24292E"}},"(Callable"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," callable) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// Callable 直接封装成 FutureTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," FutureTask<"),t("span",{style:{color:"#D73A49"}},"T"),t("span",{style:{color:"#24292E"}},">(callable);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"execute()"),p("：执行任务，"),t("strong",null,"但是没有返回值，没办法获取任务执行结果"),p("，出现异常会直接抛出任务执行时的异常。根据线程池中的线程数，选择添加任务时的处理方式")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// command 可以是普通的 Runnable 实现类，也可以是 FutureTask，不能是 Callable")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"execute"),t("span",{style:{color:"#E1E4E8"}},"(Runnable command) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 非空判断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (command "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"  \t"),t("span",{style:{color:"#6A737D"}},"// 获取 ctl 最新值赋值给 c，ctl 高 3 位表示线程池状态，低位表示当前线程池线程数量。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【1】当前线程数量小于核心线程数，此次提交任务直接创建一个新的 worker，线程池中多了一个新的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// addWorker 为创建线程的过程，会创建 worker 对象并且将 command 作为 firstTask，优先执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"(command, "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这条语句，说明 addWorker 一定是失败的，存在并发现象或者线程池状态被改变，重新获取状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// SHUTDOWN 状态下也有可能创建成功，前提 firstTask == null 而且当前 queue 不为空（特殊情况）")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【2】执行到这说明当前线程数量已经达到核心线程数量 或者 addWorker 失败")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// \t判断当前线程池是否处于running状态，成立就尝试将 task 放入到 workQueue 中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"isRunning"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," workQueue."),t("span",{style:{color:"#B392F0"}},"offer"),t("span",{style:{color:"#E1E4E8"}},"(command)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," recheck "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件一成立说明线程池状态被外部线程给修改了，可能是执行了 shutdown() 方法，该状态不能接收新提交的任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 所以要把刚提交的任务删除，删除成功说明提交之后线程池中的线程还未消费（处理）该任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"isRunning"),t("span",{style:{color:"#E1E4E8"}},"(recheck) "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(command))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 任务出队成功，走拒绝策略")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"reject"),t("span",{style:{color:"#E1E4E8"}},"(command);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这说明线程池是 running 状态，获取线程池中的线程数量，判断是否是 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【担保机制】，保证线程池在 running 状态下，最起码得有一个线程在工作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(recheck) "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【3】offer失败说明queue满了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果线程数量尚未达到 maximumPoolSize，会创建非核心 worker 线程直接执行 command，【这也是不公平的原因】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果当前线程数量达到 maximumPoolSiz，这里 addWorker 也会失败，走拒绝策略")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"(command, "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"reject"),t("span",{style:{color:"#E1E4E8"}},"(command);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// command 可以是普通的 Runnable 实现类，也可以是 FutureTask，不能是 Callable")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"execute"),t("span",{style:{color:"#24292E"}},"(Runnable command) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 非空判断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (command "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"  \t"),t("span",{style:{color:"#6A737D"}},"// 获取 ctl 最新值赋值给 c，ctl 高 3 位表示线程池状态，低位表示当前线程池线程数量。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【1】当前线程数量小于核心线程数，此次提交任务直接创建一个新的 worker，线程池中多了一个新的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," corePoolSize) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// addWorker 为创建线程的过程，会创建 worker 对象并且将 command 作为 firstTask，优先执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"(command, "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这条语句，说明 addWorker 一定是失败的，存在并发现象或者线程池状态被改变，重新获取状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// SHUTDOWN 状态下也有可能创建成功，前提 firstTask == null 而且当前 queue 不为空（特殊情况）")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【2】执行到这说明当前线程数量已经达到核心线程数量 或者 addWorker 失败")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// \t判断当前线程池是否处于running状态，成立就尝试将 task 放入到 workQueue 中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"isRunning"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," workQueue."),t("span",{style:{color:"#6F42C1"}},"offer"),t("span",{style:{color:"#24292E"}},"(command)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," recheck "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件一成立说明线程池状态被外部线程给修改了，可能是执行了 shutdown() 方法，该状态不能接收新提交的任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 所以要把刚提交的任务删除，删除成功说明提交之后线程池中的线程还未消费（处理）该任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"isRunning"),t("span",{style:{color:"#24292E"}},"(recheck) "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(command))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 任务出队成功，走拒绝策略")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"reject"),t("span",{style:{color:"#24292E"}},"(command);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这说明线程池是 running 状态，获取线程池中的线程数量，判断是否是 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【担保机制】，保证线程池在 running 状态下，最起码得有一个线程在工作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(recheck) "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【3】offer失败说明queue满了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果线程数量尚未达到 maximumPoolSize，会创建非核心 worker 线程直接执行 command，【这也是不公平的原因】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果当前线程数量达到 maximumPoolSiz，这里 addWorker 也会失败，走拒绝策略")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"(command, "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"reject"),t("span",{style:{color:"#24292E"}},"(command);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),jl=t("hr",null,null,-1),Pl={id:"添加线程",tabindex:"-1"},Ul=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"prestartAllCoreThreads()"),p("："),t("strong",null,"提前预热"),p("，创建所有的核心线程")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"prestartAllCoreThreads"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," n "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"++"),t("span",{style:{color:"#E1E4E8"}},"n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"prestartAllCoreThreads"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," n "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"++"),t("span",{style:{color:"#24292E"}},"n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"addWorker()"),p("："),t("strong",null,"添加线程到线程池"),p("，返回 true 表示创建 Worker 成功，且线程启动。首先判断线程池是否允许添加线程，允许就让线程数量 + 1，然后去创建 Worker 加入线程池")]),t("p",null,"注意：SHUTDOWN 状态也能添加线程，但是要求新加的 Woker 没有 firstTask，而且当前 queue 不为空，所以创建一个线程来帮助线程池执行队列中的任务"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// core == true 表示采用核心线程数量限制，false 表示采用 maximumPoolSize")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"(Runnable firstTask, "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," core) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自旋【判断当前线程池状态是否允许创建线程】，允许就设置线程数量 + 1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    retry"),t("span",{style:{color:"#F97583"}},":")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取 ctl 的值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取当前线程池运行状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," rs "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateOf"),t("span",{style:{color:"#E1E4E8"}},"(c);\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断当前线程池状态【是否允许添加线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前线程池是 SHUTDOWN 状态，但是队列里面还有任务尚未处理完，需要处理完 queue 中的任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【不允许再提交新的 task，所以 firstTask 为空，但是可以继续添加 worker】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (rs "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"(rs "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," firstTask "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"workQueue."),t("span",{style:{color:"#B392F0"}},"isEmpty"),t("span",{style:{color:"#E1E4E8"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取线程池中线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," wc "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(c);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件一一般不成立，CAPACITY是5亿多，根据 core 判断使用哪个大小限制线程数量，超过了返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (wc "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," CAPACITY "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," wc "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," (core "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," maximumPoolSize))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 记录线程数量已经加 1，类比于申请到了一块令牌，条件失败说明其他线程修改了数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"compareAndIncrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"(c))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 申请成功，跳出了 retry 这个 for 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}}," retry;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// CAS 失败，没有成功的申请到令牌")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 判断当前线程池状态是否发生过变化，被其他线程修改了，可能其他线程调用了 shutdown() 方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"runStateOf"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," rs)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 返回外层循环检查是否能创建线程，在 if 语句中返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}}," retry;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"           ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//【令牌申请成功，开始创建线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 运行标记，表示创建的 worker 是否已经启动，false未启动  true启动")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," workerStarted "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 添加标记，表示创建的 worker 是否添加到池子中了，默认false未添加，true是添加。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," workerAdded "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Worker w "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【创建 Worker，底层通过线程工厂 newThread 方法创建执行线程，指定了首先执行的任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        w "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Worker"),t("span",{style:{color:"#E1E4E8"}},"(firstTask);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将新创建的 worker 节点中的线程赋值给 t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Thread t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," w.thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 这里的判断为了防止 程序员自定义的 ThreadFactory 实现类有 bug，创造不出线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 加互斥锁，要添加 worker 了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取最新线程池运行状态保存到 rs")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," rs "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateOf"),t("span",{style:{color:"#E1E4E8"}},"(ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 判断线程池是否为RUNNING状态，不是再【判断当前是否为SHUTDOWN状态且firstTask为空，特殊情况】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (rs "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," (rs "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," firstTask "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 当线程start后，线程isAlive会返回true，这里还没开始启动线程，如果被启动了就需要报错")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t."),t("span",{style:{color:"#B392F0"}},"isAlive"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"IllegalThreadStateException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"//【将新建的 Worker 添加到线程池中】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    workers."),t("span",{style:{color:"#B392F0"}},"add"),t("span",{style:{color:"#E1E4E8"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," workers."),t("span",{style:{color:"#B392F0"}},"size"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 当前池中的线程数量是一个新高，更新 largestPoolSize")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," largestPoolSize)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        largestPoolSize "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 添加标记置为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    workerAdded "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 解锁啊")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 添加成功就【启动线程执行任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (workerAdded) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// Thread 类中持有 Runnable 任务对象，调用的是 Runnable 的 run ，也就是 FutureTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                t."),t("span",{style:{color:"#B392F0"}},"start"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 运行标记置为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                workerStarted "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果启动线程失败，做清理工作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}}," workerStarted)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"addWorkerFailed"),t("span",{style:{color:"#E1E4E8"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回新创建的线程是否启动")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," workerStarted;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// core == true 表示采用核心线程数量限制，false 表示采用 maximumPoolSize")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"(Runnable firstTask, "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," core) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 自旋【判断当前线程池状态是否允许创建线程】，允许就设置线程数量 + 1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    retry"),t("span",{style:{color:"#D73A49"}},":")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取 ctl 的值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取当前线程池运行状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," rs "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateOf"),t("span",{style:{color:"#24292E"}},"(c);\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断当前线程池状态【是否允许添加线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前线程池是 SHUTDOWN 状态，但是队列里面还有任务尚未处理完，需要处理完 queue 中的任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【不允许再提交新的 task，所以 firstTask 为空，但是可以继续添加 worker】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (rs "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," SHUTDOWN "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"(rs "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," SHUTDOWN "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," firstTask "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"workQueue."),t("span",{style:{color:"#6F42C1"}},"isEmpty"),t("span",{style:{color:"#24292E"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取线程池中线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," wc "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(c);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件一一般不成立，CAPACITY是5亿多，根据 core 判断使用哪个大小限制线程数量，超过了返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (wc "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," CAPACITY "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," wc "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," (core "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," corePoolSize "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," maximumPoolSize))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 记录线程数量已经加 1，类比于申请到了一块令牌，条件失败说明其他线程修改了数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"compareAndIncrementWorkerCount"),t("span",{style:{color:"#24292E"}},"(c))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 申请成功，跳出了 retry 这个 for 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}}," retry;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// CAS 失败，没有成功的申请到令牌")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 判断当前线程池状态是否发生过变化，被其他线程修改了，可能其他线程调用了 shutdown() 方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"runStateOf"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," rs)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 返回外层循环检查是否能创建线程，在 if 语句中返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}}," retry;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"           ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//【令牌申请成功，开始创建线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 运行标记，表示创建的 worker 是否已经启动，false未启动  true启动")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," workerStarted "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 添加标记，表示创建的 worker 是否添加到池子中了，默认false未添加，true是添加。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," workerAdded "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Worker w "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【创建 Worker，底层通过线程工厂 newThread 方法创建执行线程，指定了首先执行的任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        w "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Worker"),t("span",{style:{color:"#24292E"}},"(firstTask);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将新创建的 worker 节点中的线程赋值给 t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Thread t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," w.thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 这里的判断为了防止 程序员自定义的 ThreadFactory 实现类有 bug，创造不出线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 加互斥锁，要添加 worker 了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取最新线程池运行状态保存到 rs")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," rs "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateOf"),t("span",{style:{color:"#24292E"}},"(ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 判断线程池是否为RUNNING状态，不是再【判断当前是否为SHUTDOWN状态且firstTask为空，特殊情况】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (rs "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," SHUTDOWN "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," (rs "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," SHUTDOWN "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," firstTask "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 当线程start后，线程isAlive会返回true，这里还没开始启动线程，如果被启动了就需要报错")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t."),t("span",{style:{color:"#6F42C1"}},"isAlive"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"IllegalThreadStateException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"//【将新建的 Worker 添加到线程池中】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    workers."),t("span",{style:{color:"#6F42C1"}},"add"),t("span",{style:{color:"#24292E"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," workers."),t("span",{style:{color:"#6F42C1"}},"size"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 当前池中的线程数量是一个新高，更新 largestPoolSize")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," largestPoolSize)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        largestPoolSize "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 添加标记置为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    workerAdded "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 解锁啊")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 添加成功就【启动线程执行任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (workerAdded) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// Thread 类中持有 Runnable 任务对象，调用的是 Runnable 的 run ，也就是 FutureTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                t."),t("span",{style:{color:"#6F42C1"}},"start"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 运行标记置为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                workerStarted "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果启动线程失败，做清理工作")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}}," workerStarted)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"addWorkerFailed"),t("span",{style:{color:"#24292E"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回新创建的线程是否启动")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," workerStarted;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"addWorkerFailed()"),p("：清理任务")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"addWorkerFailed"),t("span",{style:{color:"#E1E4E8"}},"(Worker w) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 持有线程池全局锁，因为操作的是线程池相关的东西")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//条件成立需要将 worker 在 workers 中清理出去。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (w "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            workers."),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将线程池计数 -1，相当于归还令牌。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"decrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 尝试停止线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"tryTerminate"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//释放线程池全局锁。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"addWorkerFailed"),t("span",{style:{color:"#24292E"}},"(Worker w) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 持有线程池全局锁，因为操作的是线程池相关的东西")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//条件成立需要将 worker 在 workers 中清理出去。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (w "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            workers."),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将线程池计数 -1，相当于归还令牌。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"decrementWorkerCount"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 尝试停止线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"tryTerminate"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//释放线程池全局锁。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Wl=t("hr",null,null,-1),Ql={id:"运行方法",tabindex:"-1"},ql=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"Worker#run"),p("：Worker 实现了 Runnable 接口，当线程启动时，会调用 Worker 的 run() 方法")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// ThreadPoolExecutor#runWorker()")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"runWorker"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// ThreadPoolExecutor#runWorker()")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"runWorker"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"runWorker()"),p("：线程启动就要"),t("strong",null,"执行任务"),p("，会一直 while 循环获取任务并执行")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runWorker"),t("span",{style:{color:"#E1E4E8"}},"(Worker w) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Thread wt "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"();\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取 worker 的 firstTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Runnable task "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," w.firstTask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 引用置空，【防止复用该线程时重复执行该任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    w.firstTask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 初始化 worker 时设置 state = -1，表示不允许抢占锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 这里需要设置 state = 0 和 exclusiveOwnerThread = null，开始独占模式抢锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    w."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// true 表示发生异常退出，false 表示正常退出。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," completedAbruptly "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// firstTask 不是 null 就直接运行，否则去 queue 中获取任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【getTask 如果是阻塞获取任务，会一直阻塞在take方法，直到获取任务，不会走返回null的逻辑】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," (task "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," (task "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"getTask"),t("span",{style:{color:"#E1E4E8"}},"()) "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// worker 加锁，shutdown 时会判断当前 worker 状态，【根据独占锁状态判断是否空闲】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            w."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 说明线程池状态大于 STOP，目前处于 STOP/TIDYING/TERMINATION，此时给线程一个中断信号")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (("),t("span",{style:{color:"#B392F0"}},"runStateAtLeast"),t("span",{style:{color:"#E1E4E8"}},"(ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"(), STOP) "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                 "),t("span",{style:{color:"#6A737D"}},"// 说明线程处于 RUNNING 或者 SHUTDOWN 状态，清除打断标记")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                 (Thread."),t("span",{style:{color:"#B392F0"}},"interrupted"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateAtLeast"),t("span",{style:{color:"#E1E4E8"}},"(ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"(), STOP))) "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"wt."),t("span",{style:{color:"#B392F0"}},"isInterrupted"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 中断线程，设置线程的中断标志位为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                wt."),t("span",{style:{color:"#B392F0"}},"interrupt"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 钩子方法，【任务执行的前置处理】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"beforeExecute"),t("span",{style:{color:"#E1E4E8"}},"(wt, task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                Throwable thrown "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 【执行任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    task."),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (Exception "),t("span",{style:{color:"#FFAB70"}},"x"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                 \t"),t("span",{style:{color:"#6A737D"}},"//.....")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 钩子方法，【任务执行的后置处理】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#B392F0"}},"afterExecute"),t("span",{style:{color:"#E1E4E8"}},"(task, thrown);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                task "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";\t\t"),t("span",{style:{color:"#6A737D"}},"// 将局部变量task置为null，代表任务执行完成")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                w.completedTasks"),t("span",{style:{color:"#F97583"}},"++"),t("span",{style:{color:"#E1E4E8"}},";\t"),t("span",{style:{color:"#6A737D"}},"// 更新worker完成任务数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                w."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 解锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// getTask()方法返回null时会走到这里，表示queue为空并且线程空闲超过保活时间，【当前线程执行退出逻辑】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        completedAbruptly "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 正常退出 completedAbruptly = false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"       \t"),t("span",{style:{color:"#6A737D"}},"// 异常退出 completedAbruptly = true，【从 task.run() 内部抛出异常】时，跳到这一行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"processWorkerExit"),t("span",{style:{color:"#E1E4E8"}},"(w, completedAbruptly);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runWorker"),t("span",{style:{color:"#24292E"}},"(Worker w) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Thread wt "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"();\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取 worker 的 firstTask")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Runnable task "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," w.firstTask;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 引用置空，【防止复用该线程时重复执行该任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    w.firstTask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 初始化 worker 时设置 state = -1，表示不允许抢占锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 这里需要设置 state = 0 和 exclusiveOwnerThread = null，开始独占模式抢锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    w."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// true 表示发生异常退出，false 表示正常退出。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," completedAbruptly "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// firstTask 不是 null 就直接运行，否则去 queue 中获取任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【getTask 如果是阻塞获取任务，会一直阻塞在take方法，直到获取任务，不会走返回null的逻辑】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," (task "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," (task "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"getTask"),t("span",{style:{color:"#24292E"}},"()) "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// worker 加锁，shutdown 时会判断当前 worker 状态，【根据独占锁状态判断是否空闲】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            w."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 说明线程池状态大于 STOP，目前处于 STOP/TIDYING/TERMINATION，此时给线程一个中断信号")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (("),t("span",{style:{color:"#6F42C1"}},"runStateAtLeast"),t("span",{style:{color:"#24292E"}},"(ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"(), STOP) "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                 "),t("span",{style:{color:"#6A737D"}},"// 说明线程处于 RUNNING 或者 SHUTDOWN 状态，清除打断标记")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                 (Thread."),t("span",{style:{color:"#6F42C1"}},"interrupted"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateAtLeast"),t("span",{style:{color:"#24292E"}},"(ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"(), STOP))) "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"wt."),t("span",{style:{color:"#6F42C1"}},"isInterrupted"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 中断线程，设置线程的中断标志位为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                wt."),t("span",{style:{color:"#6F42C1"}},"interrupt"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 钩子方法，【任务执行的前置处理】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"beforeExecute"),t("span",{style:{color:"#24292E"}},"(wt, task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                Throwable thrown "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 【执行任务】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    task."),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (Exception "),t("span",{style:{color:"#E36209"}},"x"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                 \t"),t("span",{style:{color:"#6A737D"}},"//.....")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 钩子方法，【任务执行的后置处理】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6F42C1"}},"afterExecute"),t("span",{style:{color:"#24292E"}},"(task, thrown);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                task "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";\t\t"),t("span",{style:{color:"#6A737D"}},"// 将局部变量task置为null，代表任务执行完成")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                w.completedTasks"),t("span",{style:{color:"#D73A49"}},"++"),t("span",{style:{color:"#24292E"}},";\t"),t("span",{style:{color:"#6A737D"}},"// 更新worker完成任务数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                w."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 解锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// getTask()方法返回null时会走到这里，表示queue为空并且线程空闲超过保活时间，【当前线程执行退出逻辑】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        completedAbruptly "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 正常退出 completedAbruptly = false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"       \t"),t("span",{style:{color:"#6A737D"}},"// 异常退出 completedAbruptly = true，【从 task.run() 内部抛出异常】时，跳到这一行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"processWorkerExit"),t("span",{style:{color:"#24292E"}},"(w, completedAbruptly);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"unlock()"),p("：重置锁")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"() { "),t("span",{style:{color:"#B392F0"}},"release"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},"); }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 外部不会直接调用这个方法 这个方法是 AQS 内调用的，外部调用 unlock 时触发此方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"tryRelease"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," unused) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"setExclusiveOwnerThread"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},");\t\t"),t("span",{style:{color:"#6A737D"}},"// 设置持有者为 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"setState"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");\t\t\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 设置 state = 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"() { "),t("span",{style:{color:"#6F42C1"}},"release"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},"); }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 外部不会直接调用这个方法 这个方法是 AQS 内调用的，外部调用 unlock 时触发此方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"tryRelease"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," unused) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"setExclusiveOwnerThread"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},");\t\t"),t("span",{style:{color:"#6A737D"}},"// 设置持有者为 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"setState"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");\t\t\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 设置 state = 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"getTask()"),p("：获取任务，线程空闲时间超过 keepAliveTime 就会被回收，判断的依据是"),t("strong",null,"当前线程阻塞获取任务超过保活时间"),p("，方法返回 null 就代表当前线程要被回收了，返回到 runWorker 执行线程退出逻辑。线程池具有担保机制，对于 RUNNING 状态下的超时回收，要保证线程池中最少有一个线程运行，或者任务阻塞队列已经是空")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," Runnable "),t("span",{style:{color:"#B392F0"}},"getTask"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 超时标记，表示当前线程获取任务是否超时，true 表示已超时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timedOut "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},"; ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取线程池当前运行状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," rs "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateOf"),t("span",{style:{color:"#E1E4E8"}},"(c);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【tryTerminate】打断线程后执行到这，此时线程池状态为STOP或者线程池状态为SHUTDOWN并且队列已经是空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 所以下面的 if 条件一定是成立的，可以直接返回 null，线程就应该退出了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (rs "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," (rs "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," STOP "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," workQueue."),t("span",{style:{color:"#B392F0"}},"isEmpty"),t("span",{style:{color:"#E1E4E8"}},"())) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 使用 CAS 自旋的方式让 ctl 值 -1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"decrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 获取线程池中的线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," wc "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(c);")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 线程没有明确的区分谁是核心或者非核心线程，是根据当前池中的线程数量判断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// timed = false 表示当前这个线程 获取task时不支持超时机制的，当前线程会使用 queue.take() 阻塞获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// timed = true 表示当前这个线程 获取task时支持超时机制，使用 queue.poll(xxx,xxx) 超时获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件一代表允许回收核心线程，那就无所谓了，全部线程都执行超时回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件二成立说明线程数量大于核心线程数，当前线程认为是非核心线程，有保活时间，去超时获取任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timed "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," allowCoreThreadTimeOut "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," wc "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 如果线程数量是否超过最大线程数，直接回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果当前线程【允许超时回收并且已经超时了】，就应该被回收了，由于【担保机制】还要做判断：")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// \t  wc > 1 说明线程池还用其他线程，当前线程可以直接回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//    workQueue.isEmpty() 前置条件是 wc = 1，【如果当前任务队列也是空了，最后一个线程就可以退出】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ((wc "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," maximumPoolSize "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," (timed "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," timedOut)) "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," (wc "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," workQueue."),t("span",{style:{color:"#B392F0"}},"isEmpty"),t("span",{style:{color:"#E1E4E8"}},"())) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 使用 CAS 机制将 ctl 值 -1 ,减 1 成功的线程，返回 null，代表可以退出")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"compareAndDecrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"(c))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"continue"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 根据当前线程是否需要超时回收，【选择从队列获取任务的方法】是超时获取或者阻塞获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Runnable r "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," timed "),t("span",{style:{color:"#F97583"}},"?")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                workQueue."),t("span",{style:{color:"#B392F0"}},"poll"),t("span",{style:{color:"#E1E4E8"}},"(keepAliveTime, TimeUnit.NANOSECONDS) "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," workQueue."),t("span",{style:{color:"#B392F0"}},"take"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取到任务返回任务，【阻塞获取会阻塞到获取任务为止】，不会返回 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (r "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," r;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取任务为 null 说明超时了，将超时标记设置为 true，下次自旋时返 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            timedOut "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (InterruptedException "),t("span",{style:{color:"#FFAB70"}},"retry"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 阻塞线程被打断后超时标记置为 false，【说明被打断不算超时】，要继续获取，直到超时或者获取到任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 如果线程池 SHUTDOWN 状态下的打断，会在循环获取任务前判断，返回 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            timedOut "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," Runnable "),t("span",{style:{color:"#6F42C1"}},"getTask"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 超时标记，表示当前线程获取任务是否超时，true 表示已超时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timedOut "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},"; ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取线程池当前运行状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," rs "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateOf"),t("span",{style:{color:"#24292E"}},"(c);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【tryTerminate】打断线程后执行到这，此时线程池状态为STOP或者线程池状态为SHUTDOWN并且队列已经是空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 所以下面的 if 条件一定是成立的，可以直接返回 null，线程就应该退出了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (rs "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," SHUTDOWN "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," (rs "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," STOP "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," workQueue."),t("span",{style:{color:"#6F42C1"}},"isEmpty"),t("span",{style:{color:"#24292E"}},"())) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 使用 CAS 自旋的方式让 ctl 值 -1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"decrementWorkerCount"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 获取线程池中的线程数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," wc "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(c);")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 线程没有明确的区分谁是核心或者非核心线程，是根据当前池中的线程数量判断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// timed = false 表示当前这个线程 获取task时不支持超时机制的，当前线程会使用 queue.take() 阻塞获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// timed = true 表示当前这个线程 获取task时支持超时机制，使用 queue.poll(xxx,xxx) 超时获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件一代表允许回收核心线程，那就无所谓了，全部线程都执行超时回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件二成立说明线程数量大于核心线程数，当前线程认为是非核心线程，有保活时间，去超时获取任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timed "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," allowCoreThreadTimeOut "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," wc "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," corePoolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 如果线程数量是否超过最大线程数，直接回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果当前线程【允许超时回收并且已经超时了】，就应该被回收了，由于【担保机制】还要做判断：")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// \t  wc > 1 说明线程池还用其他线程，当前线程可以直接回收")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//    workQueue.isEmpty() 前置条件是 wc = 1，【如果当前任务队列也是空了，最后一个线程就可以退出】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ((wc "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," maximumPoolSize "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," (timed "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," timedOut)) "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," (wc "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," workQueue."),t("span",{style:{color:"#6F42C1"}},"isEmpty"),t("span",{style:{color:"#24292E"}},"())) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 使用 CAS 机制将 ctl 值 -1 ,减 1 成功的线程，返回 null，代表可以退出")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"compareAndDecrementWorkerCount"),t("span",{style:{color:"#24292E"}},"(c))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"continue"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 根据当前线程是否需要超时回收，【选择从队列获取任务的方法】是超时获取或者阻塞获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Runnable r "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," timed "),t("span",{style:{color:"#D73A49"}},"?")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                workQueue."),t("span",{style:{color:"#6F42C1"}},"poll"),t("span",{style:{color:"#24292E"}},"(keepAliveTime, TimeUnit.NANOSECONDS) "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," workQueue."),t("span",{style:{color:"#6F42C1"}},"take"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取到任务返回任务，【阻塞获取会阻塞到获取任务为止】，不会返回 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (r "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," r;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取任务为 null 说明超时了，将超时标记设置为 true，下次自旋时返 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            timedOut "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (InterruptedException "),t("span",{style:{color:"#E36209"}},"retry"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 阻塞线程被打断后超时标记置为 false，【说明被打断不算超时】，要继续获取，直到超时或者获取到任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 如果线程池 SHUTDOWN 状态下的打断，会在循环获取任务前判断，返回 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            timedOut "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"processWorkerExit()"),p("："),t("strong",null,"线程退出线程池"),p("，也有担保机制，保证队列中的任务被执行")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 正常退出 completedAbruptly = false，异常退出为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"processWorkerExit"),t("span",{style:{color:"#E1E4E8"}},"(Worker w, "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," completedAbruptly) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件成立代表当前 worker 是发生异常退出的，task 任务执行过程中向上抛出异常了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (completedAbruptly) ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从异常时到这里 ctl 一直没有 -1，需要在这里 -1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"decrementWorkerCount"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 加锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将当前 worker 完成的 task 数量，汇总到线程池的 completedTaskCount")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        completedTaskCount "),t("span",{style:{color:"#F97583"}},"+="),t("span",{style:{color:"#E1E4E8"}}," w.completedTasks;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 将 worker 从线程池中移除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        workers."),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 解锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 尝试停止线程池，唤醒下一个线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"tryTerminate"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 线程池不是停止状态就应该有线程运行【担保机制】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"runStateLessThan"),t("span",{style:{color:"#E1E4E8"}},"(c, STOP)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 正常退出的逻辑，是对空闲线程回收，不是执行出错")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"completedAbruptly) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 根据是否回收核心线程确定【线程池中的线程数量最小值】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," min "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," allowCoreThreadTimeOut "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 最小值为 0，但是线程队列不为空，需要一个线程来完成任务担保机制")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (min "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"workQueue."),t("span",{style:{color:"#B392F0"}},"isEmpty"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                min "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 线程池中的线程数量大于最小值可以直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," min)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行 task 时发生异常，有个线程因为异常终止了，需要添加")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 或者线程池中的数量小于最小值，这里要创建一个新 worker 加进线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 正常退出 completedAbruptly = false，异常退出为 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"processWorkerExit"),t("span",{style:{color:"#24292E"}},"(Worker w, "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," completedAbruptly) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件成立代表当前 worker 是发生异常退出的，task 任务执行过程中向上抛出异常了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (completedAbruptly) ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从异常时到这里 ctl 一直没有 -1，需要在这里 -1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"decrementWorkerCount"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 加锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将当前 worker 完成的 task 数量，汇总到线程池的 completedTaskCount")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        completedTaskCount "),t("span",{style:{color:"#D73A49"}},"+="),t("span",{style:{color:"#24292E"}}," w.completedTasks;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 将 worker 从线程池中移除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        workers."),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(w);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 解锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 尝试停止线程池，唤醒下一个线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"tryTerminate"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 线程池不是停止状态就应该有线程运行【担保机制】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"runStateLessThan"),t("span",{style:{color:"#24292E"}},"(c, STOP)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 正常退出的逻辑，是对空闲线程回收，不是执行出错")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"completedAbruptly) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 根据是否回收核心线程确定【线程池中的线程数量最小值】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," min "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," allowCoreThreadTimeOut "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," corePoolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 最小值为 0，但是线程队列不为空，需要一个线程来完成任务担保机制")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (min "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"workQueue."),t("span",{style:{color:"#6F42C1"}},"isEmpty"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                min "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 线程池中的线程数量大于最小值可以直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," min)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行 task 时发生异常，有个线程因为异常终止了，需要添加")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 或者线程池中的数量小于最小值，这里要创建一个新 worker 加进线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),zl=t("hr",null,null,-1),_l={id:"停止方法",tabindex:"-1"},Ml=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"shutdown()"),p("：停止线程池")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"shutdown"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"checkShutdownAccess"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为 SHUTDOWN，如果线程池状态大于 SHUTDOWN，就不会设置直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"advanceRunState"),t("span",{style:{color:"#E1E4E8"}},"(SHUTDOWN);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 中断空闲线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"interruptIdleWorkers"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 空方法，子类可以扩展")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"onShutdown"),t("span",{style:{color:"#E1E4E8"}},"(); ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 释放线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"tryTerminate"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"shutdown"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"checkShutdownAccess"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为 SHUTDOWN，如果线程池状态大于 SHUTDOWN，就不会设置直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"advanceRunState"),t("span",{style:{color:"#24292E"}},"(SHUTDOWN);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 中断空闲线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"interruptIdleWorkers"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 空方法，子类可以扩展")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"onShutdown"),t("span",{style:{color:"#24292E"}},"(); ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 释放线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"tryTerminate"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"interruptIdleWorkers()"),p("：shutdown 方法会"),t("strong",null,"中断所有空闲线程"),p("，根据是否可以获取 AQS 独占锁判断是否处于工作状态。线程之所以空闲是因为阻塞队列没有任务，不会中断正在运行的线程，所以 shutdown 方法会让所有的任务执行完毕")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// onlyOne == true 说明只中断一个线程 ，false 则中断所有线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"interruptIdleWorkers"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," onlyOne) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"/"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"/"),t("span",{style:{color:"#E1E4E8"}},"持有全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 遍历所有 worker")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (Worker w "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," workers) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取当前 worker 的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Thread t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," w.thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件一成立：说明当前迭代的这个线程尚未中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件二成立：说明【当前worker处于空闲状态】，阻塞在poll或者take，因为worker执行task时是要加锁的")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"//           每个worker有一个独占锁，w.tryLock()尝试加锁，加锁成功返回 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"t."),t("span",{style:{color:"#B392F0"}},"isInterrupted"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," w."),t("span",{style:{color:"#B392F0"}},"tryLock"),t("span",{style:{color:"#E1E4E8"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 中断线程，处于 queue 阻塞的线程会被唤醒，进入下一次自旋，返回 null，执行退出相逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    t."),t("span",{style:{color:"#B392F0"}},"interrupt"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (SecurityException "),t("span",{style:{color:"#FFAB70"}},"ignore"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 释放worker的独占锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    w."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// false，代表中断所有的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (onlyOne)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 释放全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// onlyOne == true 说明只中断一个线程 ，false 则中断所有线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"interruptIdleWorkers"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," onlyOne) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"/"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"/"),t("span",{style:{color:"#24292E"}},"持有全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 遍历所有 worker")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (Worker w "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," workers) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 获取当前 worker 的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Thread t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," w.thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件一成立：说明当前迭代的这个线程尚未中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件二成立：说明【当前worker处于空闲状态】，阻塞在poll或者take，因为worker执行task时是要加锁的")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"//           每个worker有一个独占锁，w.tryLock()尝试加锁，加锁成功返回 true")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"t."),t("span",{style:{color:"#6F42C1"}},"isInterrupted"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," w."),t("span",{style:{color:"#6F42C1"}},"tryLock"),t("span",{style:{color:"#24292E"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 中断线程，处于 queue 阻塞的线程会被唤醒，进入下一次自旋，返回 null，执行退出相逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    t."),t("span",{style:{color:"#6F42C1"}},"interrupt"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (SecurityException "),t("span",{style:{color:"#E36209"}},"ignore"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 释放worker的独占锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    w."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// false，代表中断所有的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (onlyOne)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 释放全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"shutdownNow()"),p("：直接关闭线程池，不会等待任务执行完成")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," List"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"Runnable"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"shutdownNow"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回值引用")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    List<"),t("span",{style:{color:"#F97583"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}},"> tasks;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"checkShutdownAccess"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为STOP")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"advanceRunState"),t("span",{style:{color:"#E1E4E8"}},"(STOP);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 中断线程池中【所有线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"interruptWorkers"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从阻塞队列中导出未处理的task")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        tasks "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"drainQueue"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"tryTerminate"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回当前任务队列中 未处理的任务。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," tasks;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," List"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"Runnable"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"shutdownNow"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回值引用")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    List<"),t("span",{style:{color:"#D73A49"}},"Runnable"),t("span",{style:{color:"#24292E"}},"> tasks;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"checkShutdownAccess"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为STOP")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"advanceRunState"),t("span",{style:{color:"#24292E"}},"(STOP);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 中断线程池中【所有线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"interruptWorkers"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从阻塞队列中导出未处理的task")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        tasks "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"drainQueue"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"tryTerminate"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 返回当前任务队列中 未处理的任务。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," tasks;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"tryTerminate()"),p("：设置为 TERMINATED 状态 "),t("code",null,"if either (SHUTDOWN and pool and queue empty) or (STOP and pool empty)")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"tryTerminate"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取 ctl 的值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 线程池正常，或者有其他线程执行了状态转换的方法，当前线程直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"isRunning"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runStateAtLeast"),t("span",{style:{color:"#E1E4E8"}},"(c, TIDYING) "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 线程池是 SHUTDOWN 并且任务队列不是空，需要去处理队列中的任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            ("),t("span",{style:{color:"#B392F0"}},"runStateOf"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," SHUTDOWN "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}}," workQueue."),t("span",{style:{color:"#B392F0"}},"isEmpty"),t("span",{style:{color:"#E1E4E8"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这里说明线程池状态为 STOP 或者线程池状态为 SHUTDOWN 并且队列已经是空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断线程池中线程的数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(c) "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【中断一个空闲线程】，在 queue.take() | queue.poll() 阻塞空闲")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 唤醒后的线程会在getTask()方法返回null，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 执行 processWorkerExit 退出逻辑时会再次调用 tryTerminate() 唤醒下一个空闲线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"interruptIdleWorkers"),t("span",{style:{color:"#E1E4E8"}},"(ONLY_ONE);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 池中的线程数量为 0 来到这里")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock mainLock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 加全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        mainLock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为 TIDYING 状态，线程数量为 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (ctl."),t("span",{style:{color:"#B392F0"}},"compareAndSet"),t("span",{style:{color:"#E1E4E8"}},"(c, "),t("span",{style:{color:"#B392F0"}},"ctlOf"),t("span",{style:{color:"#E1E4E8"}},"(TIDYING, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"))) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 结束线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#B392F0"}},"terminated"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为TERMINATED状态。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    ctl."),t("span",{style:{color:"#B392F0"}},"set"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#B392F0"}},"ctlOf"),t("span",{style:{color:"#E1E4E8"}},"(TERMINATED, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 【唤醒所有调用 awaitTermination() 方法的线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    termination."),t("span",{style:{color:"#B392F0"}},"signalAll"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 释放线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            mainLock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"tryTerminate"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取 ctl 的值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 线程池正常，或者有其他线程执行了状态转换的方法，当前线程直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"isRunning"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runStateAtLeast"),t("span",{style:{color:"#24292E"}},"(c, TIDYING) "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 线程池是 SHUTDOWN 并且任务队列不是空，需要去处理队列中的任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            ("),t("span",{style:{color:"#6F42C1"}},"runStateOf"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," SHUTDOWN "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}}," workQueue."),t("span",{style:{color:"#6F42C1"}},"isEmpty"),t("span",{style:{color:"#24292E"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这里说明线程池状态为 STOP 或者线程池状态为 SHUTDOWN 并且队列已经是空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断线程池中线程的数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(c) "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【中断一个空闲线程】，在 queue.take() | queue.poll() 阻塞空闲")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 唤醒后的线程会在getTask()方法返回null，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 执行 processWorkerExit 退出逻辑时会再次调用 tryTerminate() 唤醒下一个空闲线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"interruptIdleWorkers"),t("span",{style:{color:"#24292E"}},"(ONLY_ONE);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 池中的线程数量为 0 来到这里")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock mainLock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".mainLock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 加全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        mainLock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为 TIDYING 状态，线程数量为 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (ctl."),t("span",{style:{color:"#6F42C1"}},"compareAndSet"),t("span",{style:{color:"#24292E"}},"(c, "),t("span",{style:{color:"#6F42C1"}},"ctlOf"),t("span",{style:{color:"#24292E"}},"(TIDYING, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"))) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 结束线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6F42C1"}},"terminated"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 设置线程池状态为TERMINATED状态。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    ctl."),t("span",{style:{color:"#6F42C1"}},"set"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#6F42C1"}},"ctlOf"),t("span",{style:{color:"#24292E"}},"(TERMINATED, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 【唤醒所有调用 awaitTermination() 方法的线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    termination."),t("span",{style:{color:"#6F42C1"}},"signalAll"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 释放线程池全局锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            mainLock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Hl=t("hr",null,null,-1),Gl={id:"future",tabindex:"-1"},Vl={id:"线程使用",tabindex:"-1"},Yl=t("p",null,"FutureTask 未来任务对象，继承 Runnable、Future 接口，用于包装 Callable 对象，实现任务的提交",-1),Xl=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"main"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"[] args) throws ExecutionException, InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    FutureTask<"),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"> task "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," FutureTask<>("),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," Callable<"),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},">() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," String "),t("span",{style:{color:"#B392F0"}},"call"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"throws"),t("span",{style:{color:"#E1E4E8"}}," Exception {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'"Hello World"'),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    });")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Thread"),t("span",{style:{color:"#E1E4E8"}},"(task)."),t("span",{style:{color:"#B392F0"}},"start"),t("span",{style:{color:"#E1E4E8"}},"();\t"),t("span",{style:{color:"#6A737D"}},"//启动线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    String msg "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," task."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"();\t"),t("span",{style:{color:"#6A737D"}},"//获取返回任务数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"(msg);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"main"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"[] args) throws ExecutionException, InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    FutureTask<"),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"> task "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," FutureTask<>("),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," Callable<"),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},">() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," String "),t("span",{style:{color:"#6F42C1"}},"call"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"throws"),t("span",{style:{color:"#24292E"}}," Exception {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'"Hello World"'),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    });")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Thread"),t("span",{style:{color:"#24292E"}},"(task)."),t("span",{style:{color:"#6F42C1"}},"start"),t("span",{style:{color:"#24292E"}},"();\t"),t("span",{style:{color:"#6A737D"}},"//启动线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    String msg "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," task."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"();\t"),t("span",{style:{color:"#6A737D"}},"//获取返回任务数据")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"(msg);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),Jl=t("p",null,"构造方法：",-1),$l=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"FutureTask"),t("span",{style:{color:"#E1E4E8"}},"(Callable"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"V"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," callable){")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".callable "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," callable;\t"),t("span",{style:{color:"#6A737D"}},"// 属性注入")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".state "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," NEW; \t\t\t"),t("span",{style:{color:"#6A737D"}},"// 任务状态设置为 new")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"FutureTask"),t("span",{style:{color:"#24292E"}},"(Callable"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"V"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," callable){")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".callable "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," callable;\t"),t("span",{style:{color:"#6A737D"}},"// 属性注入")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".state "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," NEW; \t\t\t"),t("span",{style:{color:"#6A737D"}},"// 任务状态设置为 new")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),Kl=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"FutureTask"),t("span",{style:{color:"#E1E4E8"}},"(Runnable runnable, V result) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 适配器模式")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".callable "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Executors."),t("span",{style:{color:"#B392F0"}},"callable"),t("span",{style:{color:"#E1E4E8"}},"(runnable, result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".state "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," NEW;       ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," Callable"),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}},"T"),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"callable"),t("span",{style:{color:"#E1E4E8"}},"(Runnable task, T result) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (task "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 使用装饰者模式将 runnable 转换成 callable 接口，外部线程通过 get 获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前任务执行结果时，结果可能为 null 也可能为传进来的值，【传进来什么返回什么】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," RunnableAdapter<"),t("span",{style:{color:"#F97583"}},"T"),t("span",{style:{color:"#E1E4E8"}},">(task, result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"RunnableAdapter"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"T"),t("span",{style:{color:"#E1E4E8"}},"> "),t("span",{style:{color:"#F97583"}},"implements"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Callable"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"T"),t("span",{style:{color:"#E1E4E8"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Runnable task;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," T result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 构造方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"RunnableAdapter"),t("span",{style:{color:"#E1E4E8"}},"(Runnable "),t("span",{style:{color:"#FFAB70"}},"task"),t("span",{style:{color:"#E1E4E8"}},", T "),t("span",{style:{color:"#FFAB70"}},"result"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".task "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," task;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".result "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," T "),t("span",{style:{color:"#B392F0"}},"call"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 实则调用 Runnable#run 方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        task."),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回值为构造 FutureTask 对象时传入的返回值或者是 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"FutureTask"),t("span",{style:{color:"#24292E"}},"(Runnable runnable, V result) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 适配器模式")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".callable "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Executors."),t("span",{style:{color:"#6F42C1"}},"callable"),t("span",{style:{color:"#24292E"}},"(runnable, result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".state "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," NEW;       ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," Callable"),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}},"T"),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"callable"),t("span",{style:{color:"#24292E"}},"(Runnable task, T result) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (task "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 使用装饰者模式将 runnable 转换成 callable 接口，外部线程通过 get 获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前任务执行结果时，结果可能为 null 也可能为传进来的值，【传进来什么返回什么】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," RunnableAdapter<"),t("span",{style:{color:"#D73A49"}},"T"),t("span",{style:{color:"#24292E"}},">(task, result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"RunnableAdapter"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"T"),t("span",{style:{color:"#24292E"}},"> "),t("span",{style:{color:"#D73A49"}},"implements"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Callable"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"T"),t("span",{style:{color:"#24292E"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Runnable task;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," T result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 构造方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"RunnableAdapter"),t("span",{style:{color:"#24292E"}},"(Runnable "),t("span",{style:{color:"#E36209"}},"task"),t("span",{style:{color:"#24292E"}},", T "),t("span",{style:{color:"#E36209"}},"result"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".task "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," task;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".result "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," T "),t("span",{style:{color:"#6F42C1"}},"call"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 实则调用 Runnable#run 方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        task."),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回值为构造 FutureTask 对象时传入的返回值或者是 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),Zl=t("hr",null,null,-1),so={id:"成员属性-2",tabindex:"-1"},lo=t("p",null,"FutureTask 类的成员属性：",-1),oo=t("ul",null,[t("li",null,[t("p",null,"任务状态："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示当前task状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务尚未执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," NEW          "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务正在结束，尚未完全结束，一种临界状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," COMPLETING   "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务正常结束")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," NORMAL       "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务执行过程中发生了异常，内部封装的 callable.run() 向上抛出异常了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," EXCEPTIONAL  "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"3"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务被取消")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," CANCELLED    "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"4"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务中断中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTING "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"5"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务已中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTED  "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"6"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 表示当前task状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务尚未执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," NEW          "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务正在结束，尚未完全结束，一种临界状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," COMPLETING   "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务正常结束")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," NORMAL       "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务执行过程中发生了异常，内部封装的 callable.run() 向上抛出异常了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," EXCEPTIONAL  "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"3"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务被取消")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," CANCELLED    "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"4"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务中断中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," INTERRUPTING "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"5"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 当前任务已中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," INTERRUPTED  "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"6"),t("span",{style:{color:"#24292E"}},";")])])])])]),t("li",null,[t("p",null,"任务对象："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," Callable<"),t("span",{style:{color:"#F97583"}},"V"),t("span",{style:{color:"#E1E4E8"}},"> callable;\t"),t("span",{style:{color:"#6A737D"}},"// Runnable 使用装饰者模式伪装成 Callable")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," Callable<"),t("span",{style:{color:"#D73A49"}},"V"),t("span",{style:{color:"#24292E"}},"> callable;\t"),t("span",{style:{color:"#6A737D"}},"// Runnable 使用装饰者模式伪装成 Callable")])])])])]),t("li",null,[t("p",null,[t("strong",null,"存储任务执行的结果"),p("，这是 run 方法返回值是 void 也可以获取到执行结果的原因：")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 正常情况下：任务正常执行结束，outcome 保存执行结果，callable 返回值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 非正常情况：callable 向上抛出异常，outcome 保存异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," Object outcome;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 正常情况下：任务正常执行结束，outcome 保存执行结果，callable 返回值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 非正常情况：callable 向上抛出异常，outcome 保存异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," Object outcome;")])])])])]),t("li",null,[t("p",null,"执行当前任务的线程对象："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," Thread runner;\t"),t("span",{style:{color:"#6A737D"}},"// 当前任务被线程执行期间，保存当前执行任务的线程对象引用")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," Thread runner;\t"),t("span",{style:{color:"#6A737D"}},"// 当前任务被线程执行期间，保存当前执行任务的线程对象引用")])])])])]),t("li",null,[t("p",null,[t("strong",null,"线程阻塞队列的头节点"),p("：")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 会有很多线程去 get 当前任务的结果，这里使用了一种数据结构头插头取（类似栈）的一个队列来保存所有的 get 线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," WaitNode waiters;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 会有很多线程去 get 当前任务的结果，这里使用了一种数据结构头插头取（类似栈）的一个队列来保存所有的 get 线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," WaitNode waiters;")])])])])]),t("li",null,[t("p",null,"内部类："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"WaitNode"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 单向链表")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," Thread thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," WaitNode next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"WaitNode"),t("span",{style:{color:"#E1E4E8"}},"() { thread "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"(); }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"WaitNode"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 单向链表")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," Thread thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," WaitNode next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"WaitNode"),t("span",{style:{color:"#24292E"}},"() { thread "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"(); }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),no=t("hr",null,null,-1),ao={id:"成员方法-1",tabindex:"-1"},eo=t("p",null,"FutureTask 类的成员方法：",-1),co=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"FutureTask#run"),p("：任务执行入口")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//条件一：成立说明当前 task 已经被执行过了或者被 cancel 了，非 NEW 状态的任务，线程就不需要处理了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//条件二：线程是 NEW 状态，尝试设置当前任务对象的线程是当前线程，设置失败说明其他线程抢占了该任务，直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (state "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," NEW "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", runnerOffset, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这里，当前 task 一定是 NEW 状态，而且【当前线程也抢占 task 成功】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Callable<"),t("span",{style:{color:"#F97583"}},"V"),t("span",{style:{color:"#E1E4E8"}},"> c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," callable;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断任务是否为空，防止空指针异常；判断 state 状态，防止外部线程在此期间 cancel 掉当前任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【因为 task 的执行者已经设置为当前线程，所以这里是线程安全的】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (c "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," state "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," NEW) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            V result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// true 表示 callable.run 代码块执行成功 未抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// false 表示 callable.run 代码块执行失败 抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," ran;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 【调用自定义的方法，执行结果赋值给 result】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                result "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," c."),t("span",{style:{color:"#B392F0"}},"call"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 没有出现异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                ran "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (Throwable "),t("span",{style:{color:"#FFAB70"}},"ex"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 出现异常，返回值置空，ran 置为 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                result "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                ran "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 设置返回的异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"setException"),t("span",{style:{color:"#E1E4E8"}},"(ex);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 代码块执行正常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (ran)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 设置返回的结果")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"set"),t("span",{style:{color:"#E1E4E8"}},"(result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 任务执行完成，取消线程的引用，help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        runner "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断任务是不是被中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 执行中断处理方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"handlePossibleCancellationInterrupt"),t("span",{style:{color:"#E1E4E8"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//条件一：成立说明当前 task 已经被执行过了或者被 cancel 了，非 NEW 状态的任务，线程就不需要处理了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//条件二：线程是 NEW 状态，尝试设置当前任务对象的线程是当前线程，设置失败说明其他线程抢占了该任务，直接返回")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (state "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," NEW "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", runnerOffset, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 执行到这里，当前 task 一定是 NEW 状态，而且【当前线程也抢占 task 成功】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Callable<"),t("span",{style:{color:"#D73A49"}},"V"),t("span",{style:{color:"#24292E"}},"> c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," callable;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断任务是否为空，防止空指针异常；判断 state 状态，防止外部线程在此期间 cancel 掉当前任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【因为 task 的执行者已经设置为当前线程，所以这里是线程安全的】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (c "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," state "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," NEW) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            V result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// true 表示 callable.run 代码块执行成功 未抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// false 表示 callable.run 代码块执行失败 抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," ran;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 【调用自定义的方法，执行结果赋值给 result】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                result "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," c."),t("span",{style:{color:"#6F42C1"}},"call"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 没有出现异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                ran "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (Throwable "),t("span",{style:{color:"#E36209"}},"ex"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 出现异常，返回值置空，ran 置为 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                result "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                ran "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 设置返回的异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"setException"),t("span",{style:{color:"#24292E"}},"(ex);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 代码块执行正常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (ran)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 设置返回的结果")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"set"),t("span",{style:{color:"#24292E"}},"(result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 任务执行完成，取消线程的引用，help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        runner "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断任务是不是被中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 执行中断处理方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"handlePossibleCancellationInterrupt"),t("span",{style:{color:"#24292E"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,[t("code",null,"FutureTask#set"),p("：设置正常返回值，首先将任务状态设置为 COMPLETING 状态代表完成中，逻辑执行完设置为 NORMAL 状态代表任务正常执行完成，最后唤醒 get() 阻塞线程")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"set"),t("span",{style:{color:"#E1E4E8"}},"(V v) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// CAS 方式设置当前任务状态为完成中，设置失败说明其他线程取消了该任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", stateOffset, NEW, COMPLETING)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【将结果赋值给 outcome】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        outcome "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," v;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将当前任务状态修改为 NORMAL 正常结束状态。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        UNSAFE."),t("span",{style:{color:"#B392F0"}},"putOrderedInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", stateOffset, NORMAL);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"finishCompletion"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"set"),t("span",{style:{color:"#24292E"}},"(V v) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// CAS 方式设置当前任务状态为完成中，设置失败说明其他线程取消了该任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", stateOffset, NEW, COMPLETING)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【将结果赋值给 outcome】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        outcome "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," v;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将当前任务状态修改为 NORMAL 正常结束状态。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        UNSAFE."),t("span",{style:{color:"#6F42C1"}},"putOrderedInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", stateOffset, NORMAL);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"finishCompletion"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,"FutureTask#setException：设置异常返回值"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"setException"),t("span",{style:{color:"#E1E4E8"}},"(Throwable t) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", stateOffset, NEW, COMPLETING)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 赋值给返回结果，用来向上层抛出来的异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        outcome "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将当前任务的状态 修改为 EXCEPTIONAL")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        UNSAFE."),t("span",{style:{color:"#B392F0"}},"putOrderedInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", stateOffset, EXCEPTIONAL);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"finishCompletion"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"setException"),t("span",{style:{color:"#24292E"}},"(Throwable t) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", stateOffset, NEW, COMPLETING)) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 赋值给返回结果，用来向上层抛出来的异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        outcome "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将当前任务的状态 修改为 EXCEPTIONAL")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        UNSAFE."),t("span",{style:{color:"#6F42C1"}},"putOrderedInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", stateOffset, EXCEPTIONAL);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"finishCompletion"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,[t("code",null,"FutureTask#finishCompletion"),p("："),t("strong",null,"唤醒 get() 阻塞线程")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"finishCompletion"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 遍历所有的等待的节点，q 指向头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (WaitNode q; (q "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," waiters) "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 使用cas设置 waiters 为 null，防止外部线程使用cancel取消当前任务，触发finishCompletion方法重复执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", waitersOffset, q, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取当前 WaitNode 节点封装的 thread")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                Thread t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," q.thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前线程不为 null，唤醒当前 get() 等待获取数据的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    q.thread "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    LockSupport."),t("span",{style:{color:"#B392F0"}},"unpark"),t("span",{style:{color:"#E1E4E8"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取当前节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                WaitNode next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," q.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前节点是最后一个节点了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (next "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 断开链表")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                q.next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},"; "),t("span",{style:{color:"#6A737D"}},"// help gc")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                q "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"done"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    callable "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";\t"),t("span",{style:{color:"#6A737D"}},"// help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"finishCompletion"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 遍历所有的等待的节点，q 指向头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (WaitNode q; (q "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," waiters) "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 使用cas设置 waiters 为 null，防止外部线程使用cancel取消当前任务，触发finishCompletion方法重复执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", waitersOffset, q, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 自旋")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取当前 WaitNode 节点封装的 thread")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                Thread t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," q.thread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前线程不为 null，唤醒当前 get() 等待获取数据的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    q.thread "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    LockSupport."),t("span",{style:{color:"#6F42C1"}},"unpark"),t("span",{style:{color:"#24292E"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取当前节点的下一个节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                WaitNode next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," q.next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 当前节点是最后一个节点了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (next "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 断开链表")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                q.next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},"; "),t("span",{style:{color:"#6A737D"}},"// help gc")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                q "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," next;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"done"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    callable "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";\t"),t("span",{style:{color:"#6A737D"}},"// help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,[t("code",null,"FutureTask#handlePossibleCancellationInterrupt"),p("：任务中断处理")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"handlePossibleCancellationInterrupt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 中断状态中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," (state "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 等待中断完成")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Thread."),t("span",{style:{color:"#B392F0"}},"yield"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"handlePossibleCancellationInterrupt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 中断状态中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," (state "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 等待中断完成")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Thread."),t("span",{style:{color:"#6F42C1"}},"yield"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"FutureTask#get"),p("：获取任务执行的返回值，执行 run 和 get 的不是同一个线程，一般有多个线程 get，只有一个线程 run")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," V "),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"() throws InterruptedException, ExecutionException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取当前任务状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明任务还没执行完成")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," COMPLETING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回 task 当前状态，可能当前线程在里面已经睡了一会")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"awaitDone"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"report"),t("span",{style:{color:"#E1E4E8"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," V "),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"() throws InterruptedException, ExecutionException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取当前任务状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明任务还没执行完成")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," COMPLETING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 返回 task 当前状态，可能当前线程在里面已经睡了一会")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"awaitDone"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"report"),t("span",{style:{color:"#24292E"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,[t("code",null,"FutureTask#awaitDone"),p("："),t("strong",null,"get 线程封装成 WaitNode 对象进入阻塞队列阻塞等待")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"awaitDone"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," timed, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," nanos) throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 0 不带超时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," deadline "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," timed "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," System."),t("span",{style:{color:"#B392F0"}},"nanoTime"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," nanos "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 引用当前线程，封装成 WaitNode 对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    WaitNode q "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示当前线程 waitNode 对象，是否进入阻塞队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," queued "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【三次自旋开始休眠】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断当前 get() 线程是否被打断，打断返回 true，清除打断标记")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (Thread."),t("span",{style:{color:"#B392F0"}},"interrupted"),t("span",{style:{color:"#E1E4E8"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前线程对应的等待 node 出队，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"removeWaiter"),t("span",{style:{color:"#E1E4E8"}},"(q);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"InterruptedException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 获取任务状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明当前任务执行完成已经有结果了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," COMPLETING) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明已经为当前线程创建了 WaitNode，置空 help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (q "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                q.thread "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 返回当前的状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明当前任务接近完成状态，这里让当前线程释放一下 cpu ，等待进行下一次抢占 cpu")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," COMPLETING) ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Thread."),t("span",{style:{color:"#B392F0"}},"yield"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【第一次自旋】，当前线程还未创建 WaitNode 对象，此时为当前线程创建 WaitNode对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (q "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            q "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"WaitNode"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【第二次自旋】，当前线程已经创建 WaitNode 对象了，但是node对象还未入队")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"queued)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// waiters 指向队首，让当前 WaitNode 成为新的队首，【头插法】，失败说明其他线程修改了新的队首")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            queued "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", waitersOffset, q.next "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," waiters, q);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【第三次自旋】，会到这里，或者 else 内")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (timed) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            nanos "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," deadline "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," System."),t("span",{style:{color:"#B392F0"}},"nanoTime"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (nanos "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0L"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"removeWaiter"),t("span",{style:{color:"#E1E4E8"}},"(q);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 阻塞指定的时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"parkNanos"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立：说明需要阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【当前 get 操作的线程被 park 阻塞】，除非有其它线程将唤醒或者将当前线程中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            LockSupport."),t("span",{style:{color:"#B392F0"}},"park"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"awaitDone"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," timed, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," nanos) throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 0 不带超时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," deadline "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," timed "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," System."),t("span",{style:{color:"#6F42C1"}},"nanoTime"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," nanos "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 引用当前线程，封装成 WaitNode 对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    WaitNode q "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 表示当前线程 waitNode 对象，是否进入阻塞队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," queued "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 【三次自旋开始休眠】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断当前 get() 线程是否被打断，打断返回 true，清除打断标记")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (Thread."),t("span",{style:{color:"#6F42C1"}},"interrupted"),t("span",{style:{color:"#24292E"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前线程对应的等待 node 出队，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"removeWaiter"),t("span",{style:{color:"#24292E"}},"(q);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"InterruptedException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 获取任务状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明当前任务执行完成已经有结果了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," COMPLETING) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明已经为当前线程创建了 WaitNode，置空 help GC")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (q "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                q.thread "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 返回当前的状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," s;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立说明当前任务接近完成状态，这里让当前线程释放一下 cpu ，等待进行下一次抢占 cpu")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," COMPLETING) ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Thread."),t("span",{style:{color:"#6F42C1"}},"yield"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【第一次自旋】，当前线程还未创建 WaitNode 对象，此时为当前线程创建 WaitNode对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (q "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            q "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"WaitNode"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【第二次自旋】，当前线程已经创建 WaitNode 对象了，但是node对象还未入队")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"queued)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// waiters 指向队首，让当前 WaitNode 成为新的队首，【头插法】，失败说明其他线程修改了新的队首")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            queued "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", waitersOffset, q.next "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," waiters, q);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【第三次自旋】，会到这里，或者 else 内")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (timed) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            nanos "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," deadline "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," System."),t("span",{style:{color:"#6F42C1"}},"nanoTime"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (nanos "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0L"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"removeWaiter"),t("span",{style:{color:"#24292E"}},"(q);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 阻塞指定的时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"parkNanos"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", nanos);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 条件成立：说明需要阻塞")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 【当前 get 操作的线程被 park 阻塞】，除非有其它线程将唤醒或者将当前线程中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            LockSupport."),t("span",{style:{color:"#6F42C1"}},"park"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,[t("code",null,"FutureTask#report"),p("：封装运行结果，可以获取 run() 方法中设置的成员变量 outcome，"),t("strong",null,"这是 run 方法的返回值是 void 也可以获取到任务执行的结果的原因")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," V "),t("span",{style:{color:"#B392F0"}},"report"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s) throws ExecutionException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取执行结果，是在一个 futuretask 对象中的属性，可以直接获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Object x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," outcome;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前任务状态正常结束")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," NORMAL)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (V)x;\t"),t("span",{style:{color:"#6A737D"}},"// 直接返回 callable 的逻辑结果")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前任务被取消或者中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," CANCELLED)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"CancellationException"),t("span",{style:{color:"#E1E4E8"}},"();\t\t"),t("span",{style:{color:"#6A737D"}},"// 抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 执行到这里说明自定义的 callable 中的方法有异常，使用 outcome 上层抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ExecutionException"),t("span",{style:{color:"#E1E4E8"}},"((Throwable)x);\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," V "),t("span",{style:{color:"#6F42C1"}},"report"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s) throws ExecutionException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取执行结果，是在一个 futuretask 对象中的属性，可以直接获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Object x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," outcome;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前任务状态正常结束")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," NORMAL)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (V)x;\t"),t("span",{style:{color:"#6A737D"}},"// 直接返回 callable 的逻辑结果")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 当前任务被取消或者中断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," CANCELLED)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"CancellationException"),t("span",{style:{color:"#24292E"}},"();\t\t"),t("span",{style:{color:"#6A737D"}},"// 抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 执行到这里说明自定义的 callable 中的方法有异常，使用 outcome 上层抛出异常")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ExecutionException"),t("span",{style:{color:"#24292E"}},"((Throwable)x);\t")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"FutureTask#cancel"),p("：任务取消，打断正在执行该任务的线程")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," mayInterruptIfRunning) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件一：表示当前任务处于运行中或者处于线程池任务队列中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件二：表示修改状态，成功可以去执行下面逻辑，否则返回 false 表示 cancel 失败")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"(state "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," NEW "),t("span",{style:{color:"#F97583"}},"&&")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"          UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", stateOffset, NEW,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                   mayInterruptIfRunning "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTING "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," CANCELLED)))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果任务已经被执行，是否允许打断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (mayInterruptIfRunning) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取执行当前 FutureTask 的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                Thread t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," runner;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (t "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 打断执行的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    t."),t("span",{style:{color:"#B392F0"}},"interrupt"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 设置任务状态为【中断完成】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                UNSAFE."),t("span",{style:{color:"#B392F0"}},"putOrderedInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", stateOffset, INTERRUPTED);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 唤醒所有 get() 阻塞的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"finishCompletion"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," mayInterruptIfRunning) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件一：表示当前任务处于运行中或者处于线程池任务队列中")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 条件二：表示修改状态，成功可以去执行下面逻辑，否则返回 false 表示 cancel 失败")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"(state "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," NEW "),t("span",{style:{color:"#D73A49"}},"&&")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"          UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", stateOffset, NEW,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                   mayInterruptIfRunning "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," INTERRUPTING "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," CANCELLED)))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果任务已经被执行，是否允许打断")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (mayInterruptIfRunning) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取执行当前 FutureTask 的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                Thread t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," runner;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (t "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 打断执行的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    t."),t("span",{style:{color:"#6F42C1"}},"interrupt"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 设置任务状态为【中断完成】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                UNSAFE."),t("span",{style:{color:"#6F42C1"}},"putOrderedInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", stateOffset, INTERRUPTED);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 唤醒所有 get() 阻塞的线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"finishCompletion"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),to=t("hr",null,null,-1),po={id:"任务调度",tabindex:"-1"},ro={id:"timer",tabindex:"-1"},Eo=t("p",null,"Timer 实现定时功能，Timer 的优点在于简单易用，但由于所有任务都是由同一个线程来调度，因此所有任务都是串行执行的，同一时间只能有一个任务在执行，前一个任务的延迟或异常都将会影响到之后的任务",-1),yo=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"method1"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Timer timer "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Timer"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    TimerTask task1 "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"TimerTask"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"task 1"'),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"//int i = 1 / 0;//任务一的出错会导致任务二无法执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Thread."),t("span",{style:{color:"#B392F0"}},"sleep"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"2000"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    };")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    TimerTask task2 "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"TimerTask"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"task 2"'),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    };")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 使用 timer 添加两个任务，希望它们都在 1s 后执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 但由于 timer 内只有一个线程来顺序执行队列中的任务，因此任务1的延时，影响了任务2的执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    timer."),t("span",{style:{color:"#B392F0"}},"schedule"),t("span",{style:{color:"#E1E4E8"}},"(task1, "),t("span",{style:{color:"#79B8FF"}},"1000"),t("span",{style:{color:"#E1E4E8"}},");"),t("span",{style:{color:"#6A737D"}},"//17:45:56 c.ThreadPool [Timer-0] - task 1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    timer."),t("span",{style:{color:"#B392F0"}},"schedule"),t("span",{style:{color:"#E1E4E8"}},"(task2, "),t("span",{style:{color:"#79B8FF"}},"1000"),t("span",{style:{color:"#E1E4E8"}},");"),t("span",{style:{color:"#6A737D"}},"//17:45:58 c.ThreadPool [Timer-0] - task 2")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"method1"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Timer timer "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Timer"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    TimerTask task1 "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"TimerTask"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"task 1"'),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"//int i = 1 / 0;//任务一的出错会导致任务二无法执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Thread."),t("span",{style:{color:"#6F42C1"}},"sleep"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"2000"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    };")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    TimerTask task2 "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"TimerTask"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"task 2"'),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    };")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 使用 timer 添加两个任务，希望它们都在 1s 后执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t"),t("span",{style:{color:"#6A737D"}},"// 但由于 timer 内只有一个线程来顺序执行队列中的任务，因此任务1的延时，影响了任务2的执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    timer."),t("span",{style:{color:"#6F42C1"}},"schedule"),t("span",{style:{color:"#24292E"}},"(task1, "),t("span",{style:{color:"#005CC5"}},"1000"),t("span",{style:{color:"#24292E"}},");"),t("span",{style:{color:"#6A737D"}},"//17:45:56 c.ThreadPool [Timer-0] - task 1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    timer."),t("span",{style:{color:"#6F42C1"}},"schedule"),t("span",{style:{color:"#24292E"}},"(task2, "),t("span",{style:{color:"#005CC5"}},"1000"),t("span",{style:{color:"#24292E"}},");"),t("span",{style:{color:"#6A737D"}},"//17:45:58 c.ThreadPool [Timer-0] - task 2")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),io=t("hr",null,null,-1),uo={id:"scheduled",tabindex:"-1"},Fo=t("p",null,"任务调度线程池 ScheduledThreadPoolExecutor 继承 ThreadPoolExecutor：",-1),Ao=t("ul",null,[t("li",null,"使用内部类 ScheduledFutureTask 封装任务"),t("li",null,"使用内部类 DelayedWorkQueue 作为线程池队列"),t("li",null,"重写 onShutdown 方法去处理 shutdown 后的任务"),t("li",null,"提供 decorateTask 方法作为 ScheduledFutureTask 的修饰方法，以便开发者进行扩展")],-1),Do=t("p",null,[p("构造方法："),t("code",null,"Executors.newScheduledThreadPool(int corePoolSize)")],-1),ho=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ScheduledThreadPoolExecutor"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 最大线程数固定为 Integer.MAX_VALUE，保活时间 keepAliveTime 固定为 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"(corePoolSize, Integer.MAX_VALUE, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},", NANOSECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"          "),t("span",{style:{color:"#6A737D"}},"// 阻塞队列是 DelayedWorkQueue")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"          "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"DelayedWorkQueue"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ScheduledThreadPoolExecutor"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," corePoolSize) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 最大线程数固定为 Integer.MAX_VALUE，保活时间 keepAliveTime 固定为 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"(corePoolSize, Integer.MAX_VALUE, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},", NANOSECONDS,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"          "),t("span",{style:{color:"#6A737D"}},"// 阻塞队列是 DelayedWorkQueue")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"          "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"DelayedWorkQueue"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),Co=t("p",null,"常用 API：",-1),ko=t("ul",null,[t("li",null,[t("code",null,"ScheduledFuture<?> schedule(Runnable/Callable<V>, long delay, TimeUnit u)"),p("：延迟执行任务")]),t("li",null,[t("code",null,"ScheduledFuture<?> scheduleAtFixedRate(Runnable/Callable<V>, long initialDelay, long period, TimeUnit unit)"),p("：定时执行周期任务，不考虑执行的耗时，参数为初始延迟时间、间隔时间、单位")]),t("li",null,[t("code",null,"ScheduledFuture<?> scheduleWithFixedDelay(Runnable/Callable<V>, long initialDelay, long delay, TimeUnit unit)"),p("：定时执行周期任务，考虑执行的耗时，参数为初始延迟时间、间隔时间、单位")])],-1),go=t("p",null,"基本使用：",-1),fo=t("ul",null,[t("li",null,[t("p",null,"延迟任务，但是出现异常并不会在控制台打印，也不会影响其他线程的执行"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"main"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"[] args){")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 线程池大小为1时也是串行执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ScheduledExecutorService executor "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Executors."),t("span",{style:{color:"#B392F0"}},"newScheduledThreadPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 添加两个任务，都在 1s 后同时执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    executor."),t("span",{style:{color:"#B392F0"}},"schedule"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    \tSystem.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"任务1，执行时间："'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Date"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//int i = 1 / 0;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    \t"),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," { Thread."),t("span",{style:{color:"#B392F0"}},"sleep"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"2000"),t("span",{style:{color:"#E1E4E8"}},"); } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (InterruptedException "),t("span",{style:{color:"#FFAB70"}},"e"),t("span",{style:{color:"#E1E4E8"}},") { }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }, "),t("span",{style:{color:"#79B8FF"}},"1000"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.MILLISECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    executor."),t("span",{style:{color:"#B392F0"}},"schedule"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    \tSystem.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"任务2，执行时间："'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Date"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }, "),t("span",{style:{color:"#79B8FF"}},"1000"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.MILLISECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"main"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"[] args){")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 线程池大小为1时也是串行执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ScheduledExecutorService executor "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Executors."),t("span",{style:{color:"#6F42C1"}},"newScheduledThreadPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 添加两个任务，都在 1s 后同时执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    executor."),t("span",{style:{color:"#6F42C1"}},"schedule"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    \tSystem.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"任务1，执行时间："'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Date"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//int i = 1 / 0;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    \t"),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," { Thread."),t("span",{style:{color:"#6F42C1"}},"sleep"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"2000"),t("span",{style:{color:"#24292E"}},"); } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (InterruptedException "),t("span",{style:{color:"#E36209"}},"e"),t("span",{style:{color:"#24292E"}},") { }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }, "),t("span",{style:{color:"#005CC5"}},"1000"),t("span",{style:{color:"#24292E"}},", TimeUnit.MILLISECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    executor."),t("span",{style:{color:"#6F42C1"}},"schedule"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    \tSystem.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"任务2，执行时间："'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Date"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }, "),t("span",{style:{color:"#005CC5"}},"1000"),t("span",{style:{color:"#24292E"}},", TimeUnit.MILLISECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[p("定时任务 scheduleAtFixedRate："),t("strong",null,"一次任务的启动到下一次任务的启动"),p("之间只要大于等于间隔时间，抢占到 CPU 就会立即执行")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"main"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"[] args) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ScheduledExecutorService pool "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Executors."),t("span",{style:{color:"#B392F0"}},"newScheduledThreadPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"start..."'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Date"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    pool."),t("span",{style:{color:"#B392F0"}},"scheduleAtFixedRate"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"running..."'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Date"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Thread."),t("span",{style:{color:"#B392F0"}},"sleep"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"2000"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }, "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.SECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"/*start...Sat Apr 24 18:08:12 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:08:13 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:08:15 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:08:17 CST 2021")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"main"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"[] args) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ScheduledExecutorService pool "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Executors."),t("span",{style:{color:"#6F42C1"}},"newScheduledThreadPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"start..."'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Date"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    pool."),t("span",{style:{color:"#6F42C1"}},"scheduleAtFixedRate"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"running..."'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Date"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Thread."),t("span",{style:{color:"#6F42C1"}},"sleep"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"2000"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }, "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},", TimeUnit.SECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"/*start...Sat Apr 24 18:08:12 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:08:13 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:08:15 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:08:17 CST 2021")])])])])]),t("li",null,[t("p",null,[p("定时任务 scheduleWithFixedDelay："),t("strong",null,"一次任务的结束到下一次任务的启动之间"),p("等于间隔时间，抢占到 CPU 就会立即执行，这个方法才是真正的设置两个任务之间的间隔")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"main"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"[] args){")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ScheduledExecutorService pool "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Executors."),t("span",{style:{color:"#B392F0"}},"newScheduledThreadPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"3"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"start..."'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Date"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    pool."),t("span",{style:{color:"#B392F0"}},"scheduleWithFixedDelay"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"running..."'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Date"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Thread."),t("span",{style:{color:"#B392F0"}},"sleep"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"2000"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }, "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},", TimeUnit.SECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"/*start...Sat Apr 24 18:11:41 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:11:42 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:11:45 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:11:48 CST 2021")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"main"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"[] args){")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ScheduledExecutorService pool "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Executors."),t("span",{style:{color:"#6F42C1"}},"newScheduledThreadPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"3"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"start..."'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Date"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    pool."),t("span",{style:{color:"#6F42C1"}},"scheduleWithFixedDelay"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"running..."'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Date"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Thread."),t("span",{style:{color:"#6F42C1"}},"sleep"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"2000"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }, "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},", TimeUnit.SECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"/*start...Sat Apr 24 18:11:41 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:11:42 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:11:45 CST 2021")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"running...Sat Apr 24 18:11:48 CST 2021")])])])])])],-1),mo=t("hr",null,null,-1),vo={id:"成员属性-3",tabindex:"-1"},bo={id:"成员变量",tabindex:"-1"},Bo=t("ul",null,[t("li",null,[t("p",null,"shutdown 后是否继续执行周期任务："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," continueExistingPeriodicTasksAfterShutdown;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," continueExistingPeriodicTasksAfterShutdown;")])])])])]),t("li",null,[t("p",null,"shutdown 后是否继续执行延迟任务："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," executeExistingDelayedTasksAfterShutdown "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," executeExistingDelayedTasksAfterShutdown "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")])])])])]),t("li",null,[t("p",null,"取消方法是否将该任务从队列中移除："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 默认 false，不移除，等到线程拿到任务之后抛弃")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"volatile"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," removeOnCancel "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 默认 false，不移除，等到线程拿到任务之后抛弃")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"volatile"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," removeOnCancel "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")])])])])]),t("li",null,[t("p",null,"任务的序列号，可以用来比较优先级："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," AtomicLong sequencer "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AtomicLong"),t("span",{style:{color:"#E1E4E8"}},"();")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," AtomicLong sequencer "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AtomicLong"),t("span",{style:{color:"#24292E"}},"();")])])])])])],-1),To=t("hr",null,null,-1),So={id:"延迟任务",tabindex:"-1"},wo=t("p",null,[p("ScheduledFutureTask 继承 FutureTask，实现 RunnableScheduledFuture 接口，具有延迟执行的特点，覆盖 FutureTask 的 run 方法来实现对"),t("strong",null,"延时执行、周期执行"),p("的支持。对于延时任务调用 "),t("code",null,"FutureTask#run"),p("，而对于周期性任务则调用 "),t("code",null,"FutureTask#runAndReset"),p(" 并且在成功之后根据 "),t("code",null,"fixed-delay/fixed-rate"),p(" 模式来设置下次执行时间并重新将任务塞到工作队列")],-1),xo=t("p",null,"在调度线程池中无论是 runnable 还是 callable，无论是否需要延迟和定时，所有的任务都会被封装成 ScheduledFutureTask",-1),No=t("p",null,"成员变量：",-1),Io=t("ul",null,[t("li",null,[t("p",null,"任务序列号："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," sequenceNumber;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," sequenceNumber;")])])])])]),t("li",null,[t("p",null,"执行时间："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," time;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 任务可以被执行的时间，交付时间，以纳秒表示")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," period;\t"),t("span",{style:{color:"#6A737D"}},"// 0 表示非周期任务，正数表示 fixed-rate 模式的周期，负数表示 fixed-delay 模式")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," time;\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 任务可以被执行的时间，交付时间，以纳秒表示")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," period;\t"),t("span",{style:{color:"#6A737D"}},"// 0 表示非周期任务，正数表示 fixed-rate 模式的周期，负数表示 fixed-delay 模式")])])])]),t("p",null,[t("code",null,"fixed-rate"),p("：两次开始启动的间隔，"),t("code",null,"fixed-delay"),p("：一次执行结束到下一次开始启动")])]),t("li",null,[t("p",null,"实际的任务对象："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"V"),t("span",{style:{color:"#E1E4E8"}},"> outerTask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"V"),t("span",{style:{color:"#24292E"}},"> outerTask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},";")])])])])]),t("li",null,[t("p",null,"任务在队列数组中的索引下标："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// DelayedWorkQueue 底层使用的数据结构是最小堆，记录当前任务在堆中的索引，-1 代表删除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," heapIndex;")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// DelayedWorkQueue 底层使用的数据结构是最小堆，记录当前任务在堆中的索引，-1 代表删除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," heapIndex;")])])])])])],-1),Oo=t("p",null,"成员方法：",-1),Ro=t("ul",null,[t("li",null,[t("p",null,"构造方法："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#B392F0"}},"ScheduledFutureTask"),t("span",{style:{color:"#E1E4E8"}},"(Runnable r, V result, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," ns, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," period) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"(r, result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务的触发时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".time "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ns;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务的周期，多长时间执行一次")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".period "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," period;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务的序号")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".sequenceNumber "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," sequencer."),t("span",{style:{color:"#B392F0"}},"getAndIncrement"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6F42C1"}},"ScheduledFutureTask"),t("span",{style:{color:"#24292E"}},"(Runnable r, V result, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," ns, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," period) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"(r, result);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务的触发时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".time "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ns;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务的周期，多长时间执行一次")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".period "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," period;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务的序号")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".sequenceNumber "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," sequencer."),t("span",{style:{color:"#6F42C1"}},"getAndIncrement"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"compareTo()"),p("：ScheduledFutureTask 根据执行时间 time 正序排列，如果执行时间相同，在按照序列号 sequenceNumber 正序排列，任务需要放入 DelayedWorkQueue，延迟队列中使用该方法按照从小到大进行排序")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark has-diff vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"compareTo"),t("span",{style:{color:"#E1E4E8"}},"(Delayed other) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (other "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#6A737D"}},"// compare zero if same object")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (other "),t("span",{style:{color:"#F97583"}},"instanceof"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFutureTask) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 类型强转")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ScheduledFutureTask<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (ScheduledFutureTask"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}},")other;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 比较者 - 被比较者的执行时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," diff "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," time "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," x.time;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 比较者先执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (diff "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 被比较者先执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (diff "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 比较者的序列号小")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (sequenceNumber "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," x.sequenceNumber)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 不是 ScheduledFutureTask 类型时，根据延迟时间排序")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," diff "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"getDelay"),t("span",{style:{color:"#E1E4E8"}},"(NANOSECONDS) "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," other."),t("span",{style:{color:"#B392F0"}},"getDelay"),t("span",{style:{color:"#E1E4E8"}},"(NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," (diff "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," (diff "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light has-diff vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"compareTo"),t("span",{style:{color:"#24292E"}},"(Delayed other) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (other "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#6A737D"}},"// compare zero if same object")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (other "),t("span",{style:{color:"#D73A49"}},"instanceof"),t("span",{style:{color:"#24292E"}}," ScheduledFutureTask) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 类型强转")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ScheduledFutureTask<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (ScheduledFutureTask"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}},")other;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 比较者 - 被比较者的执行时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," diff "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," time "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," x.time;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 比较者先执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (diff "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 被比较者先执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (diff "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 比较者的序列号小")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (sequenceNumber "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," x.sequenceNumber)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 不是 ScheduledFutureTask 类型时，根据延迟时间排序")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," diff "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"getDelay"),t("span",{style:{color:"#24292E"}},"(NANOSECONDS) "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," other."),t("span",{style:{color:"#6F42C1"}},"getDelay"),t("span",{style:{color:"#24292E"}},"(NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," (diff "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," (diff "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"run()"),p("：执行任务，非周期任务直接完成直接结束，"),t("strong",null,"周期任务执行完后会设置下一次的执行时间，重新放入线程池的阻塞队列"),p("，如果线程池中的线程数量少于核心线程，就会添加 Worker 开启新线程")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 是否周期性，就是判断 period 是否为 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," periodic "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isPeriodic"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 根据是否是周期任务检查当前状态能否执行任务，不能执行就取消任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"canRunInCurrentRunState"),t("span",{style:{color:"#E1E4E8"}},"(periodic))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 非周期任务，直接调用 FutureTask#run 执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"periodic)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        ScheduledFutureTask.super."),t("span",{style:{color:"#B392F0"}},"run"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 周期任务的执行，返回 true 表示执行成功")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (ScheduledFutureTask.super."),t("span",{style:{color:"#B392F0"}},"runAndReset"),t("span",{style:{color:"#E1E4E8"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置周期任务的下一次执行时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"setNextRunTime"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 任务的下一次执行安排，如果当前线程池状态可以执行周期任务，加入队列，并开启新线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"reExecutePeriodic"),t("span",{style:{color:"#E1E4E8"}},"(outerTask);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 是否周期性，就是判断 period 是否为 0")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," periodic "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isPeriodic"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 根据是否是周期任务检查当前状态能否执行任务，不能执行就取消任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"canRunInCurrentRunState"),t("span",{style:{color:"#24292E"}},"(periodic))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 非周期任务，直接调用 FutureTask#run 执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"periodic)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        ScheduledFutureTask.super."),t("span",{style:{color:"#6F42C1"}},"run"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 周期任务的执行，返回 true 表示执行成功")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (ScheduledFutureTask.super."),t("span",{style:{color:"#6F42C1"}},"runAndReset"),t("span",{style:{color:"#24292E"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 设置周期任务的下一次执行时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"setNextRunTime"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 任务的下一次执行安排，如果当前线程池状态可以执行周期任务，加入队列，并开启新线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"reExecutePeriodic"),t("span",{style:{color:"#24292E"}},"(outerTask);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,[p("周期任务正常完成后"),t("strong",null,"任务的状态不会变化"),p("，依旧是 NEW，不会设置 outcome 属性。但是如果本次任务执行出现异常，会进入 setException 方法将任务状态置为异常，把异常保存在 outcome 中，方法返回 false，后续的该任务将不会再周期的执行")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"runAndReset"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务不是新建的状态了，或者被别的线程执行了，直接返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (state "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," NEW "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"UNSAFE."),t("span",{style:{color:"#B392F0"}},"compareAndSwapObject"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},", runnerOffset, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," ran "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        Callable<"),t("span",{style:{color:"#F97583"}},"V"),t("span",{style:{color:"#E1E4E8"}},"> c "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," callable;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (c "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," NEW) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 执行方法，没有返回值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                c."),t("span",{style:{color:"#B392F0"}},"call"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                ran "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (Throwable "),t("span",{style:{color:"#FFAB70"}},"ex"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 出现异常，把任务设置为异常状态，唤醒所有的 get 阻塞线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"setException"),t("span",{style:{color:"#E1E4E8"}},"(ex);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 执行完成把执行线程引用置为 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        runner "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果线程被中断进行中断处理")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"handlePossibleCancellationInterrupt"),t("span",{style:{color:"#E1E4E8"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果正常执行，返回 true，并且任务状态没有被取消")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," ran "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," NEW;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"runAndReset"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务不是新建的状态了，或者被别的线程执行了，直接返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (state "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," NEW "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"UNSAFE."),t("span",{style:{color:"#6F42C1"}},"compareAndSwapObject"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},", runnerOffset, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"()))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," ran "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        Callable<"),t("span",{style:{color:"#D73A49"}},"V"),t("span",{style:{color:"#24292E"}},"> c "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," callable;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (c "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," NEW) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 执行方法，没有返回值")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                c."),t("span",{style:{color:"#6F42C1"}},"call"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                ran "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (Throwable "),t("span",{style:{color:"#E36209"}},"ex"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 出现异常，把任务设置为异常状态，唤醒所有的 get 阻塞线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"setException"),t("span",{style:{color:"#24292E"}},"(ex);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 执行完成把执行线程引用置为 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        runner "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," state;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果线程被中断进行中断处理")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," INTERRUPTING)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"handlePossibleCancellationInterrupt"),t("span",{style:{color:"#24292E"}},"(s);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果正常执行，返回 true，并且任务状态没有被取消")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," ran "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," NEW;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 任务下一次的触发时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"setNextRunTime"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," p "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," period;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (p "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// fixed-rate 模式，【时间设置为上一次执行任务的时间 + p】，两次任务执行的时间差")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        time "),t("span",{style:{color:"#F97583"}},"+="),t("span",{style:{color:"#E1E4E8"}}," p;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// fixed-delay 模式，下一次执行时间是【当前这次任务结束的时间（就是现在） + delay 值】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        time "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}},"p);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 任务下一次的触发时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"setNextRunTime"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," p "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," period;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (p "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// fixed-rate 模式，【时间设置为上一次执行任务的时间 + p】，两次任务执行的时间差")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        time "),t("span",{style:{color:"#D73A49"}},"+="),t("span",{style:{color:"#24292E"}}," p;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// fixed-delay 模式，下一次执行时间是【当前这次任务结束的时间（就是现在） + delay 值】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        time "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}},"p);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"reExecutePeriodic()"),t("strong",null,"：准备任务的下一次执行，重新放入阻塞任务队列")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// ScheduledThreadPoolExecutor#reExecutePeriodic")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"reExecutePeriodic"),t("span",{style:{color:"#E1E4E8"}},"(RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"canRunInCurrentRunState"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【放入任务队列】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"getQueue"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"add"),t("span",{style:{color:"#E1E4E8"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果提交完任务之后，线程池状态变为了 shutdown 状态，需要再次检查是否可以执行，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果不能执行且任务还在队列中未被取走，则取消任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"canRunInCurrentRunState"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(task))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            task."),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前线程池状态可以执行周期任务，加入队列，并【根据线程数量是否大于核心线程数确定是否开启新线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"ensurePrestart"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// ScheduledThreadPoolExecutor#reExecutePeriodic")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"reExecutePeriodic"),t("span",{style:{color:"#24292E"}},"(RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"canRunInCurrentRunState"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【放入任务队列】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"getQueue"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"add"),t("span",{style:{color:"#24292E"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果提交完任务之后，线程池状态变为了 shutdown 状态，需要再次检查是否可以执行，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果不能执行且任务还在队列中未被取走，则取消任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"canRunInCurrentRunState"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(task))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            task."),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 当前线程池状态可以执行周期任务，加入队列，并【根据线程数量是否大于核心线程数确定是否开启新线程】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"ensurePrestart"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"cancel()"),p("：取消任务")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," mayInterruptIfRunning) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 调用父类 FutureTask#cancel 来取消任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," cancelled "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"(mayInterruptIfRunning);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// removeOnCancel 用于控制任务取消后是否应该从阻塞队列中移除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (cancelled "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," removeOnCancel "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," heapIndex "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从等待队列中删除该任务，并调用 tryTerminate() 判断是否需要停止线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," cancelled;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," mayInterruptIfRunning) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 调用父类 FutureTask#cancel 来取消任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," cancelled "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"(mayInterruptIfRunning);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// removeOnCancel 用于控制任务取消后是否应该从阻塞队列中移除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (cancelled "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," removeOnCancel "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," heapIndex "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从等待队列中删除该任务，并调用 tryTerminate() 判断是否需要停止线程池")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," cancelled;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Lo=t("hr",null,null,-1),jo={id:"延迟队列",tabindex:"-1"},Po=t("p",null,"DelayedWorkQueue 是支持延时获取元素的阻塞队列，内部采用优先队列 PriorityQueue（小根堆、满二叉树）存储元素",-1),Uo=t("p",null,[p("其他阻塞队列存储节点的数据结构大都是链表，"),t("strong",null,"延迟队列是数组"),p("，所以延迟队列出队头元素后需要"),t("strong",null,"让其他元素（尾）替换到头节点"),p("，防止空指针异常")],-1),Wo=t("p",null,"成员变量：",-1),Qo=t("ul",null,[t("li",null,[t("p",null,"容量："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," INITIAL_CAPACITY "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"16"),t("span",{style:{color:"#E1E4E8"}},";\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 初始容量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," size "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},";\t\t\t\t\t\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 节点数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},">[] queue "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},">[INITIAL_CAPACITY];\t"),t("span",{style:{color:"#6A737D"}},"// 存放节点")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," INITIAL_CAPACITY "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"16"),t("span",{style:{color:"#24292E"}},";\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 初始容量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," size "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},";\t\t\t\t\t\t\t\t\t"),t("span",{style:{color:"#6A737D"}},"// 节点数量")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},">[] queue "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},">[INITIAL_CAPACITY];\t"),t("span",{style:{color:"#6A737D"}},"// 存放节点")])])])])]),t("li",null,[t("p",null,"锁："),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ReentrantLock"),t("span",{style:{color:"#E1E4E8"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 控制并发")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," Condition available "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," lock."),t("span",{style:{color:"#B392F0"}},"newCondition"),t("span",{style:{color:"#E1E4E8"}},"();"),t("span",{style:{color:"#6A737D"}},"// 条件队列")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock lock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ReentrantLock"),t("span",{style:{color:"#24292E"}},"();\t"),t("span",{style:{color:"#6A737D"}},"// 控制并发")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," Condition available "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," lock."),t("span",{style:{color:"#6F42C1"}},"newCondition"),t("span",{style:{color:"#24292E"}},"();"),t("span",{style:{color:"#6A737D"}},"// 条件队列")])])])])]),t("li",null,[t("p",null,[p("阻塞等待头节点的线程：线程池内的某个线程去 take() 获取任务时，如果延迟队列顶层节点不为 null（队列内有任务），但是节点任务还不到触发时间，线程就去检查"),t("strong",null,"队列的 leader字段"),p("是否被占用")]),t("ul",null,[t("li",null,[p("如果未被占用，则当前线程占用该字段，然后当前线程到 available 条件队列指定超时时间 "),t("code",null,"堆顶任务.time - now()"),p(" 挂起")]),t("li",null,"如果被占用，当前线程直接到 available 条件队列不指定超时时间的挂起")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// leader 在 available 条件队列内是首元素，它超时之后会醒过来，然后再次将堆顶元素获取走，获取走之后，take()结束之前，会调用是 available.signal() 唤醒下一个条件队列内的等待者，然后释放 lock，下一个等待者被唤醒后去到 AQS 队列，做 acquireQueue(node) 逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," Thread leader "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// leader 在 available 条件队列内是首元素，它超时之后会醒过来，然后再次将堆顶元素获取走，获取走之后，take()结束之前，会调用是 available.signal() 唤醒下一个条件队列内的等待者，然后释放 lock，下一个等待者被唤醒后去到 AQS 队列，做 acquireQueue(node) 逻辑")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," Thread leader "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")])])])])])],-1),qo=t("p",null,"成员方法",-1),zo=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"offer()"),p("：插入节点")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"offer"),t("span",{style:{color:"#E1E4E8"}},"(Runnable x) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (x "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> e "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}},")x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 队列锁，增加删除数据时都要加锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    lock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," size;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 队列数量大于存放节点的数组长度，需要扩容")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (i "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," queue.length)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 扩容为原来长度的 1.5 倍")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"grow"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        size "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前是第一个要插入的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (i "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            queue["),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"] "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 修改 ScheduledFutureTask 的 heapIndex 属性，表示该对象在队列里的下标")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"setIndex"),t("span",{style:{color:"#E1E4E8"}},"(e, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        } "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 向上调整元素的位置，并更新 heapIndex ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"siftUp"),t("span",{style:{color:"#E1E4E8"}},"(i, e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 情况1：当前任务是第一个加入到 queue 内的任务，所以在当前任务加入到 queue 之前，take() 线程会直接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//\t\t到 available 队列不设置超时的挂起，并不会去占用 leader 字段，这时需会唤醒一个线程 让它去消费")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"       \t"),t("span",{style:{color:"#6A737D"}},"// 情况2：当前任务【优先级最高】，原堆顶任务可能还未到触发时间，leader 线程设置超时的在 available 挂起")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//\t\t原先的 leader 等待的是原先的头节点，所以 leader 已经无效，需要将 leader 线程唤醒，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"//\t\t唤醒之后它会检查堆顶，如果堆顶任务可以被消费，则直接获取走，否则继续成为 leader 等待新堆顶任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (queue["),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"] "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," e) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 将 leader 设置为 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            leader "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 直接随便唤醒等待头结点的阻塞线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            available."),t("span",{style:{color:"#B392F0"}},"signal"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        lock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"offer"),t("span",{style:{color:"#24292E"}},"(Runnable x) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (x "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> e "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}},")x;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 队列锁，增加删除数据时都要加锁")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock lock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    lock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," size;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 队列数量大于存放节点的数组长度，需要扩容")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (i "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," queue.length)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 扩容为原来长度的 1.5 倍")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"grow"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        size "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 当前是第一个要插入的节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (i "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            queue["),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"] "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 修改 ScheduledFutureTask 的 heapIndex 属性，表示该对象在队列里的下标")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"setIndex"),t("span",{style:{color:"#24292E"}},"(e, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        } "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 向上调整元素的位置，并更新 heapIndex ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"siftUp"),t("span",{style:{color:"#24292E"}},"(i, e);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 情况1：当前任务是第一个加入到 queue 内的任务，所以在当前任务加入到 queue 之前，take() 线程会直接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//\t\t到 available 队列不设置超时的挂起，并不会去占用 leader 字段，这时需会唤醒一个线程 让它去消费")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"       \t"),t("span",{style:{color:"#6A737D"}},"// 情况2：当前任务【优先级最高】，原堆顶任务可能还未到触发时间，leader 线程设置超时的在 available 挂起")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//\t\t原先的 leader 等待的是原先的头节点，所以 leader 已经无效，需要将 leader 线程唤醒，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"//\t\t唤醒之后它会检查堆顶，如果堆顶任务可以被消费，则直接获取走，否则继续成为 leader 等待新堆顶任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (queue["),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"] "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," e) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 将 leader 设置为 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            leader "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 直接随便唤醒等待头结点的阻塞线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            available."),t("span",{style:{color:"#6F42C1"}},"signal"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        lock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 插入新节点后对堆进行调整，进行节点上移，保持其特性【节点的值小于子节点的值】，小顶堆")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"siftUp"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," k, RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," key) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," (k "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 父节点，就是堆排序")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," parent "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (k "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},">>>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> e "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," queue[parent];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// key 和父节点比，如果大于父节点可以直接返回，否则就继续上浮")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (key."),t("span",{style:{color:"#B392F0"}},"compareTo"),t("span",{style:{color:"#E1E4E8"}},"(e) "),t("span",{style:{color:"#F97583"}},">="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        queue[k] "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"setIndex"),t("span",{style:{color:"#E1E4E8"}},"(e, k);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        k "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," parent;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    queue[k] "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," key;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"setIndex"),t("span",{style:{color:"#E1E4E8"}},"(key, k);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 插入新节点后对堆进行调整，进行节点上移，保持其特性【节点的值小于子节点的值】，小顶堆")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"siftUp"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," k, RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," key) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," (k "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 父节点，就是堆排序")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," parent "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (k "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},">>>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> e "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," queue[parent];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// key 和父节点比，如果大于父节点可以直接返回，否则就继续上浮")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (key."),t("span",{style:{color:"#6F42C1"}},"compareTo"),t("span",{style:{color:"#24292E"}},"(e) "),t("span",{style:{color:"#D73A49"}},">="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        queue[k] "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"setIndex"),t("span",{style:{color:"#24292E"}},"(e, k);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        k "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," parent;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    queue[k] "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," key;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"setIndex"),t("span",{style:{color:"#24292E"}},"(key, k);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"poll()"),p("：非阻塞获取头结点，"),t("strong",null,"获取执行时间最近并且可以执行的")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 非阻塞获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"poll"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    lock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取队头节点，因为是小顶堆")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> first "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," queue["),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 头结点为空或者的延迟时间没到返回 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (first "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," first."),t("span",{style:{color:"#B392F0"}},"getDelay"),t("span",{style:{color:"#E1E4E8"}},"(NANOSECONDS) "),t("span",{style:{color:"#F97583"}},">"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 头结点达到延迟时间，【尾节点成为替代节点下移调整堆结构】，返回头结点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"finishPoll"),t("span",{style:{color:"#E1E4E8"}},"(first);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        lock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 非阻塞获取")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"poll"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock lock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    lock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 获取队头节点，因为是小顶堆")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> first "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," queue["),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 头结点为空或者的延迟时间没到返回 null")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (first "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," first."),t("span",{style:{color:"#6F42C1"}},"getDelay"),t("span",{style:{color:"#24292E"}},"(NANOSECONDS) "),t("span",{style:{color:"#D73A49"}},">"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 头结点达到延迟时间，【尾节点成为替代节点下移调整堆结构】，返回头结点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"finishPoll"),t("span",{style:{color:"#24292E"}},"(first);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        lock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"finishPoll"),t("span",{style:{color:"#E1E4E8"}},"(RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," f) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取尾索引")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"--"),t("span",{style:{color:"#E1E4E8"}},"size;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取尾节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> x "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," queue[s];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 将堆结构最后一个节点占用的 slot 设置为 null，因为该节点要尝试升级成堆顶，会根据特性下调")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    queue[s] "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// s == 0 说明 当前堆结构只有堆顶一个节点，此时不需要做任何的事情")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从索引处 0 开始向下调整")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"siftDown"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},", x);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 出队的元素索引设置为 -1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"setIndex"),t("span",{style:{color:"#E1E4E8"}},"(f, "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," f;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"finishPoll"),t("span",{style:{color:"#24292E"}},"(RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," f) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取尾索引")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"--"),t("span",{style:{color:"#24292E"}},"size;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 获取尾节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> x "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," queue[s];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 将堆结构最后一个节点占用的 slot 设置为 null，因为该节点要尝试升级成堆顶，会根据特性下调")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    queue[s] "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// s == 0 说明 当前堆结构只有堆顶一个节点，此时不需要做任何的事情")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 从索引处 0 开始向下调整")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"siftDown"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},", x);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 出队的元素索引设置为 -1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"setIndex"),t("span",{style:{color:"#24292E"}},"(f, "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," f;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"take()"),p("：阻塞获取头节点，读取当前堆中最小的也就是触发时间最近的任务")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"take"),t("span",{style:{color:"#E1E4E8"}},"() throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 保证线程安全")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    lock."),t("span",{style:{color:"#B392F0"}},"lockInterruptibly"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> first "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," queue["),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (first "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 等待队列不空，直至有任务通过 offer 入队并唤醒")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                available."),t("span",{style:{color:"#B392F0"}},"await"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取头节点的延迟时间是否到时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," delay "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," first."),t("span",{style:{color:"#B392F0"}},"getDelay"),t("span",{style:{color:"#E1E4E8"}},"(NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (delay "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 到达触发时间，获取头节点并调整堆，重新选择延迟时间最小的节点放入头部")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"finishPoll"),t("span",{style:{color:"#E1E4E8"}},"(first);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 逻辑到这说明头节点的延迟时间还没到")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                first "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 说明有 leader 线程在等待获取头节点，当前线程直接去阻塞等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (leader "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    available."),t("span",{style:{color:"#B392F0"}},"await"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 没有 leader 线程，【当前线程作为leader线程，并设置头结点的延迟时间作为阻塞时间】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    Thread thisThread "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    leader "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," thisThread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 在条件队列 available 使用带超时的挂起（堆顶任务.time - now() 纳秒值..）")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        available."),t("span",{style:{color:"#B392F0"}},"awaitNanos"),t("span",{style:{color:"#E1E4E8"}},"(delay);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 到达阻塞时间时，当前线程会从这里醒来来")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// t堆顶更新，leader 置为 null，offer 方法释放锁后，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 有其它线程通过 take/poll 拿到锁,读到 leader == null，然后将自身更新为leader。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (leader "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," thisThread)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                            "),t("span",{style:{color:"#6A737D"}},"// leader 置为 null 用以接下来判断是否需要唤醒后继线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                            leader "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有 leader 线程，头结点不为 null，唤醒阻塞获取头节点的线程，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【如果没有这一步，就会出现有了需要执行的任务，但是没有线程去执行】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (leader "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," queue["),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"] "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            available."),t("span",{style:{color:"#B392F0"}},"signal"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        lock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"take"),t("span",{style:{color:"#24292E"}},"() throws InterruptedException {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock lock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 保证线程安全")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    lock."),t("span",{style:{color:"#6F42C1"}},"lockInterruptibly"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (;;) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 头节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> first "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," queue["),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (first "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 等待队列不空，直至有任务通过 offer 入队并唤醒")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                available."),t("span",{style:{color:"#6F42C1"}},"await"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 获取头节点的延迟时间是否到时")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," delay "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," first."),t("span",{style:{color:"#6F42C1"}},"getDelay"),t("span",{style:{color:"#24292E"}},"(NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (delay "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 到达触发时间，获取头节点并调整堆，重新选择延迟时间最小的节点放入头部")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"finishPoll"),t("span",{style:{color:"#24292E"}},"(first);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 逻辑到这说明头节点的延迟时间还没到")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                first "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 说明有 leader 线程在等待获取头节点，当前线程直接去阻塞等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (leader "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    available."),t("span",{style:{color:"#6F42C1"}},"await"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#6A737D"}},"// 没有 leader 线程，【当前线程作为leader线程，并设置头结点的延迟时间作为阻塞时间】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    Thread thisThread "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    leader "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," thisThread;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 在条件队列 available 使用带超时的挂起（堆顶任务.time - now() 纳秒值..）")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        available."),t("span",{style:{color:"#6F42C1"}},"awaitNanos"),t("span",{style:{color:"#24292E"}},"(delay);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 到达阻塞时间时，当前线程会从这里醒来来")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// t堆顶更新，leader 置为 null，offer 方法释放锁后，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#6A737D"}},"// 有其它线程通过 take/poll 拿到锁,读到 leader == null，然后将自身更新为leader。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (leader "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," thisThread)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                            "),t("span",{style:{color:"#6A737D"}},"// leader 置为 null 用以接下来判断是否需要唤醒后继线程")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                            leader "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 没有 leader 线程，头结点不为 null，唤醒阻塞获取头节点的线程，")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 【如果没有这一步，就会出现有了需要执行的任务，但是没有线程去执行】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (leader "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," queue["),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"] "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            available."),t("span",{style:{color:"#6F42C1"}},"signal"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        lock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"remove()"),p("：删除节点，堆移除一个元素的时间复杂度是 "),t("code",null,"O(log n)"),p("，"),t("strong",null,"延迟任务维护了 heapIndex"),p("，直接访问的时间复杂度是 "),t("code",null,"O(1)"),p("，从而可以更快的移除元素，任务在队列中被取消后会进入该逻辑")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(Object x) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," ReentrantLock lock "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    lock."),t("span",{style:{color:"#B392F0"}},"lock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 查找对象在队列数组中的下标")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"indexOf"),t("span",{style:{color:"#E1E4E8"}},"(x);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 节点不存在，返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (i "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 修改元素的 heapIndex，-1 代表删除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"setIndex"),t("span",{style:{color:"#E1E4E8"}},"(queue[i], "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 尾索引是长度-1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," s "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"--"),t("span",{style:{color:"#E1E4E8"}},"size;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 尾节点作为替代节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> replacement "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," queue[s];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        queue[s] "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// s == i 说明头节点就是尾节点，队列空了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (s "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," i) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 向下调整")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"siftDown"),t("span",{style:{color:"#E1E4E8"}},"(i, replacement);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 说明没发生调整")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (queue[i] "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," replacement)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 上移和下移不可能同时发生，替代节点大于子节点时下移，否则上移")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#B392F0"}},"siftUp"),t("span",{style:{color:"#E1E4E8"}},"(i, replacement);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    } "),t("span",{style:{color:"#F97583"}},"finally"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        lock."),t("span",{style:{color:"#B392F0"}},"unlock"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(Object x) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," ReentrantLock lock "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".lock;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    lock."),t("span",{style:{color:"#6F42C1"}},"lock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 查找对象在队列数组中的下标")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"indexOf"),t("span",{style:{color:"#24292E"}},"(x);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 节点不存在，返回 false")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (i "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 修改元素的 heapIndex，-1 代表删除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"setIndex"),t("span",{style:{color:"#24292E"}},"(queue[i], "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 尾索引是长度-1")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," s "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"--"),t("span",{style:{color:"#24292E"}},"size;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 尾节点作为替代节点")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> replacement "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," queue[s];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        queue[s] "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// s == i 说明头节点就是尾节点，队列空了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (s "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," i) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 向下调整")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"siftDown"),t("span",{style:{color:"#24292E"}},"(i, replacement);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 说明没发生调整")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (queue[i] "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," replacement)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 上移和下移不可能同时发生，替代节点大于子节点时下移，否则上移")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6F42C1"}},"siftUp"),t("span",{style:{color:"#24292E"}},"(i, replacement);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    } "),t("span",{style:{color:"#D73A49"}},"finally"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        lock."),t("span",{style:{color:"#6F42C1"}},"unlock"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),_o=t("hr",null,null,-1),Mo={id:"成员方法-2",tabindex:"-1"},Ho={id:"提交任务",tabindex:"-1"},Go=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"schedule()"),p("：延迟执行方法，并指定执行的时间，默认是当前时间")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"execute"),t("span",{style:{color:"#E1E4E8"}},"(Runnable command) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 以零延时任务的形式实现")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"schedule"),t("span",{style:{color:"#E1E4E8"}},"(command, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},", NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"execute"),t("span",{style:{color:"#24292E"}},"(Runnable command) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 以零延时任务的形式实现")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"schedule"),t("span",{style:{color:"#24292E"}},"(command, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},", NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"schedule"),t("span",{style:{color:"#E1E4E8"}},"(Runnable command, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," delay, TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (command "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," unit "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 没有做任何操作，直接将 task 返回，该方法主要目的是用于子类扩展，并且【根据延迟时间设置任务触发的时间点】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"decorateTask"),t("span",{style:{color:"#E1E4E8"}},"(command, "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFutureTask<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},">(")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        \t\t\t\t\t\t\t\t\t\t\tcommand, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"(delay, unit)));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 延迟执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"delayedExecute"),t("span",{style:{color:"#E1E4E8"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," ScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"schedule"),t("span",{style:{color:"#24292E"}},"(Runnable command, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," delay, TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 判空")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (command "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," unit "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 没有做任何操作，直接将 task 返回，该方法主要目的是用于子类扩展，并且【根据延迟时间设置任务触发的时间点】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"decorateTask"),t("span",{style:{color:"#24292E"}},"(command, "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," ScheduledFutureTask<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},">(")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        \t\t\t\t\t\t\t\t\t\t\tcommand, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"(delay, unit)));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 延迟执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"delayedExecute"),t("span",{style:{color:"#24292E"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 返回【当前时间 + 延迟时间】，就是触发当前任务执行的时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," delay, TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 设置触发的时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"(unit."),t("span",{style:{color:"#B392F0"}},"toNanos"),t("span",{style:{color:"#E1E4E8"}},"((delay "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," delay));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," delay) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果 delay < Long.Max_VALUE/2，则下次执行时间为当前时间 +delay")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 否则为了避免队列中出现由于溢出导致的排序紊乱,需要调用overflowFree来修正一下delay")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"now"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," ((delay "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," (Long.MAX_VALUE "),t("span",{style:{color:"#F97583"}},">>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},")) "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," delay "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"overflowFree"),t("span",{style:{color:"#E1E4E8"}},"(delay));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 返回【当前时间 + 延迟时间】，就是触发当前任务执行的时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," delay, TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 设置触发的时间")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"(unit."),t("span",{style:{color:"#6F42C1"}},"toNanos"),t("span",{style:{color:"#24292E"}},"((delay "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," delay));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," delay) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果 delay < Long.Max_VALUE/2，则下次执行时间为当前时间 +delay")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 否则为了避免队列中出现由于溢出导致的排序紊乱,需要调用overflowFree来修正一下delay")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"now"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," ((delay "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," (Long.MAX_VALUE "),t("span",{style:{color:"#D73A49"}},">>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},")) "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," delay "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"overflowFree"),t("span",{style:{color:"#24292E"}},"(delay));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])]),t("p",null,"overflowFree 的原因：如果某个任务的 delay 为负数，说明当前可以执行（其实早该执行了）。阻塞队列中维护任务顺序是基于 compareTo 比较的，比较两个任务的顺序会用 time 相减。那么可能出现一个 delay 为正数减去另一个为负数的 delay，结果上溢为负数，则会导致 compareTo 产生错误的结果"),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"overflowFree"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," delay) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Delayed head "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (Delayed) "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"getQueue"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"peek"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (head "),t("span",{style:{color:"#F97583"}},"!="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," headDelay "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," head."),t("span",{style:{color:"#B392F0"}},"getDelay"),t("span",{style:{color:"#E1E4E8"}},"(NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断一下队首的delay是不是负数，如果是正数就不用管，怎么减都不会溢出")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 否则拿当前 delay 减去队首的 delay 来比较看，如果不出现上溢，排序不会乱")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 不然就把当前 delay 值给调整为 Long.MAX_VALUE + 队首 delay")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (headDelay "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," (delay "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," headDelay "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            delay "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," Long.MAX_VALUE "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," headDelay;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," delay;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"overflowFree"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," delay) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Delayed head "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (Delayed) "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"getQueue"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"peek"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (head "),t("span",{style:{color:"#D73A49"}},"!="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," headDelay "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," head."),t("span",{style:{color:"#6F42C1"}},"getDelay"),t("span",{style:{color:"#24292E"}},"(NANOSECONDS);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 判断一下队首的delay是不是负数，如果是正数就不用管，怎么减都不会溢出")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 否则拿当前 delay 减去队首的 delay 来比较看，如果不出现上溢，排序不会乱")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"\t\t"),t("span",{style:{color:"#6A737D"}},"// 不然就把当前 delay 值给调整为 Long.MAX_VALUE + 队首 delay")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (headDelay "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," (delay "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," headDelay "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            delay "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," Long.MAX_VALUE "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," headDelay;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," delay;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"scheduleAtFixedRate()"),p("：定时执行，一次任务的启动到下一次任务的启动的间隔")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"scheduleAtFixedRate"),t("span",{style:{color:"#E1E4E8"}},"(Runnable command, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," initialDelay, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," period,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                              TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (command "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," unit "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (period "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"IllegalArgumentException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务封装，【指定初始的延迟时间和周期时间】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ScheduledFutureTask<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},"> sft "),t("span",{style:{color:"#F97583"}},"=new"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFutureTask<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},">(command, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},",")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                      "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"(initialDelay, unit), unit."),t("span",{style:{color:"#B392F0"}},"toNanos"),t("span",{style:{color:"#E1E4E8"}},"(period));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 默认返回本身")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},"> t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"decorateTask"),t("span",{style:{color:"#E1E4E8"}},"(command, sft);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    sft.outerTask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 开始执行这个任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"delayedExecute"),t("span",{style:{color:"#E1E4E8"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," ScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"scheduleAtFixedRate"),t("span",{style:{color:"#24292E"}},"(Runnable command, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," initialDelay, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," period,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                              TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (command "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," unit "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (period "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"IllegalArgumentException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务封装，【指定初始的延迟时间和周期时间】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ScheduledFutureTask<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},"> sft "),t("span",{style:{color:"#D73A49"}},"=new"),t("span",{style:{color:"#24292E"}}," ScheduledFutureTask<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},">(command, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},",")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                      "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"(initialDelay, unit), unit."),t("span",{style:{color:"#6F42C1"}},"toNanos"),t("span",{style:{color:"#24292E"}},"(period));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 默认返回本身")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},"> t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"decorateTask"),t("span",{style:{color:"#24292E"}},"(command, sft);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    sft.outerTask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 开始执行这个任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"delayedExecute"),t("span",{style:{color:"#24292E"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"scheduleWithFixedDelay()"),p("：定时执行，一次任务的结束到下一次任务的启动的间隔")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"scheduleWithFixedDelay"),t("span",{style:{color:"#E1E4E8"}},"(Runnable command, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," initialDelay, "),t("span",{style:{color:"#F97583"}},"long"),t("span",{style:{color:"#E1E4E8"}}," delay,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                                 TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (command "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"||"),t("span",{style:{color:"#E1E4E8"}}," unit "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},") ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"NullPointerException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (delay "),t("span",{style:{color:"#F97583"}},"<="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"throw"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"IllegalArgumentException"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务封装，【指定初始的延迟时间和周期时间】，周期时间为 - 表示是 fixed-delay 模式")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ScheduledFutureTask<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},"> sft "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," ScheduledFutureTask<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},">(command, "),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},",")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                                      "),t("span",{style:{color:"#B392F0"}},"triggerTime"),t("span",{style:{color:"#E1E4E8"}},"(initialDelay, unit), unit."),t("span",{style:{color:"#B392F0"}},"toNanos"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}},"delay));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"Void"),t("span",{style:{color:"#E1E4E8"}},"> t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"decorateTask"),t("span",{style:{color:"#E1E4E8"}},"(command, sft);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    sft.outerTask "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"delayedExecute"),t("span",{style:{color:"#E1E4E8"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," ScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"scheduleWithFixedDelay"),t("span",{style:{color:"#24292E"}},"(Runnable command, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," initialDelay, "),t("span",{style:{color:"#D73A49"}},"long"),t("span",{style:{color:"#24292E"}}," delay,")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                                 TimeUnit unit) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (command "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"||"),t("span",{style:{color:"#24292E"}}," unit "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},") ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"NullPointerException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (delay "),t("span",{style:{color:"#D73A49"}},"<="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"throw"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"IllegalArgumentException"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 任务封装，【指定初始的延迟时间和周期时间】，周期时间为 - 表示是 fixed-delay 模式")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ScheduledFutureTask<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},"> sft "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," ScheduledFutureTask<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},">(command, "),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},",")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                                      "),t("span",{style:{color:"#6F42C1"}},"triggerTime"),t("span",{style:{color:"#24292E"}},"(initialDelay, unit), unit."),t("span",{style:{color:"#6F42C1"}},"toNanos"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}},"delay));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"Void"),t("span",{style:{color:"#24292E"}},"> t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"decorateTask"),t("span",{style:{color:"#24292E"}},"(command, sft);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    sft.outerTask "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"delayedExecute"),t("span",{style:{color:"#24292E"}},"(t);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," t;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Vo=t("hr",null,null,-1),Yo={id:"运行任务",tabindex:"-1"},Xo=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"delayedExecute()"),p("："),t("strong",null,"校验线程池状态"),p("，延迟或周期性任务的主要执行方法")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"delayedExecute"),t("span",{style:{color:"#E1E4E8"}},"(RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}}," task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 线程池是 SHUTDOWN 状态，需要执行拒绝策略")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"isShutdown"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"reject"),t("span",{style:{color:"#E1E4E8"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 把当前任务放入阻塞队列，因为需要【获取执行时间最近的】，当前任务需要比较")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"getQueue"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"add"),t("span",{style:{color:"#E1E4E8"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 线程池状态为 SHUTDOWN 并且不允许执行任务了，就从队列删除该任务，并设置任务的状态为取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#B392F0"}},"isShutdown"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#B392F0"}},"canRunInCurrentRunState"),t("span",{style:{color:"#E1E4E8"}},"(task."),t("span",{style:{color:"#B392F0"}},"isPeriodic"),t("span",{style:{color:"#E1E4E8"}},"()) "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(task))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            task."),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"// 可以执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#B392F0"}},"ensurePrestart"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"delayedExecute"),t("span",{style:{color:"#24292E"}},"(RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}}," task) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 线程池是 SHUTDOWN 状态，需要执行拒绝策略")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"isShutdown"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"reject"),t("span",{style:{color:"#24292E"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 把当前任务放入阻塞队列，因为需要【获取执行时间最近的】，当前任务需要比较")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"getQueue"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"add"),t("span",{style:{color:"#24292E"}},"(task);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 线程池状态为 SHUTDOWN 并且不允许执行任务了，就从队列删除该任务，并设置任务的状态为取消状态")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#6F42C1"}},"isShutdown"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#6F42C1"}},"canRunInCurrentRunState"),t("span",{style:{color:"#24292E"}},"(task."),t("span",{style:{color:"#6F42C1"}},"isPeriodic"),t("span",{style:{color:"#24292E"}},"()) "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(task))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            task."),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"else")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"// 可以执行")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6F42C1"}},"ensurePrestart"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"ensurePrestart()"),p("："),t("strong",null,"开启线程执行任务")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// ThreadPoolExecutor#ensurePrestart")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ensurePrestart"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," wc "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"workerCountOf"),t("span",{style:{color:"#E1E4E8"}},"(ctl."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// worker数目小于corePoolSize，则添加一个worker。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (wc "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," corePoolSize)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 第二个参数 true 表示采用核心线程数量限制，false 表示采用 maximumPoolSize")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// corePoolSize = 0的情况，至少开启一个线程，【担保机制】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (wc "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#B392F0"}},"addWorker"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"null"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// ThreadPoolExecutor#ensurePrestart")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ensurePrestart"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," wc "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"workerCountOf"),t("span",{style:{color:"#24292E"}},"(ctl."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"());")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// worker数目小于corePoolSize，则添加一个worker。")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (wc "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," corePoolSize)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 第二个参数 true 表示采用核心线程数量限制，false 表示采用 maximumPoolSize")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// corePoolSize = 0的情况，至少开启一个线程，【担保机制】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (wc "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6F42C1"}},"addWorker"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"null"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"canRunInCurrentRunState()"),p("：任务运行时都会被调用以校验当前状态是否可以运行任务")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"canRunInCurrentRunState"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," periodic) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 根据是否是周期任务判断，在线程池 shutdown 后是否继续执行该任务，默认非周期任务是继续执行的")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"isRunningOrShutdown"),t("span",{style:{color:"#E1E4E8"}},"(periodic "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," continueExistingPeriodicTasksAfterShutdown "),t("span",{style:{color:"#F97583"}},":")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                               executeExistingDelayedTasksAfterShutdown);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"canRunInCurrentRunState"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," periodic) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 根据是否是周期任务判断，在线程池 shutdown 后是否继续执行该任务，默认非周期任务是继续执行的")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"isRunningOrShutdown"),t("span",{style:{color:"#24292E"}},"(periodic "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," continueExistingPeriodicTasksAfterShutdown "),t("span",{style:{color:"#D73A49"}},":")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                               executeExistingDelayedTasksAfterShutdown);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])]),t("li",null,[t("p",null,[t("code",null,"onShutdown()"),p("：删除并取消工作队列中的不需要再执行的任务")]),t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"onShutdown"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    BlockingQueue<"),t("span",{style:{color:"#F97583"}},"Runnable"),t("span",{style:{color:"#E1E4E8"}},"> q "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"super"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"getQueue"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// shutdown 后是否仍然执行延时任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," keepDelayed "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"getExecuteExistingDelayedTasksAfterShutdownPolicy"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// shutdown 后是否仍然执行周期任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"boolean"),t("span",{style:{color:"#E1E4E8"}}," keepPeriodic "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"getContinueExistingPeriodicTasksAfterShutdownPolicy"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果两者皆不可，则对队列中【所有任务】调用 cancel 取消并清空队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"keepDelayed "),t("span",{style:{color:"#F97583"}},"&&"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"keepPeriodic) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (Object e "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," q."),t("span",{style:{color:"#B392F0"}},"toArray"),t("span",{style:{color:"#E1E4E8"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (e "),t("span",{style:{color:"#F97583"}},"instanceof"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                ((RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}},") e)."),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        q."),t("span",{style:{color:"#B392F0"}},"clear"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"else"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," (Object e "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," q."),t("span",{style:{color:"#B392F0"}},"toArray"),t("span",{style:{color:"#E1E4E8"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (e "),t("span",{style:{color:"#F97583"}},"instanceof"),t("span",{style:{color:"#E1E4E8"}}," RunnableScheduledFuture) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                RunnableScheduledFuture<"),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}},"> t "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (RunnableScheduledFuture"),t("span",{style:{color:"#F97583"}},"<?>"),t("span",{style:{color:"#E1E4E8"}},")e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#6A737D"}},"// 不需要执行的任务删除并取消，已经取消的任务也需要从队列中删除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," ((t."),t("span",{style:{color:"#B392F0"}},"isPeriodic"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"?"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"keepPeriodic "),t("span",{style:{color:"#F97583"}},":"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"!"),t("span",{style:{color:"#E1E4E8"}},"keepDelayed) "),t("span",{style:{color:"#F97583"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    t."),t("span",{style:{color:"#B392F0"}},"isCancelled"),t("span",{style:{color:"#E1E4E8"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (q."),t("span",{style:{color:"#B392F0"}},"remove"),t("span",{style:{color:"#E1E4E8"}},"(t))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        t."),t("span",{style:{color:"#B392F0"}},"cancel"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"false"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"// 因为任务被从队列中清理掉，所以需要调用 tryTerminate 尝试【改变线程池的状态】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#B392F0"}},"tryTerminate"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"onShutdown"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    BlockingQueue<"),t("span",{style:{color:"#D73A49"}},"Runnable"),t("span",{style:{color:"#24292E"}},"> q "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"super"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"getQueue"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// shutdown 后是否仍然执行延时任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," keepDelayed "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"getExecuteExistingDelayedTasksAfterShutdownPolicy"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// shutdown 后是否仍然执行周期任务")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"boolean"),t("span",{style:{color:"#24292E"}}," keepPeriodic "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"getContinueExistingPeriodicTasksAfterShutdownPolicy"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 如果两者皆不可，则对队列中【所有任务】调用 cancel 取消并清空队列")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"keepDelayed "),t("span",{style:{color:"#D73A49"}},"&&"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"keepPeriodic) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (Object e "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," q."),t("span",{style:{color:"#6F42C1"}},"toArray"),t("span",{style:{color:"#24292E"}},"())")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (e "),t("span",{style:{color:"#D73A49"}},"instanceof"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}},")")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                ((RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}},") e)."),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        q."),t("span",{style:{color:"#6F42C1"}},"clear"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"else"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," (Object e "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," q."),t("span",{style:{color:"#6F42C1"}},"toArray"),t("span",{style:{color:"#24292E"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (e "),t("span",{style:{color:"#D73A49"}},"instanceof"),t("span",{style:{color:"#24292E"}}," RunnableScheduledFuture) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                RunnableScheduledFuture<"),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}},"> t "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (RunnableScheduledFuture"),t("span",{style:{color:"#D73A49"}},"<?>"),t("span",{style:{color:"#24292E"}},")e;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#6A737D"}},"// 不需要执行的任务删除并取消，已经取消的任务也需要从队列中删除")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," ((t."),t("span",{style:{color:"#6F42C1"}},"isPeriodic"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"?"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"keepPeriodic "),t("span",{style:{color:"#D73A49"}},":"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"!"),t("span",{style:{color:"#24292E"}},"keepDelayed) "),t("span",{style:{color:"#D73A49"}},"||")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    t."),t("span",{style:{color:"#6F42C1"}},"isCancelled"),t("span",{style:{color:"#24292E"}},"()) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (q."),t("span",{style:{color:"#6F42C1"}},"remove"),t("span",{style:{color:"#24292E"}},"(t))")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        t."),t("span",{style:{color:"#6F42C1"}},"cancel"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"false"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"// 因为任务被从队列中清理掉，所以需要调用 tryTerminate 尝试【改变线程池的状态】")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6F42C1"}},"tryTerminate"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])])])],-1),Jo=t("hr",null,null,-1),$o={id:"forkjoin",tabindex:"-1"},Ko=t("p",null,[t("code",null,"Fork/Join"),p("：线程池的实现，体现是分治思想，适用于能够进行任务拆分的 CPU 密集型运算，用于"),t("strong",null,"并行计算")],-1),Zo=t("p",null,"任务拆分：将一个大任务拆分为算法上相同的小任务，直至不能拆分可以直接求解。跟递归相关的一些计算，如归并排序、斐波那契数列都可以用分治思想进行求解",-1),sn=t("ul",null,[t("li",null,[t("p",null,[t("code",null,"Fork/Join"),p(" 在"),t("strong",null,"分治的基础上加入了多线程"),p("，把每个任务的分解和合并交给不同的线程来完成，提升了运算效率")])]),t("li",null,[t("p",null,"ForkJoin 使用 ForkJoinPool 来启动，是一个特殊的线程池，默认会创建与 CPU 核心数大小相同的线程池")]),t("li",null,[t("p",null,"任务有返回值继承 RecursiveTask，没有返回值继承 RecursiveAction")])],-1),ln=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"main"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"[] args) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ForkJoinPool pool "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"ForkJoinPool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"4"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"(pool."),t("span",{style:{color:"#B392F0"}},"invoke"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"MyTask"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"5"),t("span",{style:{color:"#E1E4E8"}},")));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//拆分  5 + MyTask(4) --\x3e 4 + MyTask(3) --\x3e")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 1~ n 之间整数的和")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"MyTask"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"extends"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"RecursiveTask"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"Integer"),t("span",{style:{color:"#E1E4E8"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," n;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"MyTask"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"n"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".n "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," String "),t("span",{style:{color:"#B392F0"}},"toString"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'"MyTask{"'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'"n="'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," n "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},"'}'"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," Integer "),t("span",{style:{color:"#B392F0"}},"compute"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果 n 已经为 1，可以求得结果了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (n "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将任务进行拆分(fork)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        MyTask t1 "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"MyTask"),t("span",{style:{color:"#E1E4E8"}},"(n "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        t1."),t("span",{style:{color:"#B392F0"}},"fork"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 合并(join)结果")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," result "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," n "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," t1."),t("span",{style:{color:"#B392F0"}},"join"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"main"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"[] args) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ForkJoinPool pool "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"ForkJoinPool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"4"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"(pool."),t("span",{style:{color:"#6F42C1"}},"invoke"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"MyTask"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"5"),t("span",{style:{color:"#24292E"}},")));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//拆分  5 + MyTask(4) --\x3e 4 + MyTask(3) --\x3e")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#6A737D"}},"// 1~ n 之间整数的和")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"MyTask"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"extends"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"RecursiveTask"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"Integer"),t("span",{style:{color:"#24292E"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," n;")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"MyTask"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"n"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".n "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," String "),t("span",{style:{color:"#6F42C1"}},"toString"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'"MyTask{"'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'"n="'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," n "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},"'}'"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," Integer "),t("span",{style:{color:"#6F42C1"}},"compute"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 如果 n 已经为 1，可以求得结果了")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (n "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," n;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 将任务进行拆分(fork)")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        MyTask t1 "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"MyTask"),t("span",{style:{color:"#24292E"}},"(n "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        t1."),t("span",{style:{color:"#6F42C1"}},"fork"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 合并(join)结果")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," result "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," n "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," t1."),t("span",{style:{color:"#6F42C1"}},"join"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),on=t("p",null,"继续拆分优化：",-1),nn=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AddTask"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"extends"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"RecursiveTask"),t("span",{style:{color:"#E1E4E8"}},"<"),t("span",{style:{color:"#F97583"}},"Integer"),t("span",{style:{color:"#E1E4E8"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," end;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AddTask"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"begin"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"end"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".begin "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".end "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," end;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," String "),t("span",{style:{color:"#B392F0"}},"toString"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'"{"'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," begin "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'","'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," end "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},"'}'"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    @"),t("span",{style:{color:"#F97583"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"protected"),t("span",{style:{color:"#E1E4E8"}}," Integer "),t("span",{style:{color:"#B392F0"}},"compute"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 5, 5")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (begin "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," end) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 4, 5  防止多余的拆分  提高效率")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (end "),t("span",{style:{color:"#F97583"}},"-"),t("span",{style:{color:"#E1E4E8"}}," begin "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," end "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#6A737D"}},"// 1 5")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," mid "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," (end "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," begin) "),t("span",{style:{color:"#F97583"}},"/"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}},"; "),t("span",{style:{color:"#6A737D"}},"// 3")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        AddTask t1 "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AddTask"),t("span",{style:{color:"#E1E4E8"}},"(begin, mid); "),t("span",{style:{color:"#6A737D"}},"// 1,3")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        t1."),t("span",{style:{color:"#B392F0"}},"fork"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        AddTask t2 "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AddTask"),t("span",{style:{color:"#E1E4E8"}},"(mid "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},", end); "),t("span",{style:{color:"#6A737D"}},"// 4,5")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        t2."),t("span",{style:{color:"#B392F0"}},"fork"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," result "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," t1."),t("span",{style:{color:"#B392F0"}},"join"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," t2."),t("span",{style:{color:"#B392F0"}},"join"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AddTask"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"extends"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"RecursiveTask"),t("span",{style:{color:"#24292E"}},"<"),t("span",{style:{color:"#D73A49"}},"Integer"),t("span",{style:{color:"#24292E"}},"> {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," end;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AddTask"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"begin"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"end"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".begin "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".end "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," end;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," String "),t("span",{style:{color:"#6F42C1"}},"toString"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'"{"'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," begin "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'","'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," end "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},"'}'"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    ")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    @"),t("span",{style:{color:"#D73A49"}},"Override")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"protected"),t("span",{style:{color:"#24292E"}}," Integer "),t("span",{style:{color:"#6F42C1"}},"compute"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 5, 5")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (begin "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," end) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 4, 5  防止多余的拆分  提高效率")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (end "),t("span",{style:{color:"#D73A49"}},"-"),t("span",{style:{color:"#24292E"}}," begin "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," end "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," begin;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#6A737D"}},"// 1 5")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," mid "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," (end "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," begin) "),t("span",{style:{color:"#D73A49"}},"/"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}},"; "),t("span",{style:{color:"#6A737D"}},"// 3")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        AddTask t1 "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AddTask"),t("span",{style:{color:"#24292E"}},"(begin, mid); "),t("span",{style:{color:"#6A737D"}},"// 1,3")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        t1."),t("span",{style:{color:"#6F42C1"}},"fork"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        AddTask t2 "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AddTask"),t("span",{style:{color:"#24292E"}},"(mid "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},", end); "),t("span",{style:{color:"#6A737D"}},"// 4,5")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        t2."),t("span",{style:{color:"#6F42C1"}},"fork"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," result "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," t1."),t("span",{style:{color:"#6F42C1"}},"join"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," t2."),t("span",{style:{color:"#6F42C1"}},"join"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," result;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),an=t("p",null,[p("ForkJoinPool 实现了"),t("strong",null,"工作窃取算法"),p("来提高 CPU 的利用率：")],-1),en=t("ul",null,[t("li",null,[p("每个线程都维护了一个"),t("strong",null,"双端队列"),p("，用来存储需要执行的任务")]),t("li",null,"工作窃取算法允许空闲的线程从其它线程的双端队列中窃取一个任务来执行"),t("li",null,[p("窃取的必须是"),t("strong",null,"最晚的任务"),p("，避免和队列所属线程发生竞争，但是队列中只有一个任务时还是会发生竞争")])],-1),cn=t("hr",null,null,-1),tn={id:"享元模式",tabindex:"-1"},pn=t("p",null,"享元模式（Flyweight pattern）： 用于减少创建对象的数量，以减少内存占用和提高性能，这种类型的设计模式属于结构型模式，它提供了减少对象数量从而改善应用所需的对象结构的方式",-1),rn=t("p",null,"异步模式：让有限的工作线程（Worker Thread）来轮流异步处理无限多的任务，也可将其归类为分工模式，典型实现就是线程池",-1),En=t("p",null,"工作机制：享元模式尝试重用现有的同类对象，如果未找到匹配的对象，则创建新对象",-1),yn=t("p",null,"自定义连接池：",-1),un=t("div",{class:"language-java"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"java"),t("pre",{class:"shiki github-dark vp-code-dark"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"static"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"main"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"String"),t("span",{style:{color:"#E1E4E8"}},"[] args) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    Pool pool "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Pool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"2"),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"; i "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"5"),t("span",{style:{color:"#E1E4E8"}},"; i"),t("span",{style:{color:"#F97583"}},"++"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Thread"),t("span",{style:{color:"#E1E4E8"}},"(() "),t("span",{style:{color:"#F97583"}},"->"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            Connection con "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," pool."),t("span",{style:{color:"#B392F0"}},"borrow"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                Thread."),t("span",{style:{color:"#B392F0"}},"sleep"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Random"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"nextInt"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#79B8FF"}},"1000"),t("span",{style:{color:"#E1E4E8"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (InterruptedException "),t("span",{style:{color:"#FFAB70"}},"e"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                e."),t("span",{style:{color:"#B392F0"}},"printStackTrace"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            pool."),t("span",{style:{color:"#B392F0"}},"free"),t("span",{style:{color:"#E1E4E8"}},"(con);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        })."),t("span",{style:{color:"#B392F0"}},"start"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Pool"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//连接池的大小")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"final"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," poolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//连接对象的数组")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"Connection"),t("span",{style:{color:"#E1E4E8"}},"[] connections;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//连接状态数组 0表示空闲  1表示繁忙")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," AtomicIntegerArray states;  "),t("span",{style:{color:"#6A737D"}},"//int[] -> AtomicIntegerArray")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//构造方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Pool"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#FFAB70"}},"poolSize"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".poolSize "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," poolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".connections "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"Connection"),t("span",{style:{color:"#E1E4E8"}},"[poolSize];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},".states "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"AtomicIntegerArray"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}},"[poolSize]);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"; i "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," poolSize; i"),t("span",{style:{color:"#F97583"}},"++"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            connections[i] "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"new"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"MockConnection"),t("span",{style:{color:"#E1E4E8"}},"("),t("span",{style:{color:"#9ECBFF"}},'"连接"'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," (i "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//使用连接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," Connection "),t("span",{style:{color:"#B392F0"}},"borrow"),t("span",{style:{color:"#E1E4E8"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"while"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#79B8FF"}},"true"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"; i "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," poolSize; i"),t("span",{style:{color:"#F97583"}},"++"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (states."),t("span",{style:{color:"#B392F0"}},"get"),t("span",{style:{color:"#E1E4E8"}},"(i) "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (states."),t("span",{style:{color:"#B392F0"}},"compareAndSet"),t("span",{style:{color:"#E1E4E8"}},"(i, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},", "),t("span",{style:{color:"#79B8FF"}},"1"),t("span",{style:{color:"#E1E4E8"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"(Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"getName"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'" borrow "'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}},"  connections[i]);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                        "),t("span",{style:{color:"#F97583"}},"return"),t("span",{style:{color:"#E1E4E8"}}," connections[i];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#6A737D"}},"//如果没有空闲连接，当前线程等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"synchronized"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"try"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"(Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"getName"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'" wait..."'),t("span",{style:{color:"#E1E4E8"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"wait"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                } "),t("span",{style:{color:"#F97583"}},"catch"),t("span",{style:{color:"#E1E4E8"}}," (InterruptedException "),t("span",{style:{color:"#FFAB70"}},"e"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    e."),t("span",{style:{color:"#B392F0"}},"printStackTrace"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//归还连接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"public"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"void"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"free"),t("span",{style:{color:"#E1E4E8"}},"(Connection "),t("span",{style:{color:"#FFAB70"}},"con"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        "),t("span",{style:{color:"#F97583"}},"for"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#F97583"}},"int"),t("span",{style:{color:"#E1E4E8"}}," i "),t("span",{style:{color:"#F97583"}},"="),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},"; i "),t("span",{style:{color:"#F97583"}},"<"),t("span",{style:{color:"#E1E4E8"}}," poolSize; i"),t("span",{style:{color:"#F97583"}},"++"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            "),t("span",{style:{color:"#F97583"}},"if"),t("span",{style:{color:"#E1E4E8"}}," (connections[i] "),t("span",{style:{color:"#F97583"}},"=="),t("span",{style:{color:"#E1E4E8"}}," con) {"),t("span",{style:{color:"#6A737D"}},"//判断是否是同一个对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                states."),t("span",{style:{color:"#B392F0"}},"set"),t("span",{style:{color:"#E1E4E8"}},"(i, "),t("span",{style:{color:"#79B8FF"}},"0"),t("span",{style:{color:"#E1E4E8"}},");"),t("span",{style:{color:"#6A737D"}},"//不用cas的原因是只会有一个线程使用该连接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"synchronized"),t("span",{style:{color:"#E1E4E8"}}," ("),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    System.out."),t("span",{style:{color:"#B392F0"}},"println"),t("span",{style:{color:"#E1E4E8"}},"(Thread."),t("span",{style:{color:"#B392F0"}},"currentThread"),t("span",{style:{color:"#E1E4E8"}},"()."),t("span",{style:{color:"#B392F0"}},"getName"),t("span",{style:{color:"#E1E4E8"}},"() "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#9ECBFF"}},'" free "'),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"+"),t("span",{style:{color:"#E1E4E8"}}," con);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                    "),t("span",{style:{color:"#79B8FF"}},"this"),t("span",{style:{color:"#E1E4E8"}},"."),t("span",{style:{color:"#B392F0"}},"notifyAll"),t("span",{style:{color:"#E1E4E8"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"                "),t("span",{style:{color:"#F97583"}},"break"),t("span",{style:{color:"#E1E4E8"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#F97583"}},"class"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"MockConnection"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#F97583"}},"implements"),t("span",{style:{color:"#E1E4E8"}}," "),t("span",{style:{color:"#B392F0"}},"Connection"),t("span",{style:{color:"#E1E4E8"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#F97583"}},"private"),t("span",{style:{color:"#E1E4E8"}}," String name;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"    "),t("span",{style:{color:"#6A737D"}},"//.....")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#E1E4E8"}},"}")])])]),t("pre",{class:"shiki github-light vp-code-light"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"static"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"main"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"String"),t("span",{style:{color:"#24292E"}},"[] args) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    Pool pool "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Pool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"2"),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"; i "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"5"),t("span",{style:{color:"#24292E"}},"; i"),t("span",{style:{color:"#D73A49"}},"++"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Thread"),t("span",{style:{color:"#24292E"}},"(() "),t("span",{style:{color:"#D73A49"}},"->"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            Connection con "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," pool."),t("span",{style:{color:"#6F42C1"}},"borrow"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                Thread."),t("span",{style:{color:"#6F42C1"}},"sleep"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Random"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"nextInt"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#005CC5"}},"1000"),t("span",{style:{color:"#24292E"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (InterruptedException "),t("span",{style:{color:"#E36209"}},"e"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                e."),t("span",{style:{color:"#6F42C1"}},"printStackTrace"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            pool."),t("span",{style:{color:"#6F42C1"}},"free"),t("span",{style:{color:"#24292E"}},"(con);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        })."),t("span",{style:{color:"#6F42C1"}},"start"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Pool"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//连接池的大小")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"final"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," poolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//连接对象的数组")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"Connection"),t("span",{style:{color:"#24292E"}},"[] connections;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//连接状态数组 0表示空闲  1表示繁忙")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," AtomicIntegerArray states;  "),t("span",{style:{color:"#6A737D"}},"//int[] -> AtomicIntegerArray")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//构造方法")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Pool"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#E36209"}},"poolSize"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".poolSize "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," poolSize;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".connections "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"Connection"),t("span",{style:{color:"#24292E"}},"[poolSize];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},".states "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"AtomicIntegerArray"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}},"[poolSize]);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"; i "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," poolSize; i"),t("span",{style:{color:"#D73A49"}},"++"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            connections[i] "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"new"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"MockConnection"),t("span",{style:{color:"#24292E"}},"("),t("span",{style:{color:"#032F62"}},'"连接"'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," (i "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},"));")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//使用连接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," Connection "),t("span",{style:{color:"#6F42C1"}},"borrow"),t("span",{style:{color:"#24292E"}},"() {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"while"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#005CC5"}},"true"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"; i "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," poolSize; i"),t("span",{style:{color:"#D73A49"}},"++"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (states."),t("span",{style:{color:"#6F42C1"}},"get"),t("span",{style:{color:"#24292E"}},"(i) "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (states."),t("span",{style:{color:"#6F42C1"}},"compareAndSet"),t("span",{style:{color:"#24292E"}},"(i, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},", "),t("span",{style:{color:"#005CC5"}},"1"),t("span",{style:{color:"#24292E"}},")) {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"(Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"getName"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'" borrow "'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}},"  connections[i]);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                        "),t("span",{style:{color:"#D73A49"}},"return"),t("span",{style:{color:"#24292E"}}," connections[i];")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#6A737D"}},"//如果没有空闲连接，当前线程等待")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"synchronized"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"try"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"(Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"getName"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'" wait..."'),t("span",{style:{color:"#24292E"}},");")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"wait"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                } "),t("span",{style:{color:"#D73A49"}},"catch"),t("span",{style:{color:"#24292E"}}," (InterruptedException "),t("span",{style:{color:"#E36209"}},"e"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    e."),t("span",{style:{color:"#6F42C1"}},"printStackTrace"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//归还连接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"public"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"void"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"free"),t("span",{style:{color:"#24292E"}},"(Connection "),t("span",{style:{color:"#E36209"}},"con"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        "),t("span",{style:{color:"#D73A49"}},"for"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#D73A49"}},"int"),t("span",{style:{color:"#24292E"}}," i "),t("span",{style:{color:"#D73A49"}},"="),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},"; i "),t("span",{style:{color:"#D73A49"}},"<"),t("span",{style:{color:"#24292E"}}," poolSize; i"),t("span",{style:{color:"#D73A49"}},"++"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            "),t("span",{style:{color:"#D73A49"}},"if"),t("span",{style:{color:"#24292E"}}," (connections[i] "),t("span",{style:{color:"#D73A49"}},"=="),t("span",{style:{color:"#24292E"}}," con) {"),t("span",{style:{color:"#6A737D"}},"//判断是否是同一个对象")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                states."),t("span",{style:{color:"#6F42C1"}},"set"),t("span",{style:{color:"#24292E"}},"(i, "),t("span",{style:{color:"#005CC5"}},"0"),t("span",{style:{color:"#24292E"}},");"),t("span",{style:{color:"#6A737D"}},"//不用cas的原因是只会有一个线程使用该连接")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"synchronized"),t("span",{style:{color:"#24292E"}}," ("),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},") {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    System.out."),t("span",{style:{color:"#6F42C1"}},"println"),t("span",{style:{color:"#24292E"}},"(Thread."),t("span",{style:{color:"#6F42C1"}},"currentThread"),t("span",{style:{color:"#24292E"}},"()."),t("span",{style:{color:"#6F42C1"}},"getName"),t("span",{style:{color:"#24292E"}},"() "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#032F62"}},'" free "'),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"+"),t("span",{style:{color:"#24292E"}}," con);")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                    "),t("span",{style:{color:"#005CC5"}},"this"),t("span",{style:{color:"#24292E"}},"."),t("span",{style:{color:"#6F42C1"}},"notifyAll"),t("span",{style:{color:"#24292E"}},"();")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"                "),t("span",{style:{color:"#D73A49"}},"break"),t("span",{style:{color:"#24292E"}},";")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"            }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"        }")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    }")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")]),p("\n"),t("span",{class:"line"}),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#D73A49"}},"class"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"MockConnection"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#D73A49"}},"implements"),t("span",{style:{color:"#24292E"}}," "),t("span",{style:{color:"#6F42C1"}},"Connection"),t("span",{style:{color:"#24292E"}}," {")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#D73A49"}},"private"),t("span",{style:{color:"#24292E"}}," String name;")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"    "),t("span",{style:{color:"#6A737D"}},"//.....")]),p("\n"),t("span",{class:"line"},[t("span",{style:{color:"#24292E"}},"}")])])])],-1),Fn=t("hr",null,null,-1);const An=s(F,[["render",function(s,l,o,i,u,F){const An=y,dn=e;return c(),n(dn,{frontmatter:u.frontmatter,data:u.data},{"main-content-md":a((()=>[t("h1",A,[p("并发编程整理版 "),r(An,{class:"header-anchor",href:"#并发编程整理版","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("p",null,[p("参考视频："),r(An,{href:"https://www.bilibili.com/video/BV16J411h7Rd",target:"_blank",rel:"noreferrer"},{default:a((()=>[p("https://www.bilibili.com/video/BV16J411h7Rd")])),_:1})]),d,t("h2",D,[p("线程池 "),r(An,{class:"header-anchor",href:"#线程池","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h3",h,[p("基本概述 "),r(An,{class:"header-anchor",href:"#基本概述","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),C,k,g,f,m,v,t("h3",b,[p("阻塞队列 "),r(An,{class:"header-anchor",href:"#阻塞队列","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h4",B,[p("基本介绍 "),r(An,{class:"header-anchor",href:"#基本介绍","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),T,S,w,x,N,I,O,t("h4",R,[p("核心方法 "),r(An,{class:"header-anchor",href:"#核心方法","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),L,j,P,t("h4",U,[p("链表队列 "),r(An,{class:"header-anchor",href:"#链表队列","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",W,[p("入队出队 "),r(An,{class:"header-anchor",href:"#入队出队","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Q,q,z,_,M,H,G,t("h5",V,[p("加锁分析 "),r(An,{class:"header-anchor",href:"#加锁分析","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Y,X,J,$,K,Z,ss,t("h5",ls,[p("性能比较 "),r(An,{class:"header-anchor",href:"#性能比较","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),os,ns,as,t("h4",es,[p("同步队列 "),r(An,{class:"header-anchor",href:"#同步队列","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",cs,[p("成员属性 "),r(An,{class:"header-anchor",href:"#成员属性","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),ts,ps,rs,Es,t("h5",ys,[p("非公实现 "),r(An,{class:"header-anchor",href:"#非公实现","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),is,us,Fs,As,ds,Ds,hs,Cs,t("h5",ks,[p("公平实现 "),r(An,{class:"header-anchor",href:"#公平实现","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),gs,fs,ms,vs,bs,Bs,Ts,Ss,t("h3",ws,[p("操作Pool "),r(An,{class:"header-anchor",href:"#操作pool","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h4",xs,[p("创建方式 "),r(An,{class:"header-anchor",href:"#创建方式","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",Ns,[p("Executor "),r(An,{class:"header-anchor",href:"#executor","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Is,Os,Rs,Ls,js,Ps,Us,Ws,Qs,t("p",null,[p("图片来源："),r(An,{href:"https://space.bilibili.com/457326371/",target:"_blank",rel:"noreferrer"},{default:a((()=>[p("https://space.bilibili.com/457326371/")])),_:1})]),qs,t("h5",zs,[p("Executors "),r(An,{class:"header-anchor",href:"#executors","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),_s,Ms,Hs,Gs,Vs,Ys,t("h5",Xs,[p("开发要求 "),r(An,{class:"header-anchor",href:"#开发要求","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Js,$s,Ks,Zs,sl,ll,ol,nl,al,t("h4",el,[p("提交方法 "),r(An,{class:"header-anchor",href:"#提交方法","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),cl,tl,pl,rl,El,t("h4",yl,[p("关闭方法 "),r(An,{class:"header-anchor",href:"#关闭方法","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),il,ul,Fl,t("h4",Al,[p("处理异常 "),r(An,{class:"header-anchor",href:"#处理异常","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),dl,Dl,hl,Cl,kl,gl,t("h3",fl,[p("工作原理 "),r(An,{class:"header-anchor",href:"#工作原理","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h4",ml,[p("状态信息 "),r(An,{class:"header-anchor",href:"#状态信息","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),vl,bl,Bl,t("h4",Tl,[p("成员属性 "),r(An,{class:"header-anchor",href:"#成员属性-1","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Sl,wl,xl,Nl,Il,t("h4",Ol,[p("成员方法 "),r(An,{class:"header-anchor",href:"#成员方法","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",Rl,[p("提交方法 "),r(An,{class:"header-anchor",href:"#提交方法-1","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Ll,jl,t("h5",Pl,[p("添加线程 "),r(An,{class:"header-anchor",href:"#添加线程","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Ul,Wl,t("h5",Ql,[p("运行方法 "),r(An,{class:"header-anchor",href:"#运行方法","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),ql,zl,t("h5",_l,[p("停止方法 "),r(An,{class:"header-anchor",href:"#停止方法","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Ml,Hl,t("h4",Gl,[p("Future "),r(An,{class:"header-anchor",href:"#future","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",Vl,[p("线程使用 "),r(An,{class:"header-anchor",href:"#线程使用","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Yl,Xl,Jl,$l,Kl,Zl,t("h5",so,[p("成员属性 "),r(An,{class:"header-anchor",href:"#成员属性-2","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),lo,oo,no,t("h5",ao,[p("成员方法 "),r(An,{class:"header-anchor",href:"#成员方法-1","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),eo,co,to,t("h3",po,[p("任务调度 "),r(An,{class:"header-anchor",href:"#任务调度","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h4",ro,[p("Timer "),r(An,{class:"header-anchor",href:"#timer","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Eo,yo,io,t("h4",uo,[p("Scheduled "),r(An,{class:"header-anchor",href:"#scheduled","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Fo,Ao,Do,ho,Co,ko,go,fo,mo,t("h4",vo,[p("成员属性 "),r(An,{class:"header-anchor",href:"#成员属性-3","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",bo,[p("成员变量 "),r(An,{class:"header-anchor",href:"#成员变量","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Bo,To,t("h5",So,[p("延迟任务 "),r(An,{class:"header-anchor",href:"#延迟任务","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),wo,xo,No,Io,Oo,Ro,Lo,t("h5",jo,[p("延迟队列 "),r(An,{class:"header-anchor",href:"#延迟队列","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Po,Uo,Wo,Qo,qo,zo,_o,t("h4",Mo,[p("成员方法 "),r(An,{class:"header-anchor",href:"#成员方法-2","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),t("h5",Ho,[p("提交任务 "),r(An,{class:"header-anchor",href:"#提交任务","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Go,Vo,t("h5",Yo,[p("运行任务 "),r(An,{class:"header-anchor",href:"#运行任务","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Xo,Jo,t("h3",$o,[p("ForkJoin "),r(An,{class:"header-anchor",href:"#forkjoin","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),Ko,Zo,sn,ln,on,nn,an,en,cn,t("h3",tn,[p("享元模式 "),r(An,{class:"header-anchor",href:"#享元模式","aria-hidden":"true"},{default:a((()=>[p("#")])),_:1})]),pn,rn,En,yn,un,Fn])),"main-header":a((()=>[E(s.$slots,"main-header")])),"main-header-after":a((()=>[E(s.$slots,"main-header-after")])),"main-nav":a((()=>[E(s.$slots,"main-nav")])),"main-content":a((()=>[E(s.$slots,"main-content")])),"main-content-after":a((()=>[E(s.$slots,"main-content-after")])),"main-nav-before":a((()=>[E(s.$slots,"main-nav-before")])),"main-nav-after":a((()=>[E(s.$slots,"main-nav-after")])),comment:a((()=>[E(s.$slots,"comment")])),footer:a((()=>[E(s.$slots,"footer")])),aside:a((()=>[E(s.$slots,"aside")])),"aside-custom":a((()=>[E(s.$slots,"aside-custom")])),default:a((()=>[E(s.$slots,"default")])),_:3},8,["frontmatter","data"])}]]);export{i as __pageData,An as default};
