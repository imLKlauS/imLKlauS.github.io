import{_ as l,u as s,p as o,c as n,w as a,a as e,o as t,b as c,d as r,e as p,r as y,f as E}from"../../assets/app-dc00d3e4.js";const i=JSON.parse('{"title":"并发编程整理版-内存","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-yx8mrk_1920x1080.png","title":"并发编程整理版-内存","top":300,"author":"imklaus","tags":["Synchronized","JMM","volatile","终止模式","Balking"],"categories":"Java","date":"2023-11-22T23:57:58.000Z","outline":"deep"},"headers":[{"level":2,"title":"内存","slug":"内存","link":"#内存","children":[{"level":3,"title":"JMM","slug":"jmm","link":"#jmm","children":[]},{"level":3,"title":"cache","slug":"cache","link":"#cache","children":[]},{"level":3,"title":"volatile","slug":"volatile","link":"#volatile","children":[]},{"level":3,"title":"ha-be","slug":"ha-be","link":"#ha-be","children":[]},{"level":3,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[]}]}],"relativePath":"pages/posts/Concurrent_Programming_Compilation_Version-Memory.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-lastest\\\\imklaus-valaxy-blog\\\\pages\\\\posts\\\\Concurrent_Programming_Compilation_Version-Memory.md","lastUpdated":null}'),u=JSON.parse('{"title":"并发编程整理版-内存","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-yx8mrk_1920x1080.png","title":"并发编程整理版-内存","top":300,"author":"imklaus","tags":["Synchronized","JMM","volatile","终止模式","Balking"],"categories":"Java","date":"2023-11-22T23:57:58.000Z","outline":"deep"},"headers":[{"level":2,"title":"内存","slug":"内存","link":"#内存","children":[{"level":3,"title":"JMM","slug":"jmm","link":"#jmm","children":[]},{"level":3,"title":"cache","slug":"cache","link":"#cache","children":[]},{"level":3,"title":"volatile","slug":"volatile","link":"#volatile","children":[]},{"level":3,"title":"ha-be","slug":"ha-be","link":"#ha-be","children":[]},{"level":3,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[]}]}],"relativePath":"pages/posts/Concurrent_Programming_Compilation_Version-Memory.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-lastest\\\\imklaus-valaxy-blog\\\\pages\\\\posts\\\\Concurrent_Programming_Compilation_Version-Memory.md","lastUpdated":null}'),d={name:"pages/posts/Concurrent_Programming_Compilation_Version-Memory.md",data:()=>({data:u,frontmatter:u.frontmatter,$frontmatter:u.frontmatter}),setup(){const l=s();l.meta.frontmatter=Object.assign(l.meta.frontmatter,u.frontmatter),o("pageData",u)}},h={id:"并发编程整理版",tabindex:"-1"},F=c("p",null,"笔记的整体结构依据视频编写，并随着学习的深入补充了很多知识",-1),g={id:"内存",tabindex:"-1"},m={id:"jmm",tabindex:"-1"},C={id:"内存模型",tabindex:"-1"},A=c("p",null,[r("Java 内存模型是 Java Memory Model（JMM），本身是一种"),c("strong",null,"抽象的概念"),r("，实际上并不存在，描述的是一组规则或规范，通过这组规范定义了程序中各个变量（包括实例字段，静态字段和构成数组对象的元素）的访问方式")],-1),D=c("p",null,"JMM 作用：",-1),b=c("ul",null,[c("li",null,"屏蔽各种硬件和操作系统的内存访问差异，实现让 Java 程序在各种平台下都能达到一致的内存访问效果"),c("li",null,"规定了线程和内存之间的一些关系")],-1),v=c("p",null,[r("根据 JMM 的设计，系统存在一个主内存（Main Memory），Java 中所有变量都存储在主存中，对于所有线程都是共享的；每条线程都有自己的工作内存（Working Memory），工作内存中保存的是主存中某些"),c("strong",null,"变量的拷贝"),r("，线程对所有变量的操作都是先对变量进行拷贝，然后在工作内存中进行，不能直接操作主内存中的变量；线程之间无法相互直接访问，线程间的通信（传递）必须通过主内存来完成")],-1),f=c("figure",null,[c("img",{alt:"image-20230824170740642",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824170740642.png"})],-1),k=c("p",null,"主内存和工作内存：",-1),B=c("ul",null,[c("li",null,"主内存：计算机的内存，也就是经常提到的 8G 内存，16G 内存，存储所有共享变量的值"),c("li",null,"工作内存：存储该线程使用到的共享变量在主内存的的值的副本拷贝")],-1),S=c("p",null,[c("strong",null,"JVM 和 JMM 之间的关系"),r("：JMM 中的主内存、工作内存与 JVM 中的 Java 堆、栈、方法区等并不是同一个层次的内存划分，这两者基本上是没有关系的，如果两者一定要勉强对应起来：")],-1),x=c("ul",null,[c("li",null,"主内存主要对应于 Java 堆中的对象实例数据部分，而工作内存则对应于虚拟机栈中的部分区域"),c("li",null,"从更低层次上说，主内存直接对应于物理硬件的内存，工作内存对应寄存器和高速缓存")],-1),P=c("hr",null,null,-1),T={id:"内存交互",tabindex:"-1"},_=c("p",null,[r("Java 内存模型定义了 8 个操作来完成主内存和工作内存的交互操作，每个操作都是"),c("strong",null,"原子"),r("的")],-1),I=c("p",null,"非原子协定：没有被 volatile 修饰的 long、double 外，默认按照两次 32 位的操作",-1),N=c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824170847246.png",alt:"image-20230824170847246",style:{zoom:"80%"}},null,-1),j=c("ul",null,[c("li",null,"lock：作用于主内存，将一个变量标识为被一个线程独占状态（对应 monitorenter）"),c("li",null,"unclock：作用于主内存，将一个变量从独占状态释放出来，释放后的变量才可以被其他线程锁定（对应 monitorexit）"),c("li",null,"read：作用于主内存，把一个变量的值从主内存传输到工作内存中"),c("li",null,"load：作用于工作内存，在 read 之后执行，把 read 得到的值放入工作内存的变量副本中"),c("li",null,[r("use：作用于工作内存，把工作内存中一个变量的值传递给"),c("strong",null,"执行引擎"),r("，每当遇到一个使用到变量的操作时都要使用该指令")]),c("li",null,"assign：作用于工作内存，把从执行引擎接收到的一个值赋给工作内存的变量"),c("li",null,"store：作用于工作内存，把工作内存的一个变量的值传送到主内存中"),c("li",null,"write：作用于主内存，在 store 之后执行，把 store 得到的值放入主内存的变量中")],-1),M=c("hr",null,null,-1),w={id:"三大特性",tabindex:"-1"},z={id:"可见性",tabindex:"-1"},L=c("p",null,"可见性：是指当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值",-1),U=c("p",null,[r("存在不可见问题的根本原因是由于缓存的存在，线程持有的是共享变量的副本，无法感知其他线程对于共享变量的更改，导致读取的值不是最新的。但是 final 修饰的变量是"),c("strong",null,"不可变"),r("的，就算有缓存，也不会存在不可见的问题")],-1),J=c("p",null,"main 线程对 run 变量的修改对于 t 线程不可见，导致了 t 线程无法停止：",-1),K=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," run "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},";\t"),c("span",{style:{color:"#6A737D"}},"//添加volatile")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"main"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#F97583"}},"String"),c("span",{style:{color:"#E1E4E8"}},"[] args) throws InterruptedException {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    Thread t "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Thread"),c("span",{style:{color:"#E1E4E8"}},"(()"),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}},"{")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"while"),c("span",{style:{color:"#E1E4E8"}},"(run){")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#6A737D"}},"// ....")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\t});")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    t."),c("span",{style:{color:"#B392F0"}},"start"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#B392F0"}},"sleep"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#79B8FF"}},"1"),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    run "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"false"),c("span",{style:{color:"#E1E4E8"}},"; "),c("span",{style:{color:"#6A737D"}},"// 线程t不会如预想的停下来")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," run "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},";\t"),c("span",{style:{color:"#6A737D"}},"//添加volatile")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"main"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#D73A49"}},"String"),c("span",{style:{color:"#24292E"}},"[] args) throws InterruptedException {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    Thread t "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Thread"),c("span",{style:{color:"#24292E"}},"(()"),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}},"{")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"while"),c("span",{style:{color:"#24292E"}},"(run){")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#6A737D"}},"// ....")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\t});")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    t."),c("span",{style:{color:"#6F42C1"}},"start"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6F42C1"}},"sleep"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#005CC5"}},"1"),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    run "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"false"),c("span",{style:{color:"#24292E"}},"; "),c("span",{style:{color:"#6A737D"}},"// 线程t不会如预想的停下来")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})],-1),R=c("p",null,[c("strong",null,"为什么无法退出该循环")],-1),V=c("ul",null,[c("li",null,[r("初始状态， t 线程刚开始从"),c("strong",null,"主内存"),r("读取了 run 的值到"),c("strong",null,"工作内存"),r("。")])],-1),$=c("figure",null,[c("img",{alt:"img",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608145505.png"})],-1),O=c("ul",null,[c("li",null,[r("因为 t 线程要频繁从主内存中读取 run 的值，JIT 编译器会将 run 的值"),c("strong",null,"缓存至自己工作内存"),r("中的高速缓存中， 减少对主存中 run 的访问，提高效率")])],-1),G=c("figure",null,[c("img",{alt:"img",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608145517.png"})],-1),W=c("ul",null,[c("li",null,[r("1 秒之后，main 线程修改了 run 的值，并同步至主存，而 t 是从自己工作内存中的高速缓存中读取这个变量 的值，结果永远是"),c("strong",null,"旧值")])],-1),q=c("figure",null,[c("img",{alt:"img",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608145529.png"})],-1),Z=c("hr",null,null,-1),H={id:"原子性",tabindex:"-1"},Q=c("p",null,"原子性：不可分割，完整性，也就是说某个线程正在做某个具体业务时，中间不可以被分割，需要具体完成，要么同时成功，要么同时失败，保证指令不会受到线程上下文切换的影响",-1),X=c("p",null,"定义原子操作的使用规则：",-1),Y=c("ol",null,[c("li",null,"不允许 read 和 load、store 和 write 操作之一单独出现，必须顺序执行，但是不要求连续"),c("li",null,"不允许一个线程丢弃 assign 操作，必须同步回主存"),c("li",null,"不允许一个线程无原因地（没有发生过任何 assign 操作）把数据从工作内存同步到主内存中"),c("li",null,"一个新的变量只能在主内存中诞生，不允许在工作内存中直接使用一个未被初始化（assign 或者 load）的变量，即对一个变量实施 use 和 store 操作之前，必须先自行 assign 和 load 操作"),c("li",null,[r("一个变量在同一时刻只允许一条线程对其进行 lock 操作，但 lock 操作可以被同一线程重复执行多次，多次执行 lock 后，只有"),c("strong",null,"执行相同次数的 unlock"),r(" 操作，变量才会被解锁，"),c("strong",null,"lock 和 unlock 必须成对出现")]),c("li",null,[r("如果对一个变量执行 lock 操作，将会"),c("strong",null,"清空工作内存中此变量的值"),r("，在执行引擎使用这个变量之前需要重新从主存加载")]),c("li",null,"如果一个变量事先没有被 lock 操作锁定，则不允许执行 unlock 操作，也不允许去 unlock 一个被其他线程锁定的变量"),c("li",null,[r("对一个变量执行 unlock 操作之前，必须"),c("strong",null,"先把此变量同步到主内存"),r("中（执行 store 和 write 操作）")])],-1),ll=c("hr",null,null,-1),sl={id:"有序性",tabindex:"-1"},ol=c("p",null,"有序性：在本线程内观察，所有操作都是有序的；在一个线程观察另一个线程，所有操作都是无序的，无序是因为发生了指令重排序",-1),nl=c("p",null,"CPU 的基本工作是执行存储的指令序列，即程序，程序的执行过程实际上是不断地取出指令、分析指令、执行指令的过程，为了提高性能，编译器和处理器会对指令重排，一般分为以下三种：",-1),al=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"源代码 "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," 编译器优化的重排 "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," 指令并行的重排 "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," 内存系统的重排 "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," 最终执行指令")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"源代码 "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," 编译器优化的重排 "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," 指令并行的重排 "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," 内存系统的重排 "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," 最终执行指令")])])]),c("button",{class:"collapse"})],-1),el=c("p",null,[r("现代 CPU 支持多级指令流水线，几乎所有的冯•诺伊曼型计算机的 CPU，其工作都可以分为 5 个阶段：取指令、指令译码、执行指令、访存取数和结果写回，可以称之为"),c("strong",null,"五级指令流水线"),r("。CPU 可以在一个时钟周期内，同时运行五条指令的"),c("strong",null,"不同阶段"),r("（每个线程不同的阶段），本质上流水线技术并不能缩短单条指令的执行时间，但变相地提高了指令地吞吐率")],-1),tl=c("p",null,[r("处理器在进行重排序时，必须要考虑"),c("strong",null,"指令之间的数据依赖性")],-1),cl=c("ul",null,[c("li",null,"单线程环境也存在指令重排，由于存在依赖性，最终执行结果和代码顺序的结果一致"),c("li",null,"多线程环境中线程交替执行，由于编译器优化重排，会获取其他线程处在不同阶段的指令同时执行")],-1),rl=c("p",null,"补充知识：",-1),pl=c("ul",null,[c("li",null,"指令周期是取出一条指令并执行这条指令的时间，一般由若干个机器周期组成"),c("li",null,"机器周期也称为 CPU 周期，一条指令的执行过程划分为若干个阶段（如取指、译码、执行等），每一阶段完成一个基本操作，完成一个基本操作所需要的时间称为机器周期"),c("li",null,"振荡周期指周期性信号作周期性重复变化的时间间隔")],-1),yl=c("hr",null,null,-1),El={id:"cache",tabindex:"-1"},il={id:"缓存机制",tabindex:"-1"},ul={id:"缓存结构",tabindex:"-1"},dl=c("p",null,"在计算机系统中，CPU 高速缓存（CPU Cache，简称缓存）是用于减少处理器访问内存所需平均时间的部件；在存储体系中位于自顶向下的第二层，仅次于 CPU 寄存器；其容量远小于内存，但速度却可以接近处理器的频率",-1),hl=c("p",null,"CPU 处理器速度远远大于在主内存中的，为了解决速度差异，在它们之间架设了多级缓存，如 L1、L2、L3 级别的缓存，这些缓存离 CPU 越近就越快，将频繁操作的数据缓存到这里，加快访问速度",-1),Fl=c("figure",null,[c("img",{alt:"image-20230824170955611",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824170955611.png"})],-1),gl=c("table",null,[c("thead",null,[c("tr",null,[c("th",null,"从 CPU 到"),c("th",null,"大约需要的时钟周期")])]),c("tbody",null,[c("tr",null,[c("td",null,"寄存器"),c("td",null,"1 cycle (4GHz 的 CPU 约为 0.25ns)")]),c("tr",null,[c("td",null,"L1"),c("td",null,"3~4 cycle")]),c("tr",null,[c("td",null,"L2"),c("td",null,"10~20 cycle")]),c("tr",null,[c("td",null,"L3"),c("td",null,"40~45 cycle")]),c("tr",null,[c("td",null,"内存"),c("td",null,"120~240 cycle")])])],-1),ml={id:"缓存使用",tabindex:"-1"},Cl=c("p",null,"当处理器发出内存访问请求时，会先查看缓存内是否有请求数据，如果存在（命中），则不用访问内存直接返回该数据；如果不存在（失效），则要先把内存中的相应数据载入缓存，再将其返回处理器",-1),Al=c("p",null,"缓存之所以有效，主要因为程序运行时对内存的访问呈现局部性（Locality）特征。既包括空间局部性（Spatial Locality），也包括时间局部性（Temporal Locality），有效利用这种局部性，缓存可以达到极高的命中率",-1),Dl=c("hr",null,null,-1),bl={id:"伪共享",tabindex:"-1"},vl=c("p",null,[c("strong",null,"缓存以缓存行 cache line 为单位"),r("，每个缓存行对应着一块内存，一般是 64 byte（8 个 long），在 CPU 从主存获取数据时，以 cache line 为单位加载，于是相邻的数据会一并加载到缓存中")],-1),fl=c("p",null,[r("缓存会造成数据副本的产生，即同一份数据会缓存在不同核心的缓存行中，CPU 要保证数据的一致性，需要做到某个 CPU 核心更改了数据，其它 CPU 核心对应的"),c("strong",null,"整个缓存行必须失效"),r("，这就是伪共享")],-1),kl=c("figure",null,[c("img",{alt:"image-20230824171035903",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824171035903.png"})],-1),Bl=c("p",null,"解决方法：",-1),Sl=c("ul",null,[c("li",null,[c("p",null,"padding：通过填充，让数据落在不同的 cache line 中")]),c("li",null,[c("p",null,"@Contended：原理参考 无锁 → Adder → 优化机制 → 伪共享")])],-1),xl=c("p",null,"Linux 查看 CPU 缓存行：",-1),Pl=c("ul",null,[c("li",null,[r("命令："),c("code",null,"cat /sys/devices/system/cpu/cpu0/cache/index0/coherency_line_size64")]),c("li",null,"内存地址格式：[高位组标记] [低位索引] [偏移量]")],-1),Tl=c("hr",null,null,-1),_l={id:"缓存一致",tabindex:"-1"},Il=c("p",null,"缓存一致性：当多个处理器运算任务都涉及到同一块主内存区域的时候，将可能导致各自的缓存数据不一样",-1),Nl=c("figure",null,[c("img",{alt:"image-20230824171115157",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230824171115157.png"})],-1),jl=c("p",null,[r("MESI（Modified Exclusive Shared Or Invalid）是一种广泛使用的"),c("strong",null,"支持写回策略的缓存一致性协议"),r("，CPU 中每个缓存行（caceh line）使用 4 种状态进行标记（使用额外的两位 bit 表示)：")],-1),Ml=c("ul",null,[c("li",null,[c("p",null,"M：被修改（Modified）"),c("p",null,"该缓存行只被缓存在该 CPU 的缓存中，并且是被修改过的，与主存中的数据不一致 (dirty)，该缓存行中的内存需要写回 (write back) 主存。该状态的数据再次被修改不会发送广播，因为其他核心的数据已经在第一次修改时失效一次"),c("p",null,"当被写回主存之后，该缓存行的状态会变成独享 (exclusive) 状态")]),c("li",null,[c("p",null,"E：独享的（Exclusive）"),c("p",null,"该缓存行只被缓存在该 CPU 的缓存中，是未被修改过的 (clear)，与主存中数据一致，修改数据不需要通知其他 CPU 核心，该状态可以在任何时刻有其它 CPU 读取该内存时变成共享状态 (shared)"),c("p",null,"当 CPU 修改该缓存行中内容时，该状态可以变成 Modified 状态")]),c("li",null,[c("p",null,"S：共享的（Shared）"),c("p",null,"该状态意味着该缓存行可能被多个 CPU 缓存，并且各个缓存中的数据与主存数据一致，当 CPU 修改该缓存行中，会向其它 CPU 核心广播一个请求，使该缓存行变成无效状态 (Invalid)，然后再更新当前 Cache 里的数据")]),c("li",null,[c("p",null,"I：无效的（Invalid）"),c("p",null,"该缓存是无效的，可能有其它 CPU 修改了该缓存行")])],-1),wl=c("p",null,"解决方法：各个处理器访问缓存时都遵循一些协议，在读写时要根据协议进行操作，协议主要有 MSI、MESI 等",-1),zl=c("hr",null,null,-1),Ll={id:"处理机制",tabindex:"-1"},Ul=c("p",null,"单核 CPU 处理器会自动保证基本内存操作的原子性",-1),Jl=c("p",null,"多核 CPU 处理器，每个 CPU 处理器内维护了一块内存，每个内核内部维护着一块缓存，当多线程并发读写时，就会出现缓存数据不一致的情况。处理器提供：",-1),Kl=c("ul",null,[c("li",null,[r("总线锁定：当处理器要操作共享变量时，在 BUS 总线上发出一个 LOCK 信号，其他处理器就无法操作这个共享变量，该操作会导致大量阻塞，从而增加系统的性能开销（"),c("strong",null,"平台级别的加锁"),r("）")]),c("li",null,"缓存锁定：当处理器对缓存中的共享变量进行了操作，其他处理器有嗅探机制，将各自缓存中的该共享变量的失效，读取时会重新从主内存中读取最新的数据，基于 MESI 缓存一致性协议来实现")],-1),Rl=c("p",null,"有如下两种情况处理器不会使用缓存锁定：",-1),Vl=c("ul",null,[c("li",null,[c("p",null,"当操作的数据跨多个缓存行，或没被缓存在处理器内部，则处理器会使用总线锁定")]),c("li",null,[c("p",null,"有些处理器不支持缓存锁定，比如：Intel 486 和 Pentium 处理器也会调用总线锁定")])],-1),$l=c("p",null,"总线机制：",-1),Ol=c("ul",null,[c("li",null,[c("p",null,[r("总线嗅探：每个处理器通过嗅探在总线上传播的数据来检查自己缓存值是否过期了，当处理器发现自己的缓存对应的内存地址的数据被修改，就"),c("strong",null,"将当前处理器的缓存行设置为无效状态"),r("，当处理器对这个数据进行操作时，会重新从内存中把数据读取到处理器缓存中")])]),c("li",null,[c("p",null,[r("总线风暴：当某个 CPU 核心更新了 Cache 中的数据，要把该事件广播通知到其他核心（"),c("strong",null,"写传播"),r("），CPU 需要每时每刻监听总线上的一切活动，但是不管别的核心的 Cache 是否缓存相同的数据，都需要发出一个广播事件，不断的从主内存嗅探和 CAS 循环，无效的交互会导致总线带宽达到峰值；因此不要大量使用 volatile 关键字，使用 volatile、syschonized 都需要根据实际场景")])])],-1),Gl=c("hr",null,null,-1),Wl={id:"volatile",tabindex:"-1"},ql={id:"同步机制",tabindex:"-1"},Zl=c("p",null,[r("volatile 是 Java 虚拟机提供的"),c("strong",null,"轻量级"),r("的同步机制（三大特性）")],-1),Hl=c("ul",null,[c("li",null,"保证可见性"),c("li",null,"不保证原子性"),c("li",null,"保证有序性（禁止指令重排）")],-1),Ql=c("p",null,"性能：volatile 修饰的变量进行读操作与普通变量几乎没什么差别，但是写操作相对慢一些，因为需要在本地代码中插入很多内存屏障来保证指令不会发生乱序执行，但是开销比锁要小",-1),Xl=c("p",null,"synchronized 无法禁止指令重排和处理器优化，为什么可以保证有序性可见性",-1),Yl=c("ul",null,[c("li",null,"加了锁之后，只能有一个线程获得到了锁，获得不到锁的线程就要阻塞，所以同一时间只有一个线程执行，相当于单线程，由于数据依赖性的存在，单线程的指令重排是没有问题的"),c("li",null,[r("线程加锁前，将"),c("strong",null,"清空工作内存"),r("中共享变量的值，使用共享变量时需要从主内存中重新读取最新的值；线程解锁前，必须把共享变量的最新值"),c("strong",null,"刷新到主内存"),r("中（JMM 内存交互章节有讲）")])],-1),ls=c("hr",null,null,-1),ss={id:"指令重排",tabindex:"-1"},os=c("p",null,"volatile 修饰的变量，可以禁用指令重排",-1),ns=c("p",null,"指令重排实例：",-1),as=c("ul",null,[c("li",null,[c("p",null,"example 1："),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"mySort"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\t"),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," x "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"11"),c("span",{style:{color:"#E1E4E8"}},";\t"),c("span",{style:{color:"#6A737D"}},"//语句1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\t"),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," y "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"12"),c("span",{style:{color:"#E1E4E8"}},";\t"),c("span",{style:{color:"#6A737D"}},"//语句2  谁先执行效果一样")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\tx "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," x "),c("span",{style:{color:"#F97583"}},"+"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"5"),c("span",{style:{color:"#E1E4E8"}},";\t"),c("span",{style:{color:"#6A737D"}},"//语句3")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\ty "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," x "),c("span",{style:{color:"#F97583"}},"*"),c("span",{style:{color:"#E1E4E8"}}," x;\t"),c("span",{style:{color:"#6A737D"}},"//语句4")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"mySort"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\t"),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," x "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"11"),c("span",{style:{color:"#24292E"}},";\t"),c("span",{style:{color:"#6A737D"}},"//语句1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\t"),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," y "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"12"),c("span",{style:{color:"#24292E"}},";\t"),c("span",{style:{color:"#6A737D"}},"//语句2  谁先执行效果一样")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\tx "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," x "),c("span",{style:{color:"#D73A49"}},"+"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"5"),c("span",{style:{color:"#24292E"}},";\t"),c("span",{style:{color:"#6A737D"}},"//语句3")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\ty "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," x "),c("span",{style:{color:"#D73A49"}},"*"),c("span",{style:{color:"#24292E"}}," x;\t"),c("span",{style:{color:"#6A737D"}},"//语句4")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})]),c("p",null,"执行顺序是：1 2 3 4、2 1 3 4、1 3 2 4"),c("p",null,"指令重排也有限制不会出现：4321，语句 4 需要依赖于 y 以及 x 的申明，因为存在数据依赖，无法首先执行")]),c("li",null,[c("p",null,"example 2："),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," num "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"0"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," ready "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"false"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#6A737D"}},"// 线程1 执行此方法")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"actor1"),c("span",{style:{color:"#E1E4E8"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}},"(ready) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    \tr.r1 "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," num "),c("span",{style:{color:"#F97583"}},"+"),c("span",{style:{color:"#E1E4E8"}}," num;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    } "),c("span",{style:{color:"#F97583"}},"else"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    \tr.r1 "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"1"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#6A737D"}},"// 线程2 执行此方法")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"actor2"),c("span",{style:{color:"#E1E4E8"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\tnum "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"\tready "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," num "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"0"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," ready "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"false"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#6A737D"}},"// 线程1 执行此方法")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"actor1"),c("span",{style:{color:"#24292E"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}},"(ready) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    \tr.r1 "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," num "),c("span",{style:{color:"#D73A49"}},"+"),c("span",{style:{color:"#24292E"}}," num;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    } "),c("span",{style:{color:"#D73A49"}},"else"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    \tr.r1 "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"1"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#6A737D"}},"// 线程2 执行此方法")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"actor2"),c("span",{style:{color:"#24292E"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\tnum "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"\tready "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})]),c("p",null,"情况一：线程 1 先执行，ready = false，结果为 r.r1 = 1"),c("p",null,"情况二：线程 2 先执行 num = 2，但还没执行 ready = true，线程 1 执行，结果为 r.r1 = 1"),c("p",null,"情况三：线程 2 先执行 num = 2 和 ready = true，线程 1 执行，进入 if 分支结果为 r.r1 = 4"),c("p",null,"情况四：线程 2 先执行 ready = true，切换到线程 1，进入 if 分支为 r.r1 = 0，再切回线程 2 执行 num = 2，发生指令重排")])],-1),es=c("hr",null,null,-1),ts={id:"底层原理",tabindex:"-1"},cs={id:"缓存一致-1",tabindex:"-1"},rs=c("p",null,[r("使用 volatile 修饰的共享变量，底层通过汇编 lock 前缀指令进行缓存锁定，在线程修改完共享变量后写回主存，其他的 CPU 核心上运行的线程通过 CPU 总线嗅探机制会修改其"),c("strong",null,"工作内存中的共享变量副本为失效状态"),r("，读取时会重新从主内存中读取最新的数据")],-1),ps=c("p",null,"lock 前缀指令就相当于内存屏障，Memory Barrier（Memory Fence）",-1),ys=c("ul",null,[c("li",null,"对 volatile 变量的写指令后会加入写屏障"),c("li",null,"对 volatile 变量的读指令前会加入读屏障")],-1),Es=c("p",null,"内存屏障有三个作用：",-1),is=c("ul",null,[c("li",null,"确保对内存的读-改-写操作原子执行"),c("li",null,"阻止屏障两侧的指令重排序"),c("li",null,"强制把缓存中的脏数据写回主内存，让缓存行中相应的数据失效")],-1),us=c("hr",null,null,-1),ds={id:"内存屏障",tabindex:"-1"},hs=c("p",null,[r("保证"),c("strong",null,"可见性"),r("：")],-1),Fs=c("ul",null,[c("li",null,[c("p",null,"写屏障（sfence，Store Barrier）保证在该屏障之前的，对共享变量的改动，都同步到主存当中"),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"actor2"),c("span",{style:{color:"#E1E4E8"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    num "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    ready "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},"; "),c("span",{style:{color:"#6A737D"}},"// ready 是 volatile 赋值带写屏障")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 写屏障 ▲▲▲")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"actor2"),c("span",{style:{color:"#24292E"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    num "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    ready "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},"; "),c("span",{style:{color:"#6A737D"}},"// ready 是 volatile 赋值带写屏障")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 写屏障 ▲▲▲")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})])]),c("li",null,[c("p",null,"读屏障（lfence，Load Barrier）保证在该屏障之后的，对共享变量的读取，从主存刷新变量值，加载的是主存中最新数据"),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"actor1"),c("span",{style:{color:"#E1E4E8"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 读屏障 ↓↓↓↓")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// ready 是 volatile 读取值带读屏障")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}},"(ready) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    \tr.r1 "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," num "),c("span",{style:{color:"#F97583"}},"+"),c("span",{style:{color:"#E1E4E8"}}," num;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    } "),c("span",{style:{color:"#F97583"}},"else"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    \tr.r1 "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"1"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"actor1"),c("span",{style:{color:"#24292E"}},"(I_Result r) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 读屏障 ↓↓↓↓")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// ready 是 volatile 读取值带读屏障")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}},"(ready) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    \tr.r1 "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," num "),c("span",{style:{color:"#D73A49"}},"+"),c("span",{style:{color:"#24292E"}}," num;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    } "),c("span",{style:{color:"#D73A49"}},"else"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    \tr.r1 "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"1"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})]),c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608145713.png",alt:"img",style:{zoom:"67%"}})]),c("li",null,[c("p",null,"全能屏障：mfence（modify/mix Barrier），兼具 sfence 和 lfence 的功能")])],-1),gs=c("p",null,[r("保证"),c("strong",null,"有序性"),r("：")],-1),ms=c("ul",null,[c("li",null,"写屏障会确保指令重排序时，不会将写屏障之前的代码排在写屏障之后"),c("li",null,"读屏障会确保指令重排序时，不会将读屏障之后的代码排在读屏障之前")],-1),Cs=c("figure",null,[c("img",{alt:"image-20230713210757338",class:"lazy","data-src":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230713210757338.png"})],-1),As=c("p",null,"不能解决指令交错：",-1),Ds=c("ul",null,[c("li",null,[c("p",null,"写屏障仅仅是保证之后的读能够读到最新的结果，但不能保证其他线程的读跑到写屏障之前")]),c("li",null,[c("p",null,"有序性的保证也只是保证了本线程内相关代码不被重排序"),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"volatile"),c("span",{style:{color:"#E1E4E8"}}," i "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"0"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Thread"),c("span",{style:{color:"#E1E4E8"}},"(() "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," {i"),c("span",{style:{color:"#F97583"}},"++"),c("span",{style:{color:"#E1E4E8"}},"});")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Thread"),c("span",{style:{color:"#E1E4E8"}},"(() "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," {i"),c("span",{style:{color:"#F97583"}},"--"),c("span",{style:{color:"#E1E4E8"}},"});")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"volatile"),c("span",{style:{color:"#24292E"}}," i "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"0"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Thread"),c("span",{style:{color:"#24292E"}},"(() "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," {i"),c("span",{style:{color:"#D73A49"}},"++"),c("span",{style:{color:"#24292E"}},"});")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Thread"),c("span",{style:{color:"#24292E"}},"(() "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," {i"),c("span",{style:{color:"#D73A49"}},"--"),c("span",{style:{color:"#24292E"}},"});")])])]),c("button",{class:"collapse"})]),c("p",null,"i++ 反编译后的指令："),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"0"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," iconst_1\t\t\t"),c("span",{style:{color:"#6A737D"}},"// 当int取值 -1~5 时，JVM采用iconst指令将常量压入栈中")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"1"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," istore_1\t\t\t"),c("span",{style:{color:"#6A737D"}},"// 将操作数栈顶数据弹出，存入局部变量表的 slot 1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," iinc\t\t"),c("span",{style:{color:"#79B8FF"}},"1"),c("span",{style:{color:"#E1E4E8"}},", "),c("span",{style:{color:"#79B8FF"}},"1")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"0"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," iconst_1\t\t\t"),c("span",{style:{color:"#6A737D"}},"// 当int取值 -1~5 时，JVM采用iconst指令将常量压入栈中")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"1"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," istore_1\t\t\t"),c("span",{style:{color:"#6A737D"}},"// 将操作数栈顶数据弹出，存入局部变量表的 slot 1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," iinc\t\t"),c("span",{style:{color:"#005CC5"}},"1"),c("span",{style:{color:"#24292E"}},", "),c("span",{style:{color:"#005CC5"}},"1")])])]),c("button",{class:"collapse"})]),c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230713212314498.png",alt:"image-20230713212314498",style:{zoom:"67%"}})])],-1),bs=c("hr",null,null,-1),vs={id:"交互规则",tabindex:"-1"},fs=c("p",null,"对于 volatile 修饰的变量：",-1),ks=c("ul",null,[c("li",null,"线程对变量的 use 与 load、read 操作是相关联的，所以变量使用前必须先从主存加载"),c("li",null,"线程对变量的 assign 与 store、write 操作是相关联的，所以变量使用后必须同步至主存"),c("li",null,"线程 1 和线程 2 谁先对变量执行 read 操作，就会先进行 write 操作，防止指令重排")],-1),Bs=c("hr",null,null,-1),Ss={id:"双端检锁",tabindex:"-1"},xs={id:"检锁机制",tabindex:"-1"},Ps=c("p",null,"Double-Checked Locking：双端检锁机制",-1),Ts=c("p",null,"DCL（双端检锁）机制不一定是线程安全的，原因是有指令重排的存在，加入 volatile 可以禁止指令重排",-1),_s=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"final"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton"),c("span",{style:{color:"#E1E4E8"}},"() { }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    ")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," Singleton "),c("span",{style:{color:"#B392F0"}},"getInstance"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}},"(INSTANCE "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},") { "),c("span",{style:{color:"#6A737D"}},"// t2，这里的判断不是线程安全的")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#6A737D"}},"// 首次访问会同步，而之后的使用没有 synchronized")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"synchronized"),c("span",{style:{color:"#E1E4E8"}},"(Singleton.class) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                "),c("span",{style:{color:"#6A737D"}},"// 这里是线程安全的判断，防止其他线程在当前线程等待锁的期间完成了初始化")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (INSTANCE "),c("span",{style:{color:"#F97583"}},"=="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},") { ")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                    INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Singleton"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"final"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton"),c("span",{style:{color:"#24292E"}},"() { }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    ")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," Singleton "),c("span",{style:{color:"#6F42C1"}},"getInstance"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}},"(INSTANCE "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},") { "),c("span",{style:{color:"#6A737D"}},"// t2，这里的判断不是线程安全的")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#6A737D"}},"// 首次访问会同步，而之后的使用没有 synchronized")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"synchronized"),c("span",{style:{color:"#24292E"}},"(Singleton.class) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                "),c("span",{style:{color:"#6A737D"}},"// 这里是线程安全的判断，防止其他线程在当前线程等待锁的期间完成了初始化")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (INSTANCE "),c("span",{style:{color:"#D73A49"}},"=="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},") { ")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                    INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Singleton"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}}," INSTANCE;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})],-1),Is=c("p",null,"不锁 INSTANCE 的原因：",-1),Ns=c("ul",null,[c("li",null,"INSTANCE 要重新赋值"),c("li",null,"INSTANCE 是 null，线程加锁之前需要获取对象的引用，设置对象头，null 没有引用")],-1),js=c("p",null,"实现特点：",-1),Ms=c("ul",null,[c("li",null,"懒惰初始化"),c("li",null,"首次使用 getInstance() 才使用 synchronized 加锁，后续使用时无需加锁"),c("li",null,"第一个 if 使用了 INSTANCE 变量，是在同步块之外，但在多线程环境下会产生问题")],-1),ws=c("hr",null,null,-1),zs={id:"dcl问题",tabindex:"-1"},Ls=c("p",null,"getInstance 方法对应的字节码为：",-1),Us=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"0"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," \tgetstatic \t\t#"),c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#E1E4E8"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"3"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," \tifnonnull \t\t"),c("span",{style:{color:"#79B8FF"}},"37")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"6"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," \tldc \t\t\t#"),c("span",{style:{color:"#79B8FF"}},"3"),c("span",{style:{color:"#E1E4E8"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// class test/Singleton")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"8"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," \tdup")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"9"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," \tastore_0")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"10"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," monitorenter")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"11"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," getstatic \t\t#"),c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#E1E4E8"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"14"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," ifnonnull "),c("span",{style:{color:"#79B8FF"}},"27")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"17"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," \t\t\t#3 \t\t"),c("span",{style:{color:"#6A737D"}},"// class test/Singleton")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"20"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," dup")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"21"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," invokespecial \t#"),c("span",{style:{color:"#79B8FF"}},"4"),c("span",{style:{color:"#E1E4E8"}}," \t\t"),c("span",{style:{color:"#6A737D"}},'// Method "<init>":()V')]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"24"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," putstatic \t\t#"),c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#E1E4E8"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"27"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," aload_0")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"28"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," monitorexit")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"29"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"goto"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"37")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"32"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," astore_1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"33"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," aload_0")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"34"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," monitorexit")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"35"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," aload_1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"36"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," athrow")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"37"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," getstatic \t\t#"),c("span",{style:{color:"#79B8FF"}},"2"),c("span",{style:{color:"#E1E4E8"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#79B8FF"}},"40"),c("span",{style:{color:"#F97583"}},":"),c("span",{style:{color:"#E1E4E8"}}," areturn")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"0"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," \tgetstatic \t\t#"),c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#24292E"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"3"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," \tifnonnull \t\t"),c("span",{style:{color:"#005CC5"}},"37")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"6"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," \tldc \t\t\t#"),c("span",{style:{color:"#005CC5"}},"3"),c("span",{style:{color:"#24292E"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// class test/Singleton")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"8"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," \tdup")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"9"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," \tastore_0")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"10"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," monitorenter")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"11"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," getstatic \t\t#"),c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#24292E"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"14"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," ifnonnull "),c("span",{style:{color:"#005CC5"}},"27")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"17"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," \t\t\t#3 \t\t"),c("span",{style:{color:"#6A737D"}},"// class test/Singleton")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"20"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," dup")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"21"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," invokespecial \t#"),c("span",{style:{color:"#005CC5"}},"4"),c("span",{style:{color:"#24292E"}}," \t\t"),c("span",{style:{color:"#6A737D"}},'// Method "<init>":()V')]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"24"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," putstatic \t\t#"),c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#24292E"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"27"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," aload_0")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"28"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," monitorexit")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"29"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"goto"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"37")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"32"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," astore_1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"33"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," aload_0")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"34"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," monitorexit")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"35"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," aload_1")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"36"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," athrow")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"37"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," getstatic \t\t#"),c("span",{style:{color:"#005CC5"}},"2"),c("span",{style:{color:"#24292E"}}," \t\t"),c("span",{style:{color:"#6A737D"}},"// Field INSTANCE:Ltest/Singleton;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#005CC5"}},"40"),c("span",{style:{color:"#D73A49"}},":"),c("span",{style:{color:"#24292E"}}," areturn")])])]),c("button",{class:"collapse"})],-1),Js=c("ul",null,[c("li",null,"17 表示创建对象，将对象引用入栈 // new Singleton"),c("li",null,"20 表示复制一份对象引用 // 引用地址"),c("li",null,"21 表示利用一个对象引用，调用构造方法"),c("li",null,"24 表示利用一个对象引用，赋值给 static INSTANCE")],-1),Ks=c("p",null,[c("strong",null,"步骤 21 和 24 之间不存在数据依赖关系"),r("，而且无论重排前后，程序的执行结果在单线程中并没有改变，因此这种重排优化是允许的")],-1),Rs=c("p",null,"也许 jvm 会优化为：先执行 24，再执行 21。如果两个线程 t1，t2 按如下时间序列执行：",-1),Vs=c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230713215804212.png",alt:"image-20230713215804212",style:{zoom:"67%"}},null,-1),$s=c("blockquote",null,[c("p",null,"关键在于 0: getstatic 这行代码在 monitor 控制之外，它就像之前举例中不守规则的人，可以越过 monitor 读取INSTANCE 变量的值；这时 t1 还未完全将构造方法执行完毕，如果在构造方法中要执行很多初始化操作，那么 t2 拿到的是将是一个未初始化完毕的单例；对 INSTANCE 使用 volatile 修饰即可，可以禁用指令重排，但要注意在 JDK 5 以上的版本的 volatile 才会真正有效"),c("p",null,"synchronized同步的代码块，具有排他性，一次只能被一个线程拥有，所以synchronized保证同一时刻，代码是单线程执行的。"),c("p",null,"因为as-if-serial语义的存在，单线程的程序能保证最终结果是有序的，但是不保证不会指令重排。"),c("p",null,"所以synchronized保证的有序是执行结果的有序性，而不是防止指令重排的有序性。synchronized确实可以保证共享变量的原子、可见、有序性，前提是共享变量完全交由synchronized来管理，不能留一部分出去，不然就脱离了synchronized的管理了")],-1),Os=c("hr",null,null,-1),Gs={id:"解决方法",tabindex:"-1"},Ws=c("p",null,"指令重排只会保证串行语义的执行一致性（单线程），但并不会保证多线程间的语义一致性",-1),qs=c("p",null,"引入 volatile，来保证出现指令重排的问题，从而保证单例模式的线程安全性：",-1),Zs=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"volatile"),c("span",{style:{color:"#E1E4E8"}}," SingletonDemo INSTANCE "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"null"),c("span",{style:{color:"#E1E4E8"}},";")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"volatile"),c("span",{style:{color:"#24292E"}}," SingletonDemo INSTANCE "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"null"),c("span",{style:{color:"#24292E"}},";")])])]),c("button",{class:"collapse"})],-1),Hs=c("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230713215851770.png",alt:"image-20230713215851770",style:{zoom:"67%"}},null,-1),Qs=c("hr",null,null,-1),Xs={id:"ha-be",tabindex:"-1"},Ys=c("p",null,"happens-before 先行发生",-1),lo=c("p",null,"Java 内存模型具备一些先天的“有序性”，即不需要通过任何同步手段（volatile、synchronized 等）就能够得到安全的保证，这个通常也称为 happens-before 原则，它是可见性与有序性的一套规则总结，JMM 并不能保证一个线程的可见性和有序性，不符合 happens-before 规则",-1),so=c("p",null,"happens-before 规则：",-1),oo=c("ol",null,[c("li",null,[c("p",null,"程序次序规则 (Program Order Rule)：一个线程内，逻辑上书写在前面的操作先行发生于书写在后面的操作 ，因为多个操作之间有先后依赖关系，则不允许对这些操作进行重排序")]),c("li",null,[c("p",null,"锁定规则 (Monitor Lock Rule)：一个 unlock 操作先行发生于后面（时间的先后）对同一个锁的 lock 操作，所以线程解锁 之前对变量 m 的写（解锁前会刷新到主内存中），对于接下来对 m 加锁的其它线程对该变量的读可见")]),c("li",null,[c("p",null,[c("strong",null,"volatile 变量规则"),r(" (Volatile Variable Rule)：对 volatile 变量的写操作先行发生于后面对这个变量的读")])]),c("li",null,[c("p",null,"传递规则 (Transitivity)：具有传递性，如果操作 A 先行发生于操作 B，而操作 B 又先行发生于操作 C，则可以得出操作 A 先行发生于操作 C")]),c("li",null,[c("p",null,"线程启动规则 (Thread Start Rule)：Thread 对象的 start()方 法先行发生于此线程中的每一个操作"),c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"int"),c("span",{style:{color:"#E1E4E8"}}," x "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"10"),c("span",{style:{color:"#E1E4E8"}},";"),c("span",{style:{color:"#6A737D"}},"//线程 start 前对变量的写，对该线程开始后对该变量的读可见")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Thread"),c("span",{style:{color:"#E1E4E8"}},"(()"),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}},"{\tSystem.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"(x);\t},"),c("span",{style:{color:"#9ECBFF"}},'"t1"'),c("span",{style:{color:"#E1E4E8"}},")."),c("span",{style:{color:"#B392F0"}},"start"),c("span",{style:{color:"#E1E4E8"}},"();")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"int"),c("span",{style:{color:"#24292E"}}," x "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"10"),c("span",{style:{color:"#24292E"}},";"),c("span",{style:{color:"#6A737D"}},"//线程 start 前对变量的写，对该线程开始后对该变量的读可见")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Thread"),c("span",{style:{color:"#24292E"}},"(()"),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}},"{\tSystem.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"(x);\t},"),c("span",{style:{color:"#032F62"}},'"t1"'),c("span",{style:{color:"#24292E"}},")."),c("span",{style:{color:"#6F42C1"}},"start"),c("span",{style:{color:"#24292E"}},"();")])])]),c("button",{class:"collapse"})])]),c("li",null,[c("p",null,"线程中断规则 (Thread Interruption Rule)：对线程 interrupt() 方法的调用先行发生于被中断线程的代码检测到中断事件的发生")]),c("li",null,[c("p",null,"线程终止规则 (Thread Termination Rule)：线程中所有的操作都先行发生于线程的终止检测，可以通过 Thread.join() 方法结束、Thread.isAlive() 的返回值手段检测到线程已经终止执行")]),c("li",null,[c("p",null,"对象终结规则（Finaizer Rule）：一个对象的初始化完成（构造函数执行结束）先行发生于它的 finalize() 方法的开始")])],-1),no=c("hr",null,null,-1),ao={id:"设计模式",tabindex:"-1"},eo={id:"终止模式",tabindex:"-1"},to=c("p",null,"终止模式之两阶段终止模式：停止标记用 volatile 是为了保证该变量在多个线程之间的可见性",-1),co=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"TwoPhaseTermination"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 监控线程")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," Thread monitor;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 停止标记")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"volatile"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," stop "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"false"),c("span",{style:{color:"#E1E4E8"}},";;")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 启动监控线程")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"start"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        monitor "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"Thread"),c("span",{style:{color:"#E1E4E8"}},"(() "),c("span",{style:{color:"#F97583"}},"->"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"while"),c("span",{style:{color:"#E1E4E8"}}," ("),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                Thread thread "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," Thread."),c("span",{style:{color:"#B392F0"}},"currentThread"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (stop) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                    System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"后置处理"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                    "),c("span",{style:{color:"#F97583"}},"break"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                "),c("span",{style:{color:"#F97583"}},"try"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                    Thread."),c("span",{style:{color:"#B392F0"}},"sleep"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#79B8FF"}},"1000"),c("span",{style:{color:"#E1E4E8"}},");"),c("span",{style:{color:"#6A737D"}},"// 睡眠")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                    System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"(thread."),c("span",{style:{color:"#B392F0"}},"getName"),c("span",{style:{color:"#E1E4E8"}},"() "),c("span",{style:{color:"#F97583"}},"+"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#9ECBFF"}},'"执行监控记录"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                } "),c("span",{style:{color:"#F97583"}},"catch"),c("span",{style:{color:"#E1E4E8"}}," (InterruptedException "),c("span",{style:{color:"#FFAB70"}},"e"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                   \tSystem.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"被打断，退出睡眠"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        });")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        monitor."),c("span",{style:{color:"#B392F0"}},"start"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 停止监控线程")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"stop"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        stop "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        monitor."),c("span",{style:{color:"#B392F0"}},"interrupt"),c("span",{style:{color:"#E1E4E8"}},"();"),c("span",{style:{color:"#6A737D"}},"// 让线程尽快退出Timed Waiting")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#6A737D"}},"// 测试")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"static"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"main"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#F97583"}},"String"),c("span",{style:{color:"#E1E4E8"}},"[] args) throws InterruptedException {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    TwoPhaseTermination tpt "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"new"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"TwoPhaseTermination"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    tpt."),c("span",{style:{color:"#B392F0"}},"start"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    Thread."),c("span",{style:{color:"#B392F0"}},"sleep"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#79B8FF"}},"3500"),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"停止监控"'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    tpt."),c("span",{style:{color:"#B392F0"}},"stop"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"TwoPhaseTermination"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 监控线程")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," Thread monitor;")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 停止标记")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"volatile"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," stop "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"false"),c("span",{style:{color:"#24292E"}},";;")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 启动监控线程")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"start"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        monitor "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"Thread"),c("span",{style:{color:"#24292E"}},"(() "),c("span",{style:{color:"#D73A49"}},"->"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"while"),c("span",{style:{color:"#24292E"}}," ("),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                Thread thread "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," Thread."),c("span",{style:{color:"#6F42C1"}},"currentThread"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (stop) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                    System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"后置处理"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                    "),c("span",{style:{color:"#D73A49"}},"break"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                "),c("span",{style:{color:"#D73A49"}},"try"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                    Thread."),c("span",{style:{color:"#6F42C1"}},"sleep"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#005CC5"}},"1000"),c("span",{style:{color:"#24292E"}},");"),c("span",{style:{color:"#6A737D"}},"// 睡眠")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                    System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"(thread."),c("span",{style:{color:"#6F42C1"}},"getName"),c("span",{style:{color:"#24292E"}},"() "),c("span",{style:{color:"#D73A49"}},"+"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#032F62"}},'"执行监控记录"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                } "),c("span",{style:{color:"#D73A49"}},"catch"),c("span",{style:{color:"#24292E"}}," (InterruptedException "),c("span",{style:{color:"#E36209"}},"e"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                   \tSystem.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"被打断，退出睡眠"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"                }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        });")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        monitor."),c("span",{style:{color:"#6F42C1"}},"start"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"}),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 停止监控线程")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"stop"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        stop "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        monitor."),c("span",{style:{color:"#6F42C1"}},"interrupt"),c("span",{style:{color:"#24292E"}},"();"),c("span",{style:{color:"#6A737D"}},"// 让线程尽快退出Timed Waiting")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#6A737D"}},"// 测试")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"static"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"main"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#D73A49"}},"String"),c("span",{style:{color:"#24292E"}},"[] args) throws InterruptedException {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    TwoPhaseTermination tpt "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"new"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"TwoPhaseTermination"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    tpt."),c("span",{style:{color:"#6F42C1"}},"start"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    Thread."),c("span",{style:{color:"#6F42C1"}},"sleep"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#005CC5"}},"3500"),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"停止监控"'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    tpt."),c("span",{style:{color:"#6F42C1"}},"stop"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})],-1),ro=c("hr",null,null,-1),po={id:"balking",tabindex:"-1"},yo=c("p",null,"Balking （犹豫）模式用在一个线程发现另一个线程或本线程已经做了某一件相同的事，那么本线程就无需再做了，直接结束返回",-1),Eo=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"MonitorService"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#6A737D"}},"// 用来表示是否已经有线程已经在执行启动了")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"volatile"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," starting "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"false"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"start"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        System.out."),c("span",{style:{color:"#B392F0"}},"println"),c("span",{style:{color:"#E1E4E8"}},"("),c("span",{style:{color:"#9ECBFF"}},'"尝试启动监控线程..."'),c("span",{style:{color:"#E1E4E8"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"synchronized"),c("span",{style:{color:"#E1E4E8"}}," ("),c("span",{style:{color:"#79B8FF"}},"this"),c("span",{style:{color:"#E1E4E8"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (starting) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            \t"),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            starting "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#6A737D"}},"// 真正启动监控线程...")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"MonitorService"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#6A737D"}},"// 用来表示是否已经有线程已经在执行启动了")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"volatile"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," starting "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"false"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"start"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        System.out."),c("span",{style:{color:"#6F42C1"}},"println"),c("span",{style:{color:"#24292E"}},"("),c("span",{style:{color:"#032F62"}},'"尝试启动监控线程..."'),c("span",{style:{color:"#24292E"}},");")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"synchronized"),c("span",{style:{color:"#24292E"}}," ("),c("span",{style:{color:"#005CC5"}},"this"),c("span",{style:{color:"#24292E"}},") {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (starting) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            \t"),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            starting "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#6A737D"}},"// 真正启动监控线程...")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})],-1),io=c("p",null,"对比保护性暂停模式：保护性暂停模式用在一个线程等待另一个线程的执行结果，当条件不满足时线程等待",-1),uo=c("p",null,"例子：希望 doInit() 方法仅被调用一次，下面的实现出现的问题：",-1),ho=c("ul",null,[c("li",null,"当 t1 线程进入 init() 准备 doInit()，t2 线程进来，initialized 还为f alse，则 t2 就又初始化一次"),c("li",null,"volatile 适合一个线程写，其他线程读的情况，这个代码需要加锁")],-1),Fo=c("div",{style:{"max-height":"300px"},class:"language-java"},[c("button",{title:"Copy Code",class:"copy"}),c("span",{class:"lang"},"java"),c("pre",{class:"shiki github-dark vp-code-dark"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#F97583"}},"public"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"class"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"TestVolatile"),c("span",{style:{color:"#E1E4E8"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"volatile"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"boolean"),c("span",{style:{color:"#E1E4E8"}}," initialized "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"false"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    ")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"init"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        "),c("span",{style:{color:"#F97583"}},"if"),c("span",{style:{color:"#E1E4E8"}}," (initialized) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"            "),c("span",{style:{color:"#F97583"}},"return"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    \t"),c("span",{style:{color:"#B392F0"}},"doInit"),c("span",{style:{color:"#E1E4E8"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    \tinitialized "),c("span",{style:{color:"#F97583"}},"="),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#79B8FF"}},"true"),c("span",{style:{color:"#E1E4E8"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    "),c("span",{style:{color:"#F97583"}},"private"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#F97583"}},"void"),c("span",{style:{color:"#E1E4E8"}}," "),c("span",{style:{color:"#B392F0"}},"doInit"),c("span",{style:{color:"#E1E4E8"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#E1E4E8"}},"}")])])]),c("pre",{class:"shiki github-light vp-code-light"},[c("code",null,[c("span",{class:"line"},[c("span",{style:{color:"#D73A49"}},"public"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"class"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"TestVolatile"),c("span",{style:{color:"#24292E"}}," {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"volatile"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"boolean"),c("span",{style:{color:"#24292E"}}," initialized "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"false"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    ")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"init"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        "),c("span",{style:{color:"#D73A49"}},"if"),c("span",{style:{color:"#24292E"}}," (initialized) {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"            "),c("span",{style:{color:"#D73A49"}},"return"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"        }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    \t"),c("span",{style:{color:"#6F42C1"}},"doInit"),c("span",{style:{color:"#24292E"}},"();")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    \tinitialized "),c("span",{style:{color:"#D73A49"}},"="),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#005CC5"}},"true"),c("span",{style:{color:"#24292E"}},";")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    "),c("span",{style:{color:"#D73A49"}},"private"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#D73A49"}},"void"),c("span",{style:{color:"#24292E"}}," "),c("span",{style:{color:"#6F42C1"}},"doInit"),c("span",{style:{color:"#24292E"}},"() {")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"    }")]),r("\n"),c("span",{class:"line"},[c("span",{style:{color:"#24292E"}},"}")])])]),c("button",{class:"collapse"})],-1),go=c("blockquote",null,[c("p",null,"volatile不能保证代码的原子性，synchronized就可以")],-1),mo=c("hr",null,null,-1);const Co=l(d,[["render",function(l,s,o,i,u,d){const Co=E,Ao=e;return t(),n(Ao,{frontmatter:u.frontmatter,data:u.data},{"main-content-md":a((()=>[c("h1",h,[r("并发编程整理版 "),p(Co,{class:"header-anchor",href:"#并发编程整理版","aria-label":'Permalink to "并发编程整理版"'},{default:a((()=>[r("​")])),_:1})]),c("p",null,[r("参考视频："),p(Co,{href:"https://www.bilibili.com/video/BV16J411h7Rd",target:"_blank",rel:"noreferrer"},{default:a((()=>[r("https://www.bilibili.com/video/BV16J411h7Rd")])),_:1})]),F,c("h2",g,[r("内存 "),p(Co,{class:"header-anchor",href:"#内存","aria-label":'Permalink to "内存"'},{default:a((()=>[r("​")])),_:1})]),c("h3",m,[r("JMM "),p(Co,{class:"header-anchor",href:"#jmm","aria-label":'Permalink to "JMM"'},{default:a((()=>[r("​")])),_:1})]),c("h4",C,[r("内存模型 "),p(Co,{class:"header-anchor",href:"#内存模型","aria-label":'Permalink to "内存模型"'},{default:a((()=>[r("​")])),_:1})]),A,D,b,v,f,k,B,S,x,P,c("h4",T,[r("内存交互 "),p(Co,{class:"header-anchor",href:"#内存交互","aria-label":'Permalink to "内存交互"'},{default:a((()=>[r("​")])),_:1})]),_,I,N,j,c("p",null,[r("参考文章："),p(Co,{href:"https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20%E5%B9%B6%E5%8F%91.md",target:"_blank",rel:"noreferrer"},{default:a((()=>[r("https://github.com/CyC2018/CS-Notes/blob/master/notes/Java 并发.md")])),_:1})]),M,c("h4",w,[r("三大特性 "),p(Co,{class:"header-anchor",href:"#三大特性","aria-label":'Permalink to "三大特性"'},{default:a((()=>[r("​")])),_:1})]),c("h5",z,[r("可见性 "),p(Co,{class:"header-anchor",href:"#可见性","aria-label":'Permalink to "可见性"'},{default:a((()=>[r("​")])),_:1})]),L,U,J,K,R,V,$,O,G,W,q,Z,c("h5",H,[r("原子性 "),p(Co,{class:"header-anchor",href:"#原子性","aria-label":'Permalink to "原子性"'},{default:a((()=>[r("​")])),_:1})]),Q,X,Y,ll,c("h5",sl,[r("有序性 "),p(Co,{class:"header-anchor",href:"#有序性","aria-label":'Permalink to "有序性"'},{default:a((()=>[r("​")])),_:1})]),ol,nl,al,el,tl,cl,rl,pl,yl,c("h3",El,[r("cache "),p(Co,{class:"header-anchor",href:"#cache","aria-label":'Permalink to "cache"'},{default:a((()=>[r("​")])),_:1})]),c("h4",il,[r("缓存机制 "),p(Co,{class:"header-anchor",href:"#缓存机制","aria-label":'Permalink to "缓存机制"'},{default:a((()=>[r("​")])),_:1})]),c("h5",ul,[r("缓存结构 "),p(Co,{class:"header-anchor",href:"#缓存结构","aria-label":'Permalink to "缓存结构"'},{default:a((()=>[r("​")])),_:1})]),dl,hl,Fl,gl,c("h5",ml,[r("缓存使用 "),p(Co,{class:"header-anchor",href:"#缓存使用","aria-label":'Permalink to "缓存使用"'},{default:a((()=>[r("​")])),_:1})]),Cl,Al,Dl,c("h4",bl,[r("伪共享 "),p(Co,{class:"header-anchor",href:"#伪共享","aria-label":'Permalink to "伪共享"'},{default:a((()=>[r("​")])),_:1})]),vl,fl,kl,Bl,Sl,xl,Pl,Tl,c("h4",_l,[r("缓存一致 "),p(Co,{class:"header-anchor",href:"#缓存一致","aria-label":'Permalink to "缓存一致"'},{default:a((()=>[r("​")])),_:1})]),Il,Nl,jl,Ml,wl,zl,c("h4",Ll,[r("处理机制 "),p(Co,{class:"header-anchor",href:"#处理机制","aria-label":'Permalink to "处理机制"'},{default:a((()=>[r("​")])),_:1})]),Ul,Jl,Kl,Rl,Vl,$l,Ol,Gl,c("h3",Wl,[r("volatile "),p(Co,{class:"header-anchor",href:"#volatile","aria-label":'Permalink to "volatile"'},{default:a((()=>[r("​")])),_:1})]),c("h4",ql,[r("同步机制 "),p(Co,{class:"header-anchor",href:"#同步机制","aria-label":'Permalink to "同步机制"'},{default:a((()=>[r("​")])),_:1})]),Zl,Hl,Ql,Xl,Yl,ls,c("h4",ss,[r("指令重排 "),p(Co,{class:"header-anchor",href:"#指令重排","aria-label":'Permalink to "指令重排"'},{default:a((()=>[r("​")])),_:1})]),os,ns,as,es,c("h4",ts,[r("底层原理 "),p(Co,{class:"header-anchor",href:"#底层原理","aria-label":'Permalink to "底层原理"'},{default:a((()=>[r("​")])),_:1})]),c("h5",cs,[r("缓存一致 "),p(Co,{class:"header-anchor",href:"#缓存一致-1","aria-label":'Permalink to "缓存一致"'},{default:a((()=>[r("​")])),_:1})]),rs,ps,ys,Es,is,us,c("h5",ds,[r("内存屏障 "),p(Co,{class:"header-anchor",href:"#内存屏障","aria-label":'Permalink to "内存屏障"'},{default:a((()=>[r("​")])),_:1})]),hs,Fs,gs,ms,Cs,As,Ds,bs,c("h5",vs,[r("交互规则 "),p(Co,{class:"header-anchor",href:"#交互规则","aria-label":'Permalink to "交互规则"'},{default:a((()=>[r("​")])),_:1})]),fs,ks,Bs,c("h4",Ss,[r("双端检锁 "),p(Co,{class:"header-anchor",href:"#双端检锁","aria-label":'Permalink to "双端检锁"'},{default:a((()=>[r("​")])),_:1})]),c("h5",xs,[r("检锁机制 "),p(Co,{class:"header-anchor",href:"#检锁机制","aria-label":'Permalink to "检锁机制"'},{default:a((()=>[r("​")])),_:1})]),Ps,Ts,_s,Is,Ns,js,Ms,ws,c("h5",zs,[r("DCL问题 "),p(Co,{class:"header-anchor",href:"#dcl问题","aria-label":'Permalink to "DCL问题"'},{default:a((()=>[r("​")])),_:1})]),Ls,Us,Js,Ks,Rs,Vs,$s,Os,c("h5",Gs,[r("解决方法 "),p(Co,{class:"header-anchor",href:"#解决方法","aria-label":'Permalink to "解决方法"'},{default:a((()=>[r("​")])),_:1})]),Ws,qs,Zs,Hs,Qs,c("h3",Xs,[r("ha-be "),p(Co,{class:"header-anchor",href:"#ha-be","aria-label":'Permalink to "ha-be"'},{default:a((()=>[r("​")])),_:1})]),Ys,lo,so,oo,no,c("h3",ao,[r("设计模式 "),p(Co,{class:"header-anchor",href:"#设计模式","aria-label":'Permalink to "设计模式"'},{default:a((()=>[r("​")])),_:1})]),c("h4",eo,[r("终止模式 "),p(Co,{class:"header-anchor",href:"#终止模式","aria-label":'Permalink to "终止模式"'},{default:a((()=>[r("​")])),_:1})]),to,co,ro,c("h4",po,[r("Balking "),p(Co,{class:"header-anchor",href:"#balking","aria-label":'Permalink to "Balking"'},{default:a((()=>[r("​")])),_:1})]),yo,Eo,io,uo,ho,Fo,go,mo])),"main-header":a((()=>[y(l.$slots,"main-header")])),"main-header-after":a((()=>[y(l.$slots,"main-header-after")])),"main-nav":a((()=>[y(l.$slots,"main-nav")])),"main-content":a((()=>[y(l.$slots,"main-content")])),"main-content-after":a((()=>[y(l.$slots,"main-content-after")])),"main-nav-before":a((()=>[y(l.$slots,"main-nav-before")])),"main-nav-after":a((()=>[y(l.$slots,"main-nav-after")])),comment:a((()=>[y(l.$slots,"comment")])),footer:a((()=>[y(l.$slots,"footer")])),aside:a((()=>[y(l.$slots,"aside")])),"aside-custom":a((()=>[y(l.$slots,"aside-custom")])),default:a((()=>[y(l.$slots,"default")])),_:3},8,["frontmatter","data"])}]]);export{i as __pageData,Co as default};
