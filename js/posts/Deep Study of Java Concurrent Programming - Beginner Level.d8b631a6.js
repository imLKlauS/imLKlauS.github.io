import{_ as l,h as s,p as n,j as o,k as a,l as e,m as t,s as r,t as c,v as p,q as E,x as y}from"../../assets/app-56b13812.js";import"../@vueuse/@vueuse.2d040ebb.js";import"../animejs/animejs.7aacf446.js";const i=JSON.parse('{"title":"深入学习Java并发编程-初级篇","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-v9x6gm_1920x1080.png","title":"深入学习Java并发编程-初级篇","top":269,"author":"imklaus","tags":["Thread","Runnable","FutureTask","join","interrupt"],"categories":"Java","date":"2023-07-07T22:52:11.000Z","outline":"deep"},"headers":[{"level":2,"title":"一、进程与线程","slug":"一、进程与线程","link":"#一、进程与线程","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"二者对比","slug":"二者对比","link":"#二者对比","children":[]},{"level":3,"title":"2、并发与并行","slug":"_2、并发与并行","link":"#_2、并发与并行","children":[]},{"level":3,"title":"3、应用","slug":"_3、应用","link":"#_3、应用","children":[]}]},{"level":2,"title":"二、Java 线程","slug":"二、java-线程","link":"#二、java-线程","children":[{"level":3,"title":"1、创建一个线程（非主线程）","slug":"_1、创建一个线程-非主线程","link":"#_1、创建一个线程-非主线程","children":[]},{"level":3,"title":"2、原理之线程运行","slug":"_2、原理之线程运行","link":"#_2、原理之线程运行","children":[]},{"level":3,"title":"3、常用方法","slug":"_3、常用方法","link":"#_3、常用方法","children":[]},{"level":3,"title":"4、线程的状态","slug":"_4、线程的状态","link":"#_4、线程的状态","children":[]}]}],"relativePath":"pages/posts/Deep Study of Java Concurrent Programming - Beginner Level.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Deep Study of Java Concurrent Programming - Beginner Level.md","lastUpdated":null}'),u=JSON.parse('{"title":"深入学习Java并发编程-初级篇","description":"","frontmatter":{"cover":"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/wallhaven-v9x6gm_1920x1080.png","title":"深入学习Java并发编程-初级篇","top":269,"author":"imklaus","tags":["Thread","Runnable","FutureTask","join","interrupt"],"categories":"Java","date":"2023-07-07T22:52:11.000Z","outline":"deep"},"headers":[{"level":2,"title":"一、进程与线程","slug":"一、进程与线程","link":"#一、进程与线程","children":[{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]},{"level":3,"title":"线程","slug":"线程","link":"#线程","children":[]},{"level":3,"title":"二者对比","slug":"二者对比","link":"#二者对比","children":[]},{"level":3,"title":"2、并发与并行","slug":"_2、并发与并行","link":"#_2、并发与并行","children":[]},{"level":3,"title":"3、应用","slug":"_3、应用","link":"#_3、应用","children":[]}]},{"level":2,"title":"二、Java 线程","slug":"二、java-线程","link":"#二、java-线程","children":[{"level":3,"title":"1、创建一个线程（非主线程）","slug":"_1、创建一个线程-非主线程","link":"#_1、创建一个线程-非主线程","children":[]},{"level":3,"title":"2、原理之线程运行","slug":"_2、原理之线程运行","link":"#_2、原理之线程运行","children":[]},{"level":3,"title":"3、常用方法","slug":"_3、常用方法","link":"#_3、常用方法","children":[]},{"level":3,"title":"4、线程的状态","slug":"_4、线程的状态","link":"#_4、线程的状态","children":[]}]}],"relativePath":"pages/posts/Deep Study of Java Concurrent Programming - Beginner Level.md","path":"D:\\\\Learning\\\\myblog\\\\valaxy-blog\\\\imklaus.github.io-main\\\\pages\\\\posts\\\\Deep Study of Java Concurrent Programming - Beginner Level.md","lastUpdated":null}'),d={name:"pages/posts/Deep Study of Java Concurrent Programming - Beginner Level.md",data:()=>({data:u,frontmatter:u.frontmatter,$frontmatter:u.frontmatter}),setup(){const l=s();l.meta.frontmatter=Object.assign(l.meta.frontmatter,u.frontmatter),n("pageData",u)}},h={id:"并发编程笔记",tabindex:"-1"},F=r("strong",null,"黑马java并发编程教程",-1),g={id:"一、进程与线程",tabindex:"-1"},m={id:"进程",tabindex:"-1"},b=r("ul",null,[r("li",null,"程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至 CPU，数据加载至内存。在指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存、管理 IO 的。"),r("li",null,"当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。"),r("li",null,"进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器 等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）")],-1),A={id:"线程",tabindex:"-1"},D=r("ul",null,[r("li",null,"一个进程之内可以分为一到多个线程。"),r("li",null,"一个线程就是一个指令流，将指令流中的一条条指令以一定的顺序交给 CPU 执行 。"),r("li",null,"Java 中，线程作为小调度单位，进程作为资源分配的小单位。 在 windows 中进程是不活动的，只是作 为线程的容器")],-1),v={id:"二者对比",tabindex:"-1"},C=r("ul",null,[r("li",null,[c("进程基本上相互独立的，而线程存在于进程内，是进程的一个子集 进程拥有共享的资源，如内存空间等，供其内部的线程共享 "),r("ul",null,[r("li",null,"进程间通信较为复杂 同一台计算机的进程通信称为 IPC（Inter-process communication）"),r("li",null,"不同计算机之间的进程通信，需要通过网络，并遵守共同的协议，例如 HTTP")])]),r("li",null,"线程通信相对简单，因为它们共享进程内的内存，一个例子是多个线程可以访问同一个共享变量"),r("li",null,"线程更轻量，线程上下文切换成本一般上要比进程上下文切换低")],-1),f={id:"进程和线程的切换",tabindex:"-1"},T=r("p",null,[r("strong",null,"上下文切换")],-1),B=r("p",null,[c("内核为每一个进程维持一个上下文。"),r("strong",null,"上下文就是内核重新启动一个被抢占的进程所需的状态"),c("。包括以下内容：")],-1),k=r("ul",null,[r("li",null,"通用目的寄存器"),r("li",null,"浮点寄存器"),r("li",null,"程序计数器"),r("li",null,"用户栈"),r("li",null,"状态寄存器"),r("li",null,"内核栈"),r("li",null,[c("各种内核数据结构：比如描绘地址空间的"),r("strong",null,"页表"),c("，包含有关当前进程信息的"),r("strong",null,"进程表"),c("，以及包含进程已打开文件的信息的"),r("strong",null,"文件表")])],-1),_=r("p",null,[r("strong",null,"进程切换和线程切换的主要区别")],-1),x=r("p",null,[c("最主要的一个区别在于"),r("strong",null,"进程切换涉及虚拟地址空间的切换而线程不会"),c("。因为每个进程都有自己的虚拟地址空间，而"),r("strong",null,"线程是共享所在进程的虚拟地址空间的"),c("，因此同一个进程中的线程进行线程切换时不涉及虚拟地址空间的转换")],-1),S=r("p",null,[c("页表查找是一个很慢的过程，因此通常使用cache来缓存常用的地址映射，这样可以加速页表查找，这个cache就是快表TLB（translation Lookaside Buffer，用来加速页表查找）。由于每个进程都有自己的虚拟地址空间，那么显然每个进程都有自己的页表，那么"),r("strong",null,"当进程切换后页表也要进行切换，页表切换后TLB就失效了"),c("，cache失效导致命中率降低，那么虚拟地址转换为物理地址就会变慢，表现出来的就是程序运行会变慢，而线程切换则不会导致TLB失效，因为线程线程无需切换地址空间，因此我们通常说线程切换要比较进程切换快")],-1),j=r("p",null,[c("而且还可能出现"),r("strong",null,"缺页中断"),c("，这就需要操作系统将需要的内容调入内存中，若内存已满则还需要将不用的内容调出内存，这也需要花费时间")],-1),w=r("p",null,[r("strong",null,"为什么TLB能加快访问速度")],-1),I=r("p",null,"快表可以避免每次都对页号进行地址的有效性判断。快表中保存了对应的物理块号，可以直接计算出物理地址，无需再进行有效性检查",-1),R={id:"_2、并发与并行",tabindex:"-1"},P=r("p",null,"单核 cpu 下，线程实际还是 串行执行 的。操作系统中有一个组件叫做任务调度器，将 cpu 的时间片（windows 下时间片最小约为 15 毫秒）分给不同的程序使用，只是由于 cpu 在线程间（时间片很短）的切换非常快，人类感 觉是 同时运行的 。 总结为一句话就是： 微观串行，宏观并行 ，一般会将这种 线程轮流使用 CPU 的做法称为并发（concurrent）",-1),M=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230711144528655.png",alt:"image-20230711144528655",loading:"lazy",decoding:"async"})],-1),J=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230711144538488.png",alt:"image-20230711144538488",loading:"lazy",decoding:"async"})],-1),L=r("p",null,"多核 cpu下，每个 核（core） 都可以调度运行线程，这时候线程可以是并行的。",-1),O=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230711144558304.png",alt:"image-20230711144558304",loading:"lazy",decoding:"async"})],-1),U=r("p",null,"并发是一个CPU在不同的时间去不同线程中执行指令。",-1),N=r("p",null,"并行是多个CPU同时处理不同的线程。",-1),K=r("p",null,"引用 Rob Pike 的一段描述：",-1),$=r("ul",null,[r("li",null,[c("并发（concurrent）是同一时间"),r("strong",null,"应对"),c("（dealing with）多件事情的能力")]),r("li",null,[c("并行（parallel）是同一时间"),r("strong",null,"动手做"),c("（doing）多件事情的能力")])],-1),z={id:"_3、应用",tabindex:"-1"},W={id:"应用之异步调用-案例1",tabindex:"-1"},H=r("p",null,"以调用方角度来讲，如果",-1),V=r("ul",null,[r("li",null,"需要等待结果返回，才能继续运行就是同步"),r("li",null,"不需要等待结果返回，就能继续运行就是异步")],-1),q={id:"_1-设计",tabindex:"-1"},G=r("strong",null,"1）设计",-1),X=r("p",null,"多线程可以让方法执行变为异步的（即不要巴巴干等着）比如说读取磁盘文件时，假设读取操作花费了 5 秒钟，如 果没有线程调度机制，这 5 秒 cpu 什么都做不了，其它代码都得暂停…",-1),Y={id:"_2-结论",tabindex:"-1"},Z=r("strong",null,"2）结论",-1),Q=r("ul",null,[r("li",null,"比如在项目中，视频文件需要转换格式等操作比较费时，这时开一个新线程处理视频转换，避免阻塞主线程"),r("li",null,"tomcat 的异步 servlet 也是类似的目的，让用户线程处理耗时较长的操作，避免阻塞"),r("li",null,"tomcat 的工作线程 ui 程序中，开线程进行其他操作，避免阻塞 ui 线程")],-1),ll={id:"应用之提高效率-案例1",tabindex:"-1"},sl=r("strong",null,"应用之提高效率（案例1）",-1),nl=r("p",null,"充分利用多核 cpu 的优势，提高运行效率。想象下面的场景，执行 3 个计算，最后将计算结果汇总。",-1),ol=r("div",{class:"language-SAS"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"SAS"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"计算 1 花费 10 ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"计算 2 花费 11 ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"计算 3 花费 9 ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"汇总需要 1 ms")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"计算 1 花费 10 ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"计算 2 花费 11 ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"计算 3 花费 9 ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"汇总需要 1 ms")])])])],-1),al=r("ul",null,[r("li",null,"如果是串行执行，那么总共花费的时间是 10 + 11 + 9 + 1 = 31ms"),r("li",null,"但如果是四核 cpu，各个核心分别使用线程 1 执行计算 1，线程 2 执行计算 2，线程 3 执行计算 3，那么 3 个线程是并行的，花费时间只取决于最长的那个线程运行的时间，即 11ms 最后加上汇总时间只会花费 12ms")],-1),el=r("blockquote",null,[r("p",null,[r("strong",null,"注意")]),r("p",null,"需要在多核 cpu 才能提高效率，单核仍然时是轮流执行")],-1),tl={id:"_1-设计-1",tabindex:"-1"},rl=r("strong",null,"1）设计",-1),cl=r("blockquote",null,[r("p",null,"代码见【应用之效率-案例1】<<<<<")],-1),pl={id:"_2-结论-1",tabindex:"-1"},El=r("strong",null,"2）结论",-1),yl=r("ol",null,[r("li",null,"单核 cpu 下，多线程不能实际提高程序运行效率，只是为了能够在不同的任务之间切换，不同线程轮流使用 cpu ，不至于一个线程总占用 cpu，别的线程没法干活"),r("li",null,[c("多核 cpu 可以并行跑多个线程，但能否提高程序运行效率还是要分情况的 "),r("ul",null,[r("li",null,"有些任务，经过精心设计，将任务拆分，并行执行，当然可以提高程序的运行效率。但不是所有计算任 务都能拆分（参考后文的【阿姆达尔定律】）"),r("li",null,"也不是所有任务都需要拆分，任务的目的如果不同，谈拆分和效率没啥意义")])]),r("li",null,"IO 操作不占用 cpu，只是我们一般拷贝文件使用的是【阻塞 IO】，这时相当于线程虽然不用 cpu，但需要一 直等待 IO 结束，没能充分利用线程。所以才有后面的【非阻塞 IO】和【异步 IO】优化")],-1),il={id:"二、java-线程",tabindex:"-1"},ul={id:"_1、创建一个线程-非主线程",tabindex:"-1"},dl={id:"方法一-通过继承thread创建线程",tabindex:"-1"},hl=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"CreateThread"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tThread myThread "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"MyThread"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"        "),r("span",{style:{color:"#6A737D"}},"// 启动线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tmyThread."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"MyThread"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"extends"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t@"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"run"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"my thread running..."'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"CreateThread"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tThread myThread "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"MyThread"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"        "),r("span",{style:{color:"#6A737D"}},"// 启动线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tmyThread."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"MyThread"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"extends"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t@"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"run"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"my thread running..."'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Fl=r("p",null,"使用继承方式的好处是，在run（）方法内获取当前线程直接使用this就可以了，无须使用Thread.currentThread（）方法；不好的地方是Java不支持多继承，如果继承了Thread类，那么就不能再继承其他类。另外任务与代码没有分离，当多个线程执行一样的任务时需要多份任务代码",-1),gl={id:"方法二-使用runnable配合thread-推荐",tabindex:"-1"},ml=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Test2"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//创建线程任务")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tRunnable r "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Runnable"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t@"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"run"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"Runnable running"'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t};")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//将Runnable对象传给Thread")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tThread t "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"(r);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//启动线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tt."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Test2"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//创建线程任务")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tRunnable r "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Runnable"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t@"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"run"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"Runnable running"'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t};")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//将Runnable对象传给Thread")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tThread t "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"(r);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//启动线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tt."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),bl=r("p",null,"或者",-1),Al=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"CreateThread2"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   "),r("span",{style:{color:"#F97583"}},"private"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"MyRunnable"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"implements"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Runnable"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      @"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      "),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"run"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"         System.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"my runnable running..."'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   }")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   "),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      MyRunnable myRunnable "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"MyRunnable"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      Thread thread "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"(myRunnable);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      thread."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"CreateThread2"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   "),r("span",{style:{color:"#D73A49"}},"private"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"MyRunnable"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"implements"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Runnable"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      @"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      "),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"run"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"         System.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"my runnable running..."'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   }")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   "),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      MyRunnable myRunnable "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"MyRunnable"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      Thread thread "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"(myRunnable);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      thread."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Dl=r("p",null,"通过实现Runnable接口，并且实现run()方法。在创建线程时作为参数传入该类的实例即可",-1),vl={id:"方法二的简化-使用lambda表达式简化操作",tabindex:"-1"},Cl=r("p",null,[r("strong",null,"当一个接口带有@FunctionalInterface注解时，是可以使用lambda来简化操作的")],-1),fl=r("p",null,"所以方法二中的代码可以被简化为",-1),Tl=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Test2"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//创建线程任务")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tRunnable r "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," () "),r("span",{style:{color:"#F97583"}},"->"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"            "),r("span",{style:{color:"#6A737D"}},"//直接写方法体即可")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"Runnable running"'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"Hello Thread"'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t};")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//将Runnable对象传给Thread")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tThread t "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"(r);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//启动线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tt."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Test2"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//创建线程任务")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tRunnable r "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," () "),r("span",{style:{color:"#D73A49"}},"->"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"            "),r("span",{style:{color:"#6A737D"}},"//直接写方法体即可")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"Runnable running"'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"Hello Thread"'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t};")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//将Runnable对象传给Thread")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tThread t "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"(r);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//启动线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tt."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Bl=r("p",null,"可以再Runnable上使用Alt+Enter",-1),kl=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608144534.png",alt:"img",loading:"lazy",decoding:"async"})],-1),_l={id:"原理之-thread-与-runnable-的关系",tabindex:"-1"},xl=r("p",null,[c("分析 Thread 的源码，理清它与 Runnable 的关系 "),r("strong",null,"小结")],-1),Sl=r("ul",null,[r("li",null,"方法1 是把线程和任务合并在了一起"),r("li",null,"方法2 是把线程和任务分开了"),r("li",null,"用 Runnable 更容易与线程池等高级 API 配合 用 Runnable 让任务类脱离了 Thread 继承体系，更灵活")],-1),jl={id:"方法三-使用futuretask与thread结合",tabindex:"-1"},wl=r("p",null,[r("strong",null,"使用FutureTask可以用泛型指定线程的返回值类型（Runnable的run方法没有返回值）")],-1),Il=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Test3"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") "),r("span",{style:{color:"#F97583"}},"throws"),r("span",{style:{color:"#E1E4E8"}}," ExecutionException, InterruptedException {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"        "),r("span",{style:{color:"#6A737D"}},"//需要传入一个Callable对象")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tFutureTask<"),r("span",{style:{color:"#F97583"}},"Integer"),r("span",{style:{color:"#E1E4E8"}},"> task "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," FutureTask<"),r("span",{style:{color:"#F97583"}},"Integer"),r("span",{style:{color:"#E1E4E8"}},">("),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," Callable<"),r("span",{style:{color:"#F97583"}},"Integer"),r("span",{style:{color:"#E1E4E8"}},">() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t@"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," Integer "),r("span",{style:{color:"#B392F0"}},"call"),r("span",{style:{color:"#E1E4E8"}},"() "),r("span",{style:{color:"#F97583"}},"throws"),r("span",{style:{color:"#E1E4E8"}}," Exception {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"线程执行!"'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\tThread."),r("span",{style:{color:"#B392F0"}},"sleep"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"1000"),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),r("span",{style:{color:"#F97583"}},"return"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#79B8FF"}},"100"),r("span",{style:{color:"#E1E4E8"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t});")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tThread r1 "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"(task, "),r("span",{style:{color:"#9ECBFF"}},'"t2"'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tr1."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//获取线程中方法执行后的返回结果")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"(task."),r("span",{style:{color:"#B392F0"}},"get"),r("span",{style:{color:"#E1E4E8"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Test3"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") "),r("span",{style:{color:"#D73A49"}},"throws"),r("span",{style:{color:"#24292E"}}," ExecutionException, InterruptedException {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"        "),r("span",{style:{color:"#6A737D"}},"//需要传入一个Callable对象")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tFutureTask<"),r("span",{style:{color:"#D73A49"}},"Integer"),r("span",{style:{color:"#24292E"}},"> task "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," FutureTask<"),r("span",{style:{color:"#D73A49"}},"Integer"),r("span",{style:{color:"#24292E"}},">("),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," Callable<"),r("span",{style:{color:"#D73A49"}},"Integer"),r("span",{style:{color:"#24292E"}},">() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t@"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," Integer "),r("span",{style:{color:"#6F42C1"}},"call"),r("span",{style:{color:"#24292E"}},"() "),r("span",{style:{color:"#D73A49"}},"throws"),r("span",{style:{color:"#24292E"}}," Exception {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"线程执行!"'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\tThread."),r("span",{style:{color:"#6F42C1"}},"sleep"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"1000"),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t"),r("span",{style:{color:"#D73A49"}},"return"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#005CC5"}},"100"),r("span",{style:{color:"#24292E"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t});")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tThread r1 "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"(task, "),r("span",{style:{color:"#032F62"}},'"t2"'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tr1."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//获取线程中方法执行后的返回结果")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"(task."),r("span",{style:{color:"#6F42C1"}},"get"),r("span",{style:{color:"#24292E"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Rl=r("p",null,"或",-1),Pl=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"UseFutureTask"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   "),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") "),r("span",{style:{color:"#F97583"}},"throws"),r("span",{style:{color:"#E1E4E8"}}," ExecutionException, InterruptedException {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      FutureTask<"),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"> futureTask "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," FutureTask<>("),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"MyCall"),r("span",{style:{color:"#E1E4E8"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      Thread thread "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"(futureTask);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      thread."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      "),r("span",{style:{color:"#6A737D"}},"// 获得线程运行后的返回值")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      System.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"(futureTask."),r("span",{style:{color:"#B392F0"}},"get"),r("span",{style:{color:"#E1E4E8"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"MyCall"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"implements"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Callable"),r("span",{style:{color:"#E1E4E8"}},"<"),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"> {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   @"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   "),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," String "),r("span",{style:{color:"#B392F0"}},"call"),r("span",{style:{color:"#E1E4E8"}},"() "),r("span",{style:{color:"#F97583"}},"throws"),r("span",{style:{color:"#E1E4E8"}}," Exception {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"      "),r("span",{style:{color:"#F97583"}},"return"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#9ECBFF"}},'"hello world"'),r("span",{style:{color:"#E1E4E8"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"   }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"UseFutureTask"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   "),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") "),r("span",{style:{color:"#D73A49"}},"throws"),r("span",{style:{color:"#24292E"}}," ExecutionException, InterruptedException {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      FutureTask<"),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"> futureTask "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," FutureTask<>("),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"MyCall"),r("span",{style:{color:"#24292E"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      Thread thread "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"(futureTask);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      thread."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      "),r("span",{style:{color:"#6A737D"}},"// 获得线程运行后的返回值")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      System.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"(futureTask."),r("span",{style:{color:"#6F42C1"}},"get"),r("span",{style:{color:"#24292E"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"MyCall"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"implements"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Callable"),r("span",{style:{color:"#24292E"}},"<"),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"> {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   @"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   "),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," String "),r("span",{style:{color:"#6F42C1"}},"call"),r("span",{style:{color:"#24292E"}},"() "),r("span",{style:{color:"#D73A49"}},"throws"),r("span",{style:{color:"#24292E"}}," Exception {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"      "),r("span",{style:{color:"#D73A49"}},"return"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#032F62"}},'"hello world"'),r("span",{style:{color:"#24292E"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"   }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Ml={id:"总结",tabindex:"-1"},Jl=r("p",null,[c("使用"),r("strong",null,"继承方式的好处是方便传参"),c("，你可以在子类里面添加成员变量，通过set方法设置参数或者通过构造函数进行传递，而如果使用Runnable方式，则只能使用主线程里面被声明为final的变量。"),r("strong",null,"不好的地方是Java不支持多继承"),c("，如果继承了Thread类，那么子类不能再继承其他类，而Runable则没有这个限制。"),r("strong",null,"前两种方式都没办法拿到任务的返回结果，但是Futuretask方式可以")],-1),Ll={id:"_2、原理之线程运行",tabindex:"-1"},Ol={id:"栈与栈帧",tabindex:"-1"},Ul=r("p",null,[c("Java Virtual Machine Stacks （Java 虚拟机栈） 我们都知道 JVM 中由堆、栈、方法区所组成，其中栈内存是给谁用的呢？其实就是线程，每个线程启动后，虚拟机就会为其分配一块"),r("strong",null,"栈内存")],-1),Nl=r("ul",null,[r("li",null,[c("每个栈由多个栈帧（Frame）组成，对应着每次"),r("strong",null,"方法调用时所占用的内存")]),r("li",null,"每个线程只能有一个活动栈帧，对应着当前正在执行的那个方法")],-1),Kl={id:"线程上下文切换-thread-context-switch",tabindex:"-1"},$l=r("p",null,"因为以下一些原因导致 cpu 不再执行当前的线程，转而执行另一个线程的代码",-1),zl=r("ul",null,[r("li",null,"线程的 cpu 时间片用完"),r("li",null,"垃圾回收 有更高优先级的线程需要运行"),r("li",null,"线程自己调用了 sleep、yield、wait、join、park、synchronized、lock 等方法")],-1),Wl=r("p",null,"当 Context Switch 发生时，需要由操作系统保存当前线程的状态，并恢复另一个线程的状态，Java 中对应的概念 就是程序计数器（Program Counter Register），它的作用是记住下一条 jvm 指令的执行地址，是线程私有的",-1),Hl=r("ul",null,[r("li",null,"状态包括程序计数器、虚拟机栈中每个栈帧的信息，如局部变量、操作数栈、返回地址等"),r("li",null,"Context Switch 频繁发生会影响性能")],-1),Vl={id:"_3、常用方法",tabindex:"-1"},ql={id:"_1-start-vs-run",tabindex:"-1"},Gl={id:"调用-run",tabindex:"-1"},Xl=r("strong",null,"调用 run",-1),Yl=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] args) {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    Thread t1 "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"t1"'),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    @"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    "),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"run"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"        log."),r("span",{style:{color:"#B392F0"}},"debug"),r("span",{style:{color:"#E1E4E8"}},"(Thread."),r("span",{style:{color:"#B392F0"}},"currentThread"),r("span",{style:{color:"#E1E4E8"}},"()."),r("span",{style:{color:"#B392F0"}},"getName"),r("span",{style:{color:"#E1E4E8"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"        FileReader."),r("span",{style:{color:"#B392F0"}},"read"),r("span",{style:{color:"#E1E4E8"}},"(Constants.MP4_FULL_PATH);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"        }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    };")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    t1."),r("span",{style:{color:"#B392F0"}},"run"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    log."),r("span",{style:{color:"#B392F0"}},"debug"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"do other things ..."'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] args) {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    Thread t1 "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"t1"'),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    @"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    "),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"run"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"        log."),r("span",{style:{color:"#6F42C1"}},"debug"),r("span",{style:{color:"#24292E"}},"(Thread."),r("span",{style:{color:"#6F42C1"}},"currentThread"),r("span",{style:{color:"#24292E"}},"()."),r("span",{style:{color:"#6F42C1"}},"getName"),r("span",{style:{color:"#24292E"}},"());")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"        FileReader."),r("span",{style:{color:"#6F42C1"}},"read"),r("span",{style:{color:"#24292E"}},"(Constants.MP4_FULL_PATH);")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"        }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    };")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    t1."),r("span",{style:{color:"#6F42C1"}},"run"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    log."),r("span",{style:{color:"#6F42C1"}},"debug"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"do other things ..."'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Zl=r("p",null,"输出：",-1),Ql=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230712000923794.png",alt:"image-20230712000923794",loading:"lazy",decoding:"async"})],-1),ls=r("p",null,[c("程序仍在 main 线程运行， "),r("code",null,"FileReader.read()"),c(" 方法调用还是同步的")],-1),ss={id:"调用-start",tabindex:"-1"},ns=r("strong",null,"调用 start",-1),os=r("p",null,[c("将上述代码的 "),r("code",null,"t1.run()"),c(" 改为"),r("code",null,"t1.start();"),c("输出：")],-1),as=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/image-20230712001043087.png",alt:"image-20230712001043087",loading:"lazy",decoding:"async"})],-1),es={id:"小结",tabindex:"-1"},ts=r("strong",null,"小结",-1),rs=r("p",null,"直接调用 run 是在主线程中执行了 run，没有启动新的线程 使用 start 是启动新的线程，通过新的线程间接执行 run 中的代码",-1),cs=r("blockquote",null,[r("p",null,[r("strong",null,"为什么调用start()方法时会执行run()方法，那怎么不直接调用run()方法？")]),r("p",null,"JVM执行start方法，会先创建一条线程，由创建出来的新线程去执行thread的run方法，这才起到多线程的效果。"),r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/javathread-5.png",alt:"start方法",loading:"lazy",decoding:"async"})]),r("p",null,[r("strong",null,"为什么我们不能直接调用run()方法"),c("？也很清楚， 如果直接调用Thread的run()方法，那么run方法还是运行在主线程中，相当于顺序执行，就起不到多线程的效果。")])],-1),ps={id:"_2-sleep-与yield",tabindex:"-1"},Es={id:"sleep-使线程阻塞",tabindex:"-1"},ys=r("strong",null,"sleep",-1),is=r("ol",null,[r("li",null,[r("p",null,[c("调用 sleep 会让当前线程从 "),r("strong",null,"Running 进入 Timed Waiting 状态（阻塞）"),c("，可通过state()方法查看")])]),r("li",null,[r("p",null,[c("其它线程可以使用 "),r("strong",null,"interrupt"),c(" 方法打断正在睡眠的线程，这时 sleep 方法会抛出 InterruptedException")])]),r("li",null,[r("p",null,"睡眠结束后的线程未必会立刻得到执行")]),r("li",null,[r("p",null,[c("建议用 "),r("strong",null,"TimeUnit 的 sleep"),c(" 代替 Thread 的 sleep 来获得更好的可读性 。如：")]),r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//休眠一秒")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"TimeUnit.SECONDS."),r("span",{style:{color:"#B392F0"}},"sleep"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"1"),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//休眠一分钟")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"TimeUnit.MINUTES."),r("span",{style:{color:"#B392F0"}},"sleep"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"1"),r("span",{style:{color:"#E1E4E8"}},");")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//休眠一秒")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"TimeUnit.SECONDS."),r("span",{style:{color:"#6F42C1"}},"sleep"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"1"),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//休眠一分钟")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"TimeUnit.MINUTES."),r("span",{style:{color:"#6F42C1"}},"sleep"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"1"),r("span",{style:{color:"#24292E"}},");")])])])])])],-1),us={id:"yield-让出当前线程",tabindex:"-1"},ds=r("ol",null,[r("li",null,[c("调用 yield 会让当前线程从 "),r("strong",null,"Running 进入 Runnable 就绪状态"),c("（仍然有可能被执行），然后调度执行其它线程")]),r("li",null,"具体的实现依赖于操作系统的任务调度器")],-1),hs={id:"线程优先级",tabindex:"-1"},Fs=r("ul",null,[r("li",null,[r("p",null,"线程优先级会提示（hint）调度器优先调度该线程，但它仅仅是一个提示，调度器可以忽略它")]),r("li",null,[r("p",null,"如果 cpu 比较忙，那么优先级高的线程会获得更多的时间片，但 cpu 闲时，优先级几乎没作用")]),r("li",null,[r("p",null,"设置方法："),r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"thread1."),r("span",{style:{color:"#B392F0"}},"setPriority"),r("span",{style:{color:"#E1E4E8"}},"(Thread.MAX_PRIORITY); "),r("span",{style:{color:"#6A737D"}},"//设置为优先级最高")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"thread1."),r("span",{style:{color:"#6F42C1"}},"setPriority"),r("span",{style:{color:"#24292E"}},"(Thread.MAX_PRIORITY); "),r("span",{style:{color:"#6A737D"}},"//设置为优先级最高")])])])])])],-1),gs={id:"_3-join-方法",tabindex:"-1"},ms=r("p",null,"用于等待某个线程结束。哪个线程内调用join()方法，就等待哪个线程结束，然后再去执行其他线程。",-1),bs=r("p",null,"如在主线程中调用ti.join()，则是主线程等待t1线程结束",-1),As=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"Thread thread "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//等待thread线程执行结束")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"thread."),r("span",{style:{color:"#B392F0"}},"join"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//最多等待1000ms,如果1000ms内线程执行完毕，则会直接执行下面的语句，不会等够1000ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"thread."),r("span",{style:{color:"#B392F0"}},"join"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"1000"),r("span",{style:{color:"#E1E4E8"}},");")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"Thread thread "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//等待thread线程执行结束")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"thread."),r("span",{style:{color:"#6F42C1"}},"join"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//最多等待1000ms,如果1000ms内线程执行完毕，则会直接执行下面的语句，不会等够1000ms")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"thread."),r("span",{style:{color:"#6F42C1"}},"join"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"1000"),r("span",{style:{color:"#24292E"}},");")])])])],-1),Ds={id:"_4-interrupt-方法",tabindex:"-1"},vs=r("p",null,[c("用于打断"),r("strong",null,"阻塞"),c("(sleep wait join…)的线程。 处于阻塞状态的线程，CPU不会给其分配时间片。")],-1),Cs=r("ul",null,[r("li",null,"如果一个线程正在运行中被打断，打断标记会被置为true。"),r("li",null,"如果是打断因sleep wait join方法而被阻塞的线程，会将打断标记置为false")],-1),fs=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//用于查看打断标记，返回值被boolean类型，不会清除 打断标记")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"t1."),r("span",{style:{color:"#B392F0"}},"isInterrupted"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//判断当前线程是否被打断，会清除 打断标记")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"t1."),r("span",{style:{color:"#B392F0"}},"interrupted"),r("span",{style:{color:"#E1E4E8"}},"();")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//用于查看打断标记，返回值被boolean类型，不会清除 打断标记")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"t1."),r("span",{style:{color:"#6F42C1"}},"isInterrupted"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"//判断当前线程是否被打断，会清除 打断标记")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"t1."),r("span",{style:{color:"#6F42C1"}},"interrupted"),r("span",{style:{color:"#24292E"}},"();")])])])],-1),Ts=r("p",null,[c("正常运行的线程在被打断后，"),r("strong",null,"不会停止"),c("，会继续执行。如果要让线程在被打断后停下来，需要"),r("strong",null,"使用打断标记来判断"),c("。")],-1),Bs=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"while"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"true"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    "),r("span",{style:{color:"#F97583"}},"if"),r("span",{style:{color:"#E1E4E8"}},"(Thread."),r("span",{style:{color:"#B392F0"}},"currentThread"),r("span",{style:{color:"#E1E4E8"}},"()."),r("span",{style:{color:"#B392F0"}},"isInterrupted"),r("span",{style:{color:"#E1E4E8"}},"()) {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"        "),r("span",{style:{color:"#F97583"}},"break"),r("span",{style:{color:"#E1E4E8"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"    }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"while"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"true"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    "),r("span",{style:{color:"#D73A49"}},"if"),r("span",{style:{color:"#24292E"}},"(Thread."),r("span",{style:{color:"#6F42C1"}},"currentThread"),r("span",{style:{color:"#24292E"}},"()."),r("span",{style:{color:"#6F42C1"}},"isInterrupted"),r("span",{style:{color:"#24292E"}},"()) {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"        "),r("span",{style:{color:"#D73A49"}},"break"),r("span",{style:{color:"#24292E"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"    }")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),ks={id:"interrupt方法的应用——两阶段终止模式",tabindex:"-1"},_s=r("strong",null,"interrupt方法的应用",-1),xs=r("p",null,[c("当我们在执行线程一时，想要终止线程二，这是就需要使用interrupt方法来"),r("strong",null,"优雅"),c("的停止线程二。")],-1),Ss=r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608144553.png",alt:"img",style:{zoom:"67%"}},null,-1),js=r("p",null,[r("strong",null,"代码")],-1),ws=r("div",{class:"language-java"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"},"java"),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Test7"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"static"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"main"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#F97583"}},"String"),r("span",{style:{color:"#E1E4E8"}},"[] "),r("span",{style:{color:"#FFAB70"}},"args"),r("span",{style:{color:"#E1E4E8"}},") "),r("span",{style:{color:"#F97583"}},"throws"),r("span",{style:{color:"#E1E4E8"}}," InterruptedException {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tMonitor monitor "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Monitor"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tmonitor."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tThread."),r("span",{style:{color:"#B392F0"}},"sleep"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"3500"),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tmonitor."),r("span",{style:{color:"#B392F0"}},"stop"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#F97583"}},"class"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Monitor"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\tThread monitor;")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t/**")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t * 启动监控器线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t */")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//设置线控器线程，用于监控线程状态")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tmonitor "),r("span",{style:{color:"#F97583"}},"="),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"new"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"Thread"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t@"),r("span",{style:{color:"#F97583"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"run"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),r("span",{style:{color:"#6A737D"}},"//开始不停的监控")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t"),r("span",{style:{color:"#F97583"}},"while"),r("span",{style:{color:"#E1E4E8"}}," ("),r("span",{style:{color:"#79B8FF"}},"true"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"                    "),r("span",{style:{color:"#6A737D"}},"//判断当前线程是否被打断了")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t"),r("span",{style:{color:"#F97583"}},"if"),r("span",{style:{color:"#E1E4E8"}},"(Thread."),r("span",{style:{color:"#B392F0"}},"currentThread"),r("span",{style:{color:"#E1E4E8"}},"()."),r("span",{style:{color:"#B392F0"}},"isInterrupted"),r("span",{style:{color:"#E1E4E8"}},"()) {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"处理后续任务"'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"                        "),r("span",{style:{color:"#6A737D"}},"//终止线程执行")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\t"),r("span",{style:{color:"#F97583"}},"break"),r("span",{style:{color:"#E1E4E8"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\tSystem.out."),r("span",{style:{color:"#B392F0"}},"println"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#9ECBFF"}},'"监控器运行中..."'),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t"),r("span",{style:{color:"#F97583"}},"try"),r("span",{style:{color:"#E1E4E8"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\t"),r("span",{style:{color:"#6A737D"}},"//线程休眠")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\tThread."),r("span",{style:{color:"#B392F0"}},"sleep"),r("span",{style:{color:"#E1E4E8"}},"("),r("span",{style:{color:"#79B8FF"}},"1000"),r("span",{style:{color:"#E1E4E8"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t} "),r("span",{style:{color:"#F97583"}},"catch"),r("span",{style:{color:"#E1E4E8"}}," (InterruptedException "),r("span",{style:{color:"#FFAB70"}},"e"),r("span",{style:{color:"#E1E4E8"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\te."),r("span",{style:{color:"#B392F0"}},"printStackTrace"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\t"),r("span",{style:{color:"#6A737D"}},"//如果是在休眠的时候被打断，不会将打断标记设置为true，这时要重新设置打断标记")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t\tThread."),r("span",{style:{color:"#B392F0"}},"currentThread"),r("span",{style:{color:"#E1E4E8"}},"()."),r("span",{style:{color:"#B392F0"}},"interrupt"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t};")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tmonitor."),r("span",{style:{color:"#B392F0"}},"start"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t/**")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t * \t用于停止监控器线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t */")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t"),r("span",{style:{color:"#F97583"}},"public"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#F97583"}},"void"),r("span",{style:{color:"#E1E4E8"}}," "),r("span",{style:{color:"#B392F0"}},"stop"),r("span",{style:{color:"#E1E4E8"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//打断线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t\tmonitor."),r("span",{style:{color:"#B392F0"}},"interrupt"),r("span",{style:{color:"#E1E4E8"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#E1E4E8"}},"}")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Test7"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"static"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"main"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#D73A49"}},"String"),r("span",{style:{color:"#24292E"}},"[] "),r("span",{style:{color:"#E36209"}},"args"),r("span",{style:{color:"#24292E"}},") "),r("span",{style:{color:"#D73A49"}},"throws"),r("span",{style:{color:"#24292E"}}," InterruptedException {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tMonitor monitor "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Monitor"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tmonitor."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tThread."),r("span",{style:{color:"#6F42C1"}},"sleep"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"3500"),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tmonitor."),r("span",{style:{color:"#6F42C1"}},"stop"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#D73A49"}},"class"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Monitor"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\tThread monitor;")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t/**")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t * 启动监控器线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t */")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//设置线控器线程，用于监控线程状态")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tmonitor "),r("span",{style:{color:"#D73A49"}},"="),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"new"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"Thread"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t@"),r("span",{style:{color:"#D73A49"}},"Override")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"run"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t"),r("span",{style:{color:"#6A737D"}},"//开始不停的监控")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t"),r("span",{style:{color:"#D73A49"}},"while"),r("span",{style:{color:"#24292E"}}," ("),r("span",{style:{color:"#005CC5"}},"true"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"                    "),r("span",{style:{color:"#6A737D"}},"//判断当前线程是否被打断了")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t"),r("span",{style:{color:"#D73A49"}},"if"),r("span",{style:{color:"#24292E"}},"(Thread."),r("span",{style:{color:"#6F42C1"}},"currentThread"),r("span",{style:{color:"#24292E"}},"()."),r("span",{style:{color:"#6F42C1"}},"isInterrupted"),r("span",{style:{color:"#24292E"}},"()) {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"处理后续任务"'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"                        "),r("span",{style:{color:"#6A737D"}},"//终止线程执行")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\t"),r("span",{style:{color:"#D73A49"}},"break"),r("span",{style:{color:"#24292E"}},";")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\tSystem.out."),r("span",{style:{color:"#6F42C1"}},"println"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#032F62"}},'"监控器运行中..."'),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t"),r("span",{style:{color:"#D73A49"}},"try"),r("span",{style:{color:"#24292E"}}," {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\t"),r("span",{style:{color:"#6A737D"}},"//线程休眠")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\tThread."),r("span",{style:{color:"#6F42C1"}},"sleep"),r("span",{style:{color:"#24292E"}},"("),r("span",{style:{color:"#005CC5"}},"1000"),r("span",{style:{color:"#24292E"}},");")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t} "),r("span",{style:{color:"#D73A49"}},"catch"),r("span",{style:{color:"#24292E"}}," (InterruptedException "),r("span",{style:{color:"#E36209"}},"e"),r("span",{style:{color:"#24292E"}},") {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\te."),r("span",{style:{color:"#6F42C1"}},"printStackTrace"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\t"),r("span",{style:{color:"#6A737D"}},"//如果是在休眠的时候被打断，不会将打断标记设置为true，这时要重新设置打断标记")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t\tThread."),r("span",{style:{color:"#6F42C1"}},"currentThread"),r("span",{style:{color:"#24292E"}},"()."),r("span",{style:{color:"#6F42C1"}},"interrupt"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t};")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tmonitor."),r("span",{style:{color:"#6F42C1"}},"start"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"}),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t/**")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t * \t用于停止监控器线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#6A737D"}},"\t */")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t"),r("span",{style:{color:"#D73A49"}},"public"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#D73A49"}},"void"),r("span",{style:{color:"#24292E"}}," "),r("span",{style:{color:"#6F42C1"}},"stop"),r("span",{style:{color:"#24292E"}},"() {")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\t"),r("span",{style:{color:"#6A737D"}},"//打断线程")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t\tmonitor."),r("span",{style:{color:"#6F42C1"}},"interrupt"),r("span",{style:{color:"#24292E"}},"();")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"\t}")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292E"}},"}")])])])],-1),Is={id:"_5-不推荐使用的打断方法",tabindex:"-1"},Rs=r("ul",null,[r("li",null,"stop方法 停止线程运行（可能造成共享资源无法被释放，其他线程无法使用这些共享资源）"),r("li",null,"suspend（暂停线程）/resume（恢复线程）方法")],-1),Ps={id:"_6-守护线程",tabindex:"-1"},Ms=r("p",null,[c("当JAVA进程中有多个线程在执行时，只有当所有非守护线程都执行完毕后，JAVA进程才会结束。"),r("strong",null,"但当非守护线程全部执行完毕后，守护线程无论是否执行完毕，也会一同结束。")],-1),Js=r("div",{class:"language-"},[r("button",{title:"Copy Code",class:"copy"}),r("span",{class:"lang"}),r("pre",{class:"shiki github-dark vp-code-dark"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#e1e4e8"}},"//将线程设置为守护线程, 默认为false")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#e1e4e8"}},"monitor.setDaemon(true);")])])]),r("pre",{class:"shiki github-light vp-code-light"},[r("code",null,[r("span",{class:"line"},[r("span",{style:{color:"#24292e"}},"//将线程设置为守护线程, 默认为false")]),c("\n"),r("span",{class:"line"},[r("span",{style:{color:"#24292e"}},"monitor.setDaemon(true);")])])])],-1),Ls=r("p",null,[r("strong",null,"守护线程的应用")],-1),Os=r("ul",null,[r("li",null,"垃圾回收器线程就是一种守护线程"),r("li",null,"Tomcat 中的 Acceptor 和 Poller 线程都是守护线程，所以 Tomcat 接收到 shutdown 命令后，不会等 待它们处理完当前请求")],-1),Us={id:"_4、线程的状态",tabindex:"-1"},Ns={id:"_1-五种状态",tabindex:"-1"},Ks=r("p",null,[c("这是从 "),r("strong",null,"操作系统"),c(" 层面来描述的")],-1),$s=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608144606.png",alt:"img",loading:"lazy",decoding:"async"})],-1),zs=r("ul",null,[r("li",null,"【初始状态】仅是在语言层面创建了线程对象，还未与操作系统线程关联（例如线程调用了start方法）"),r("li",null,"【可运行状态】（就绪状态）指该线程已经被创建（与操作系统线程关联），可以由 CPU 调度执行"),r("li",null,[c("【运行状态】指获取了 CPU 时间片运行中的状态 "),r("ul",null,[r("li",null,"当 CPU 时间片用完，会从【运行状态】转换至【可运行状态】，会导致线程的上下文切换")])]),r("li",null,[c("【阻塞状态】 "),r("ul",null,[r("li",null,"如果调用了阻塞 API，如 BIO 读写文件，这时该线程实际不会用到 CPU，会导致线程上下文切换，进入 【阻塞状态】"),r("li",null,"等 BIO 操作完毕，会由操作系统唤醒阻塞的线程，转换至【可运行状态】"),r("li",null,"与【可运行状态】的区别是，对【阻塞状态】的线程来说只要它们一直不唤醒，调度器就一直不会考虑调度它们")])]),r("li",null,"【终止状态】表示线程已经执行完毕，生命周期已经结束，不会再转换为其它状态")],-1),Ws={id:"_2-六种状态",tabindex:"-1"},Hs=r("p",null,[c("这是从 "),r("strong",null,"Java API"),c(" 层面来描述的 根据 "),r("code",null,"Thread.State"),c(" 枚举，分为六种状态")],-1),Vs=r("figure",null,[r("img",{src:"https://jsd.onmicrosoft.cn/gh/imLKlauS/blog-picture@main/blogs/20200608144621.png",alt:"img",loading:"lazy",decoding:"async"})],-1),qs=r("ul",null,[r("li",null,[r("strong",null,"NEW"),c(" 线程刚被创建，但是还没有调用 start() 方法")]),r("li",null,[r("strong",null,"RUNNABLE"),c(" 当调用了 start() 方法之后，注意，Java API 层面的 RUNNABLE 状态涵盖了操作系统层面的 【可运行状态】、【运行状态】和【阻塞状态】（由于 BIO 导致的线程阻塞，在 Java 里无法区分，仍然认为 是可运行）")]),r("li",null,[r("strong",null,"BLOCKED ， WAITING ， TIMED_WAITING"),c(" 都是 "),r("strong",null,"Java API 层面"),c("对【阻塞状态】的细分，如sleep就位TIMED_WAITING， join为WAITING状态。后面会在状态转换一节详述。")]),r("li",null,[r("strong",null,"TERMINATED"),c(" 当线程代码运行结束")])],-1);const Gs=l(d,[["render",function(l,s,n,i,u,d){const Gs=y,Xs=e;return t(),o(Xs,{frontmatter:u.frontmatter,data:u.data},{"main-content-md":a((()=>[r("h1",h,[c("并发编程笔记 "),p(Gs,{class:"header-anchor",href:"#并发编程笔记","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("p",null,[c("本博客根据"),F,c("学习而做的笔记，链接如下："),p(Gs,{href:"https://www.bilibili.com/video/av81461839?from=search&seid=8445102345230304010",target:"_blank",rel:"noreferrer"},{default:a((()=>[c("深入学习Java并发")])),_:1})]),r("h2",g,[c("一、进程与线程 "),p(Gs,{class:"header-anchor",href:"#一、进程与线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h3",m,[c("进程 "),p(Gs,{class:"header-anchor",href:"#进程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),b,r("h3",A,[c("线程 "),p(Gs,{class:"header-anchor",href:"#线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),D,r("h3",v,[c("二者对比 "),p(Gs,{class:"header-anchor",href:"#二者对比","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),C,r("h4",f,[c("进程和线程的切换 "),p(Gs,{class:"header-anchor",href:"#进程和线程的切换","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),T,B,k,_,x,S,j,w,I,r("h3",R,[c("2、并发与并行 "),p(Gs,{class:"header-anchor",href:"#_2、并发与并行","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),P,M,J,L,O,U,N,K,$,r("h3",z,[c("3、应用 "),p(Gs,{class:"header-anchor",href:"#_3、应用","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h4",W,[c("应用之异步调用（案例1） "),p(Gs,{class:"header-anchor",href:"#应用之异步调用-案例1","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),H,V,r("h5",q,[G,c(),p(Gs,{class:"header-anchor",href:"#_1-设计","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),X,r("h5",Y,[Z,c(),p(Gs,{class:"header-anchor",href:"#_2-结论","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Q,r("h4",ll,[sl,c(),p(Gs,{class:"header-anchor",href:"#应用之提高效率-案例1","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),nl,ol,al,el,r("h5",tl,[rl,c(),p(Gs,{class:"header-anchor",href:"#_1-设计-1","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),cl,r("h5",pl,[El,c(),p(Gs,{class:"header-anchor",href:"#_2-结论-1","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),yl,r("h2",il,[c("二、Java 线程 "),p(Gs,{class:"header-anchor",href:"#二、java-线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h3",ul,[c("1、创建一个线程（非主线程） "),p(Gs,{class:"header-anchor",href:"#_1、创建一个线程-非主线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h4",dl,[c("方法一：通过继承Thread创建线程 "),p(Gs,{class:"header-anchor",href:"#方法一-通过继承thread创建线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),hl,Fl,r("h4",gl,[c("方法二：使用Runnable配合Thread(推荐) "),p(Gs,{class:"header-anchor",href:"#方法二-使用runnable配合thread-推荐","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),ml,bl,Al,Dl,r("h5",vl,[c("方法二的简化：使用lambda表达式简化操作 "),p(Gs,{class:"header-anchor",href:"#方法二的简化-使用lambda表达式简化操作","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Cl,fl,Tl,Bl,kl,r("h5",_l,[c("原理之 Thread 与 Runnable 的关系 "),p(Gs,{class:"header-anchor",href:"#原理之-thread-与-runnable-的关系","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),xl,Sl,r("h5",jl,[c("方法三：使用FutureTask与Thread结合 "),p(Gs,{class:"header-anchor",href:"#方法三-使用futuretask与thread结合","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),wl,Il,Rl,Pl,r("h5",Ml,[c("总结 "),p(Gs,{class:"header-anchor",href:"#总结","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Jl,r("h3",Ll,[c("2、原理之线程运行 "),p(Gs,{class:"header-anchor",href:"#_2、原理之线程运行","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h4",Ol,[c("栈与栈帧 "),p(Gs,{class:"header-anchor",href:"#栈与栈帧","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Ul,Nl,r("h4",Kl,[c("线程上下文切换（Thread Context Switch） "),p(Gs,{class:"header-anchor",href:"#线程上下文切换-thread-context-switch","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),$l,zl,Wl,Hl,r("h3",Vl,[c("3、常用方法 "),p(Gs,{class:"header-anchor",href:"#_3、常用方法","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h4",ql,[c("(1)start() vs run() "),p(Gs,{class:"header-anchor",href:"#_1-start-vs-run","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h5",Gl,[Xl,c(),p(Gs,{class:"header-anchor",href:"#调用-run","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Yl,Zl,Ql,ls,r("h5",ss,[ns,c(),p(Gs,{class:"header-anchor",href:"#调用-start","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),os,as,r("h5",es,[ts,c(),p(Gs,{class:"header-anchor",href:"#小结","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),rs,cs,r("h4",ps,[c("(2)sleep()与yield() "),p(Gs,{class:"header-anchor",href:"#_2-sleep-与yield","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h5",Es,[ys,c(" (使线程阻塞) "),p(Gs,{class:"header-anchor",href:"#sleep-使线程阻塞","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),is,r("h5",us,[c("yield （让出当前线程） "),p(Gs,{class:"header-anchor",href:"#yield-让出当前线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),ds,r("h5",hs,[c("线程优先级 "),p(Gs,{class:"header-anchor",href:"#线程优先级","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Fs,r("h4",gs,[c("(3)join()方法 "),p(Gs,{class:"header-anchor",href:"#_3-join-方法","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),ms,bs,As,r("h4",Ds,[c("(4)interrupt()方法 "),p(Gs,{class:"header-anchor",href:"#_4-interrupt-方法","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),vs,Cs,fs,Ts,Bs,r("h5",ks,[_s,c("——两阶段终止模式 "),p(Gs,{class:"header-anchor",href:"#interrupt方法的应用——两阶段终止模式","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),xs,Ss,js,ws,r("h4",Is,[c("(5)不推荐使用的打断方法 "),p(Gs,{class:"header-anchor",href:"#_5-不推荐使用的打断方法","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Rs,r("h4",Ps,[c("(6)守护线程 "),p(Gs,{class:"header-anchor",href:"#_6-守护线程","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Ms,Js,Ls,Os,r("h3",Us,[c("4、线程的状态 "),p(Gs,{class:"header-anchor",href:"#_4、线程的状态","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),r("h4",Ns,[c("(1)五种状态 "),p(Gs,{class:"header-anchor",href:"#_1-五种状态","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Ks,$s,zs,r("h4",Ws,[c("(2)六种状态 "),p(Gs,{class:"header-anchor",href:"#_2-六种状态","aria-hidden":"true"},{default:a((()=>[c("#")])),_:1})]),Hs,Vs,qs])),"main-header":a((()=>[E(l.$slots,"main-header")])),"main-header-after":a((()=>[E(l.$slots,"main-header-after")])),"main-nav":a((()=>[E(l.$slots,"main-nav")])),"main-content":a((()=>[E(l.$slots,"main-content")])),"main-content-after":a((()=>[E(l.$slots,"main-content-after")])),"main-nav-before":a((()=>[E(l.$slots,"main-nav-before")])),"main-nav-after":a((()=>[E(l.$slots,"main-nav-after")])),comment:a((()=>[E(l.$slots,"comment")])),footer:a((()=>[E(l.$slots,"footer")])),aside:a((()=>[E(l.$slots,"aside")])),"aside-custom":a((()=>[E(l.$slots,"aside-custom")])),default:a((()=>[E(l.$slots,"default")])),_:3},8,["frontmatter","data"])}]]);export{i as __pageData,Gs as default};
